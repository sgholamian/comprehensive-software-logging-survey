
@article{rockai_reproducible_2021,
	title = {Reproducible execution of {POSIX} programs with {DiOS}},
	volume = {20},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-020-00837-y},
	doi = {10.1007/s10270-020-00837-y},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Ročkai, Petr and Baranová, Zuzana and Mrázek, Jan and Kejstová, Katarína and Barnat, Jiříí},
	month = apr,
	year = {2021},
	pages = {363--382},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\UZF7CWSX\\Ročkai et al. - 2021 - Reproducible execution of POSIX programs with DiOS.pdf:application/pdf},
}

@article{liu_exploratory_2021,
	title = {An exploratory study on the introduction and removal of different types of technical debt in deep learning frameworks},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09917-5},
	doi = {10.1007/s10664-020-09917-5},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Liu, Jiakun and Huang, Qiao and Xia, Xin and Shihab, Emad and Lo, David and Li, Shanping},
	month = mar,
	year = {2021},
	pages = {16},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\XPEUB7MB\\Liu et al. - 2021 - An exploratory study on the introduction and remov.pdf:application/pdf},
}

@article{soto-valero_comprehensive_2021,
	title = {A comprehensive study of bloated dependencies in the {Maven} ecosystem},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-020-09914-8},
	doi = {10.1007/s10664-020-09914-8},
	abstract = {Abstract
            
              Build automation tools and package managers have a profound influence on software development. They facilitate the reuse of third-party libraries, support a clear separation between the application’s code and its external dependencies, and automate several software development tasks. However, the wide adoption of these tools introduces new challenges related to dependency management. In this paper, we propose an original study of one such challenge: the emergence of bloated dependencies. Bloated dependencies are libraries that are packaged with the application’s compiled code but that are actually not necessary to build and run the application. They artificially grow the size of the built binary and increase maintenance effort. We propose
              DepClean
              , a tool to determine the presence of bloated dependencies in Maven artifacts. We analyze 9,639 Java artifacts hosted on Maven Central, which include a total of 723,444 dependency relationships. Our key result is as follows: 2.7\% of the dependencies directly declared are bloated, 15.4\% of the inherited dependencies are bloated, and 57\% of the transitive dependencies of the studied artifacts are bloated. In other words, it is feasible to reduce the number of dependencies of Maven artifacts to 1/4 of its current count. Our qualitative assessment with 30 notable open-source projects indicates that developers pay attention to their dependencies when they are notified of the problem. They are willing to remove bloated dependencies: 21/26 answered pull requests were accepted and merged by developers, removing 140 dependencies in total: 75 direct and 65 transitive.},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Soto-Valero, César and Harrand, Nicolas and Monperrus, Martin and Baudry, Benoit},
	month = may,
	year = {2021},
	pages = {45},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\IA6NKM2E\\Soto-Valero et al. - 2021 - A comprehensive study of bloated dependencies in t.pdf:application/pdf},
}

@article{pellegrin_task_2021,
	title = {Task estimation for software company employees based on computer interaction logs},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-10006-4},
	doi = {10.1007/s10664-021-10006-4},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Pellegrin, Florian and Yücel, Zeynep and Monden, Akito and Leelaprute, Pattara},
	month = sep,
	year = {2021},
	pages = {98},
}

@article{mahendiran_comprehensive_2021,
	title = {A {Comprehensive} {Analysis} on {Image} {Encryption} and {Compression} {Techniques} with the {Assessment} of {Performance} {Evaluation} {Metrics}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-020-00397-4},
	doi = {10.1007/s42979-020-00397-4},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Mahendiran, N. and Deepa, C.},
	month = feb,
	year = {2021},
	pages = {29},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\ZPVBL38S\\Mahendiran and Deepa - 2021 - A Comprehensive Analysis on Image Encryption and C.pdf:application/pdf},
}

@article{gharibi_automated_2021,
	title = {Automated end-to-end management of the modeling lifecycle in deep learning},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09894-9},
	doi = {10.1007/s10664-020-09894-9},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Gharibi, Gharib and Walunj, Vijay and Nekadi, Raju and Marri, Raj and Lee, Yugyung},
	month = mar,
	year = {2021},
	pages = {17},
}

@article{kim_secret_2021,
	title = {The secret life of test smells - an empirical study on test smell evolution and maintenance},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-09969-1},
	doi = {10.1007/s10664-021-09969-1},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Kim, Dong Jae and Chen, Tse-Hsun and Yang, Jinqiu},
	month = sep,
	year = {2021},
	pages = {100},
}

@article{foundjem_release_2021,
	title = {Release synchronization in software ecosystems: {Empirical} {Study} on {OpenStack}},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {Release synchronization in software ecosystems},
	url = {https://link.springer.com/10.1007/s10664-020-09929-1},
	doi = {10.1007/s10664-020-09929-1},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Foundjem, Armstrong and Adams, Bram},
	month = may,
	year = {2021},
	pages = {34},
}

@article{gonzalez-lopez_case_2021,
	title = {Case model landscapes: toward an improved representation of knowledge-intensive processes using the {fCM}-language},
	volume = {20},
	issn = {1619-1366, 1619-1374},
	shorttitle = {Case model landscapes},
	url = {https://link.springer.com/10.1007/s10270-021-00885-y},
	doi = {10.1007/s10270-021-00885-y},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Gonzalez-Lopez, Fernanda and Pufahl, Luise and Munoz-Gama, Jorge and Herskovic, Valeria and Sepúlveda, Marcos},
	month = oct,
	year = {2021},
	pages = {1353--1377},
}

@article{pecorelli_relation_2021,
	title = {The {Relation} of {Test}-{Related} {Factors} to {Software} {Quality}: {A} {Case} {Study} on {Apache} {Systems}},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {The {Relation} of {Test}-{Related} {Factors} to {Software} {Quality}},
	url = {http://link.springer.com/10.1007/s10664-020-09891-y},
	doi = {10.1007/s10664-020-09891-y},
	abstract = {Abstract
            
              Testing represents a crucial activity to ensure software quality. Recent studies have shown that test-related factors (e.g., code coverage) can be reliable predictors of software code quality, as measured by post-release defects. While these studies provided initial compelling evidence on the relation between tests and post-release defects, they considered different test-related factors separately: as a consequence, there is still a lack of knowledge of whether these factors are still good predictors when considering all together. In this paper, we propose a comprehensive case study on how test-related factors relate to production code quality in
              Apache
              systems. We first investigated how the presence of tests relates to post-release defects; then, we analyzed the role played by the test-related factors previously shown as significantly related to post-release defects. The key findings of the study show that, when controlling for other metrics (e.g., size of the production class), test-related factors have a limited connection to post-release defects.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Pecorelli, Fabiano and Palomba, Fabio and De Lucia, Andrea},
	month = mar,
	year = {2021},
	pages = {18},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\WPTTAU2M\\Pecorelli et al. - 2021 - The Relation of Test-Related Factors to Software Q.pdf:application/pdf},
}

@article{temple_empirical_2021,
	title = {Empirical assessment of generating adversarial configurations for software product lines},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09915-7},
	doi = {10.1007/s10664-020-09915-7},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Temple, Paul and Perrouin, Gilles and Acher, Mathieu and Biggio, Battista and Jézéquel, Jean-Marc and Roli, Fabio},
	month = jan,
	year = {2021},
	pages = {6},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\GEJSFMJP\\Temple et al. - 2021 - Empirical assessment of generating adversarial con.pdf:application/pdf},
}

@article{el-hokayem_bringing_2021,
	title = {Bringing runtime verification home: a case study on the hierarchical monitoring of smart homes using decentralized specifications},
	issn = {1433-2779, 1433-2787},
	shorttitle = {Bringing runtime verification home},
	url = {https://link.springer.com/10.1007/s10009-021-00614-2},
	doi = {10.1007/s10009-021-00614-2},
	language = {en},
	urldate = {2021-10-24},
	journal = {International Journal on Software Tools for Technology Transfer},
	author = {El-Hokayem, Antoine and Falcone, Yliès},
	month = may,
	year = {2021},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\TT24VDF9\\El-Hokayem and Falcone - 2021 - Bringing runtime verification home a case study o.pdf:application/pdf},
}

@article{bhatti_information_2021,
	title = {Information security implications of using {NLP} in {IT} outsourcing: a {Diffusion} of {Innovation} theory perspective},
	volume = {28},
	issn = {0928-8910, 1573-7535},
	shorttitle = {Information security implications of using {NLP} in {IT} outsourcing},
	url = {https://link.springer.com/10.1007/s10515-021-00286-x},
	doi = {10.1007/s10515-021-00286-x},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Automated Software Engineering},
	author = {Bhatti, Baber Majid and Mubarak, Sameera and Nagalingam, Sev},
	month = nov,
	year = {2021},
	pages = {12},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\3KJIHTQ5\\Bhatti et al. - 2021 - Information security implications of using NLP in .pdf:application/pdf},
}

@article{paxinou_analyzing_2021,
	title = {Analyzing {Sequence} {Data} with {Markov} {Chain} {Models} in {Scientific} {Experiments}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00768-5},
	doi = {10.1007/s42979-021-00768-5},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Paxinou, Evgenia and Kalles, Dimitrios and Panagiotakopoulos, Christos T. and Verykios, Vassilios S.},
	month = sep,
	year = {2021},
	pages = {385},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\8E224FL5\\Paxinou et al. - 2021 - Analyzing Sequence Data with Markov Chain Models i.pdf:application/pdf},
}

@article{quach_evaluating_2021,
	title = {Evaluating the impact of falsely detected performance bug-inducing changes in {JIT} models},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-10004-6},
	doi = {10.1007/s10664-021-10004-6},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Quach, Sophia and Lamothe, Maxime and Adams, Bram and Kamei, Yasutaka and Shang, Weiyi},
	month = sep,
	year = {2021},
	pages = {97},
}

@article{alpers_process_2021,
	title = {Process {Mining} bei hybriden {Vorgehensmodellen} zur {Umsetzung} von {Unternehmenssoftware}: {Beitrag} für das {Informatik} {Spektrum}, 2021, {Sonderheft} „{Innovation} in der {Software} {Entwicklung}“},
	volume = {44},
	issn = {0170-6012, 1432-122X},
	shorttitle = {Process {Mining} bei hybriden {Vorgehensmodellen} zur {Umsetzung} von {Unternehmenssoftware}},
	url = {https://link.springer.com/10.1007/s00287-021-01359-7},
	doi = {10.1007/s00287-021-01359-7},
	abstract = {Zusammenfassung
            Process Mining hat sich in den vergangenen Jahren zur Analyse von Prozessdaten etabliert und wird in verschiedenen Kontexten, wie beispielsweise Industrie 4.0, eingesetzt. Die Potenziale dieser Technologie liegen jedoch nicht nur in der Analyse von Wertschöpfungsprozessen im Kontext von Produktion und Verwaltung. Die Technologie kann darüber hinaus auch für die Verbesserung des Vorgehens bei den dazugehörigen – meist großen und komplexen – Softwareprojekten genutzt werden. Für die Umsetzung der für Industrie‑4.0‑Prozesse erforderlichen Unternehmenssoftware werden häufig agile oder hybride Vorgehensmodelle eingesetzt. Software Innovations unterstützen die Umsetzung in zweierlei Hinsicht. Software Innovations bezeichnen zum einen Innovationen für das Software Engineering durch neue Vorgehensmodelle, Methoden und Werkzeuge. Zum anderen umfasst der Begriff Innovationen, welche durch (neuartige) Software ermöglicht werden. Ausgehend von diesen beiden Aspekten von Software Innovations beschreibt der Beitrag, wie Process Mining zur Analyse und Verbesserung des Vorgehens bei Unternehmenssoftwareprojekten verwendet werden kann. Der Schwerpunkt liegt auf der Anwendung und Verbesserung von hybrid durchgeführten Entwicklungs- und Konfigurationsprojekten. Das vorgestellte Verfahren kann jedoch auch für klassisch oder agil durchgeführte Projekte angewendet werden. Es dient generell dazu, den Prozess zur Softwareerstellung kontinuierlich, anhand von Erkenntnissen aus laufenden und abgeschlossenen Projekten, automatisiert zu analysieren und zu verbessern. Hierzu wird exemplarisch der hybride Referenzprozess aus dem Vorgehensmodell eines mittelständischen Software- und Beratungsunternehmens als Anwendungsfall betrachtet.},
	language = {de},
	number = {3},
	urldate = {2021-10-24},
	journal = {Informatik Spektrum},
	author = {Alpers, Sascha and Karle, Thomas and Schreiber, Clemens and Schönthaler, Frank and Oberweis, Andreas},
	month = jun,
	year = {2021},
	pages = {178--189},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\B2DA84DW\\Alpers et al. - 2021 - Process Mining bei hybriden Vorgehensmodellen zur .pdf:application/pdf},
}

@article{riom_revisiting_2021,
	title = {Revisiting the {VCCFinder} approach for the identification of vulnerability-contributing commits},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-09944-w},
	doi = {10.1007/s10664-021-09944-w},
	abstract = {Abstract
            
              Detecting vulnerabilities in software is a constant race between development teams and potential attackers. While many static and dynamic approaches have focused on regularly analyzing the software in its entirety, a recent research direction has focused on the analysis of changes that are applied to the code. VCCFinder is a seminal approach in the literature that builds on machine learning to automatically detect whether an incoming commit will introduce some vulnerabilities. Given the influence of VCCFinder in the literature, we undertake an investigation into its performance as a state-of-the-art system. To that end, we propose to attempt a replication study on the VCCFinder supervised learning approach. The insights of our failure to replicate the results reported in the original publication informed the design of a new approach to identify vulnerability-contributing commits based on a semi-supervised learning technique with an alternate feature set. We provide all artefacts and a clear description of this approach as a
              new reproducible baseline
              for advancing research on machine learning-based identification of vulnerability-introducing commits.},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Riom, Timothé and Sawadogo, Arthur and Allix, Kevin and Bissyandé, Tegawendé F. and Moha, Naouel and Klein, Jacques},
	month = may,
	year = {2021},
	pages = {46},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\2GX3ULG8\\Riom et al. - 2021 - Revisiting the VCCFinder approach for the identifi.pdf:application/pdf},
}

@article{lim_data-driven_2021,
	title = {Data-{Driven} {Requirements} {Elicitation}: {A} {Systematic} {Literature} {Review}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Data-{Driven} {Requirements} {Elicitation}},
	url = {http://link.springer.com/10.1007/s42979-020-00416-4},
	doi = {10.1007/s42979-020-00416-4},
	abstract = {Abstract
            Requirements engineering has traditionally been stakeholder-driven. In addition to domain knowledge, widespread digitalization has led to the generation of vast amounts of data (Big Data) from heterogeneous digital sources such as the Internet of Things (IoT), mobile devices, and social networks. The digital transformation has spawned new opportunities to consider such data as potentially valuable sources of requirements, although they are not intentionally created for requirements elicitation. A challenge to data-driven requirements engineering concerns the lack of methods to facilitate seamless and autonomous requirements elicitation from such dynamic and unintended digital sources. There are numerous challenges in processing the data effectively to be fully exploited in organizations. This article, thus, reviews the current state-of-the-art approaches to data-driven requirements elicitation from dynamic data sources and identifies research gaps. We obtained 1848 hits when searching six electronic databases. Through a two-level screening and a complementary forward and backward reference search, 68 papers were selected for final analysis. The results reveal that the existing automated requirements elicitation primarily focuses on utilizing human-sourced data, especially online reviews, as requirements sources, and supervised machine learning for data processing. The outcomes of automated requirements elicitation often result in mere identification and classification of requirements-related information or identification of features, without eliciting requirements in a ready-to-use form. This article highlights the need for developing methods to leverage process-mediated and machine-generated data for requirements elicitation and addressing the issues related to variety, velocity, and volume of Big Data for the efficient and effective software development and evolution.},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Lim, Sachiko and Henriksson, Aron and Zdravkovic, Jelena},
	month = feb,
	year = {2021},
	pages = {16},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\ZXMQX9C7\\Lim et al. - 2021 - Data-Driven Requirements Elicitation A Systematic.pdf:application/pdf},
}

@article{geffert_complement_2021,
	title = {Complement for two-way alternating automata},
	volume = {58},
	issn = {0001-5903, 1432-0525},
	url = {https://link.springer.com/10.1007/s00236-020-00373-8},
	doi = {10.1007/s00236-020-00373-8},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Acta Informatica},
	author = {Geffert, Viliam and Kapoutsis, Christos A. and Zakzok, Mohammad},
	month = oct,
	year = {2021},
	pages = {463--495},
}

@article{ibrahim_study_2021,
	title = {A study of how {Docker} {Compose} is used to compose multi-component systems},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-10025-1},
	doi = {10.1007/s10664-021-10025-1},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Ibrahim, Md Hasan and Sayagh, Mohammed and Hassan, Ahmed E.},
	month = nov,
	year = {2021},
	pages = {128},
}

@article{steinau_coordinating_2021,
	title = {Coordinating large distributed relational process structures},
	volume = {20},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-020-00835-0},
	doi = {10.1007/s10270-020-00835-0},
	abstract = {Abstract
            Representing a business process as a collaboration of interacting processes has become feasible with the emergence of data-centric business process management paradigms. Usually, these interacting processes have relations and, thereby, form a complex relational process structure. The interactions of processes within this relational process structure need to be coordinated to arrive at a meaningful overall business goal. However, relational process structures may become arbitrarily large. With the use of cloud technology, they may additionally be distributed over multiple nodes, allowing for scalability. Coordination processes have been proposed to coordinate relational process structures, where processes may have one-to-many and many-to-many relations at run-time. This paper shows how multiple coordination processes can be used in a decentralized fashion to more efficiently coordinate large, distributed process structures. The main challenge of using multiple coordination processes is to effectively realize the coordination responsibility of each coordination process. Key components of the solution are the subsidiary principle and the hierarchy of the relational process structure. Finally, an implementation of the coordination process concept based on microservices was developed, which allows for fast and concurrent enactment of multiple, decentralized coordination processes in large, distributed process structures.},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Steinau, Sebastian and Andrews, Kevin and Reichert, Manfred},
	month = oct,
	year = {2021},
	pages = {1403--1435},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\2HDX44BH\\Steinau et al. - 2021 - Coordinating large distributed relational process .pdf:application/pdf},
}

@article{hata_github_2022,
	title = {{GitHub} {Discussions}: {An} exploratory study of early adoption},
	volume = {27},
	issn = {1382-3256, 1573-7616},
	shorttitle = {{GitHub} {Discussions}},
	url = {https://link.springer.com/10.1007/s10664-021-10058-6},
	doi = {10.1007/s10664-021-10058-6},
	abstract = {Abstract
            Discussions is a new feature of GitHub for asking questions or discussing topics outside of specific Issues or Pull Requests. Before being available to all projects in December 2020, it had been tested on selected open source software projects. To understand how developers use this novel feature, how they perceive it, and how it impacts the development processes, we conducted a mixed-methods study based on early adopters of GitHub discussions from January until July 2020. We found that: (1) errors, unexpected behavior, and code reviews are prevalent discussion categories; (2) there is a positive relationship between project member involvement and discussion frequency; (3) developers consider GitHub Discussions useful but face the problem of topic duplication between Discussions and Issues; (4) Discussions play a crucial role in advancing the development of projects; and (5) positive sentiment in Discussions is more frequent than in Stack Overflow posts. Our findings are a first step towards data-informed guidance for using GitHub Discussions, opening up avenues for future work on this novel communication channel.},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Hata, Hideaki and Novielli, Nicole and Baltes, Sebastian and Kula, Raula Gaikovina and Treude, Christoph},
	month = jan,
	year = {2022},
	pages = {3},
}

@article{nakai_how_2021,
	title = {How to {Solve} {Millionaires}’ {Problem} with {Two} {Kinds} of {Cards}},
	volume = {39},
	issn = {0288-3635, 1882-7055},
	url = {https://link.springer.com/10.1007/s00354-020-00118-8},
	doi = {10.1007/s00354-020-00118-8},
	abstract = {Abstract
            Card-based cryptography, introduced by den Boer aims to realize multiparty computation (MPC) by using physical cards. We propose several efficient card-based protocols for the millionaires’ problem by introducing a new operation called Private Permutation (PP) instead of the shuffle used in most of existing card-based cryptography. Shuffle is a useful randomization technique by exploiting the property of card shuffling, but it requires a strong assumption from the viewpoint of arithmetic MPC because shuffle assumes that public randomization is possible. On the other hand, private randomness can be used in PPs, which enables us to design card-based protocols taking ideas of arithmetic MPCs into account. Actually, we show that Yao’s millionaires’ protocol can be easily transformed into a card-based protocol by using PPs, which is not straightforward by using shuffles because Yao’s protocol uses private randomness. Furthermore, we propose entirely novel and efficient card-based millionaire protocols based on PPs by securely updating bitwise comparisons between two numbers, which unveil a power of PPs. As another interest of these protocols, we point out they have a deep connection to the well-known logical puzzle known as “The fork in the road.”},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {New Generation Computing},
	author = {Nakai, Takeshi and Misawa, Yuto and Tokushige, Yuuki and Iwamoto, Mitsugu and Ohta, Kazuo},
	month = apr,
	year = {2021},
	pages = {73--96},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\DZ66UNU5\\Nakai et al. - 2021 - How to Solve Millionaires’ Problem with Two Kinds .pdf:application/pdf},
}

@article{nabli_cloud_2021,
	title = {Cloud services description ontology used for service selection},
	issn = {1863-2386, 1863-2394},
	url = {https://link.springer.com/10.1007/s11761-021-00328-y},
	doi = {10.1007/s11761-021-00328-y},
	language = {en},
	urldate = {2021-10-24},
	journal = {Service Oriented Computing and Applications},
	author = {Nabli, Hajer and Ben Djemaa, Raoudha and Amous Ben Amor, Ikram},
	month = sep,
	year = {2021},
}

@article{lionakis_constant-time_2021,
	title = {Constant-{Time} {Reachability} in {DAGs} {Using} {Multidimensional} {Dominance} {Drawings}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00713-6},
	doi = {10.1007/s42979-021-00713-6},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Lionakis, Panagiotis and Ortali, Giacomo and Tollis, Ioannis G.},
	month = jul,
	year = {2021},
	pages = {320},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\GHPMMBBH\\Lionakis et al. - 2021 - Constant-Time Reachability in DAGs Using Multidime.pdf:application/pdf},
}

@article{lyu_embedding_2021,
	title = {Embedding {API} dependency graph for neural code generation},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-09968-2},
	doi = {10.1007/s10664-021-09968-2},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Lyu, Chen and Wang, Ruyun and Zhang, Hongyu and Zhang, Hanwen and Hu, Songlin},
	month = jul,
	year = {2021},
	pages = {61},
}

@article{mallika_novel_2021,
	title = {A {Novel} {Intelligent} {System} for {Detection} of {Type} 2 {Diabetes} with {Modified} {Loss} {Function} and {Regularization}},
	volume = {47},
	issn = {0361-7688, 1608-3261},
	url = {https://link.springer.com/10.1134/S0361768821050054},
	doi = {10.1134/S0361768821050054},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Programming and Computer Software},
	author = {Mallika, G. C. and Alsadoon, Abeer and Pham, Duong Thu Hang and Mai, Ha Thi and Abdullah, Salma and Prasad, P.W.C. and Nguyen, Tran Quoc Vinh},
	month = sep,
	year = {2021},
	pages = {402--414},
}

@article{elmasry_regular_2021,
	title = {Regular numeral systems for data structures},
	issn = {0001-5903, 1432-0525},
	url = {https://link.springer.com/10.1007/s00236-021-00407-9},
	doi = {10.1007/s00236-021-00407-9},
	language = {en},
	urldate = {2021-10-24},
	journal = {Acta Informatica},
	author = {Elmasry, Amr and Katajainen, Jyrki},
	month = jul,
	year = {2021},
}

@article{ghumman_optimization_2021,
	title = {Optimization of parameters for improving the performance of {EEG}-based {BCI} system},
	volume = {7},
	issn = {2199-4668, 2199-4676},
	url = {https://link.springer.com/10.1007/s40860-020-00117-y},
	doi = {10.1007/s40860-020-00117-y},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Journal of Reliable Intelligent Environments},
	author = {Ghumman, Mandeep Kaur and Singh, Satvir and Singh, Navtej and Jindal, Balkrishan},
	month = jun,
	year = {2021},
	pages = {145--156},
}

@article{dondi_dense_2021,
	title = {Dense {Sub}-networks {Discovery} in {Temporal} {Networks}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00593-w},
	doi = {10.1007/s42979-021-00593-w},
	abstract = {Abstract
            Temporal networks have been successfully applied to analyse dynamics of networks. In this paper we focus on an approach recently introduced to identify dense subgraphs in a temporal network and we present a heuristic, based on the local search technique, for the problem. The experimental results we present on synthetic and real-world datasets show that our heuristic provides mostly better solutions (denser solutions) and that the heuristic is fast (comparable with the fastest method in literature, which is outperformed in terms of quality of the solutions). We present also experimental results of two variants of our method based on two different subroutines to compute a dense subgraph of a given graph.},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Dondi, Riccardo and Hosseinzadeh, Mohammad Mehdi},
	month = may,
	year = {2021},
	pages = {158},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\C4YZYSES\\Dondi and Hosseinzadeh - 2021 - Dense Sub-networks Discovery in Temporal Networks.pdf:application/pdf},
}

@article{porteous_automated_2021,
	title = {Automated narrative planning model extension},
	volume = {35},
	issn = {1387-2532, 1573-7454},
	url = {https://link.springer.com/10.1007/s10458-021-09501-1},
	doi = {10.1007/s10458-021-09501-1},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Autonomous Agents and Multi-Agent Systems},
	author = {Porteous, Julie and Ferreira, João F. and Lindsay, Alan and Cavazza, Marc},
	month = oct,
	year = {2021},
	pages = {19},
}

@article{saha_nsct-based_2021,
	title = {{NSCT}-based robust image watermarking in {DC} components of {APDCBT} using singular value decomposition},
	volume = {4},
	issn = {2520-8438, 2520-8446},
	url = {https://link.springer.com/10.1007/s42044-020-00070-2},
	doi = {10.1007/s42044-020-00070-2},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {Iran Journal of Computer Science},
	author = {Saha, Chandan and Hossain, Md. Foisal and Rahman, Md. Asadur},
	month = sep,
	year = {2021},
	pages = {133--145},
}

@article{luna_turingmobile_2021,
	title = {{TuringMobile}: a turing machine of oblivious mobile robots with limited visibility and its applications},
	issn = {0178-2770, 1432-0452},
	shorttitle = {{TuringMobile}},
	url = {https://link.springer.com/10.1007/s00446-021-00406-6},
	doi = {10.1007/s00446-021-00406-6},
	language = {en},
	urldate = {2021-10-24},
	journal = {Distributed Computing},
	author = {Luna, Giuseppe A. Di and Flocchini, Paola and Santoro, Nicola and Viglietta, Giovanni},
	month = oct,
	year = {2021},
}

@article{vinayaka_prediction_2021,
	title = {Prediction of {Arc} {Voltage} of {Electric} {Arc} {Furnace} {Based} on {Improved} {Back} {Propagation} {Neural} {Network}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00556-1},
	doi = {10.1007/s42979-021-00556-1},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Vinayaka, K. U. and Puttaswamy, P. S.},
	month = may,
	year = {2021},
	pages = {167},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\23GVPEA5\\Vinayaka and Puttaswamy - 2021 - Prediction of Arc Voltage of Electric Arc Furnace .pdf:application/pdf},
}

@article{sarker_deep_2021,
	title = {Deep {Cybersecurity}: {A} {Comprehensive} {Overview} from {Neural} {Network} and {Deep} {Learning} {Perspective}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Deep {Cybersecurity}},
	url = {https://link.springer.com/10.1007/s42979-021-00535-6},
	doi = {10.1007/s42979-021-00535-6},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Sarker, Iqbal H.},
	month = may,
	year = {2021},
	pages = {154},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\JIG5R6YP\\Sarker - 2021 - Deep Cybersecurity A Comprehensive Overview from .pdf:application/pdf},
}

@article{chen_threshold_2021,
	title = {A threshold hybrid encryption method for integrity audit without trusted center},
	volume = {10},
	issn = {2192-113X},
	url = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-020-00222-6},
	doi = {10.1186/s13677-020-00222-6},
	abstract = {Abstract
            Cloud storage with sharing services is increasingly popular among data owners. However, it is difficult for the users to know if the cloud server providers (CSPs) indeed protect their data. To verify data integrity and preserve data and key privacy in the group, this paper proposes a new threshold hybrid encryption for integrity auditing method without trusted center. The proposed method is developed based on the Advanced Encryption Standard (AES) and the Elliptic Curve Cryptography (ECC) with Shamir secret sharing. In this way, the key can be distributed and managed without trusted center, preserving the privacy of the key of the AES and users’ private key. Besides, we design and implement a novel integrity auditing and re-signature method which verifies the data integrity and solves the collusion question of the cloud and the revoked users. Security analysis and performance evaluation demonstrate that the proposed scheme realizes the correctness, security, and efficiency with a low communication and computation cost.},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Journal of Cloud Computing},
	author = {Chen, Yange and Liu, Hequn and Wang, Baocang and Sonompil, Baljinnyam and Ping, Yuan and Zhang, Zhili},
	month = dec,
	year = {2021},
	pages = {3},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\SIZXNYJ2\\Chen et al. - 2021 - A threshold hybrid encryption method for integrity.pdf:application/pdf},
}

@article{almonte_recommender_2021,
	title = {Recommender systems in model-driven engineering: {A} systematic mapping review},
	issn = {1619-1366, 1619-1374},
	shorttitle = {Recommender systems in model-driven engineering},
	url = {https://link.springer.com/10.1007/s10270-021-00905-x},
	doi = {10.1007/s10270-021-00905-x},
	abstract = {Abstract
            Recommender systems are information filtering systems used in many online applications like music and video broadcasting and e-commerce platforms. They are also increasingly being applied to facilitate software engineering activities. Following this trend, we are witnessing a growing research interest on recommendation approaches that assist with modelling tasks and model-based development processes. In this paper, we report on a systematic mapping review (based on the analysis of 66 papers) that classifies the existing research work on recommender systems for model-driven engineering (MDE). This study aims to serve as a guide for tool builders and researchers in understanding the MDE tasks that might be subject to recommendations, the applicable recommendation techniques and evaluation methods, and the open challenges and opportunities in this field of research.},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Almonte, Lissette and Guerra, Esther and Cantador, Iván and de Lara, Juan},
	month = jul,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\C8DCWNBR\\Almonte et al. - 2021 - Recommender systems in model-driven engineering A.pdf:application/pdf},
}

@article{kasa_statistical_2021,
	title = {A {Statistical} {Test} for {Detecting} {Dependency} {Breakdown} in {Financial} {Markets}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00671-z},
	doi = {10.1007/s42979-021-00671-z},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Kasa, Siva Rajesh and Bhattacharyya, Malay},
	month = jul,
	year = {2021},
	pages = {322},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\QMQES49H\\Kasa and Bhattacharyya - 2021 - A Statistical Test for Detecting Dependency Breakd.pdf:application/pdf},
}

@article{gadelha_traceability_2021,
	title = {Traceability recovery between bug reports and test cases-a {Mozilla} {Firefox} case study},
	volume = {28},
	issn = {0928-8910, 1573-7535},
	url = {https://link.springer.com/10.1007/s10515-021-00287-w},
	doi = {10.1007/s10515-021-00287-w},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Automated Software Engineering},
	author = {Gadelha, Guilherme and Ramalho, Franklin and Massoni, Tiago},
	month = nov,
	year = {2021},
	pages = {8},
}

@article{ferrari_trends_2021,
	title = {Trends in human activity recognition using smartphones},
	volume = {7},
	issn = {2199-4668, 2199-4676},
	url = {https://link.springer.com/10.1007/s40860-021-00147-0},
	doi = {10.1007/s40860-021-00147-0},
	abstract = {Abstract
            Recognizing human activities and monitoring population behavior are fundamental needs of our society. Population security, crowd surveillance, healthcare support and living assistance, and lifestyle and behavior tracking are some of the main applications that require the recognition of human activities. Over the past few decades, researchers have investigated techniques that can automatically recognize human activities. This line of research is commonly known as Human Activity Recognition (HAR). HAR involves many tasks: from signals acquisition to activity classification. The tasks involved are not simple and often require dedicated hardware, sophisticated engineering, and computational and statistical techniques for data preprocessing and analysis. Over the years, different techniques have been tested and different solutions have been proposed to achieve a classification process that provides reliable results. This survey presents the most recent solutions proposed for each task in the human activity classification process, that is, acquisition, preprocessing, data segmentation, feature extraction, and classification. Solutions are analyzed by emphasizing their strengths and weaknesses. For completeness, the survey also presents the metrics commonly used to evaluate the goodness of a classifier and the datasets of inertial signals from smartphones that are mostly used in the evaluation phase.},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {Journal of Reliable Intelligent Environments},
	author = {Ferrari, Anna and Micucci, Daniela and Mobilio, Marco and Napoletano, Paolo},
	month = sep,
	year = {2021},
	pages = {189--213},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\68ZXGA8S\\Ferrari et al. - 2021 - Trends in human activity recognition using smartph.pdf:application/pdf},
}

@article{verma_bideal_2021,
	title = {{BIDEAL}: {A} {Toolbox} for {Bicluster} {Analysis}—{Generation}, {Visualization} and {Validation}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {{BIDEAL}},
	url = {http://link.springer.com/10.1007/s42979-020-00411-9},
	doi = {10.1007/s42979-020-00411-9},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Verma, Nishchal K. and Sharma, Teena and Dixit, Sonal and Agrawal, Pooja and Sengupta, Sourya and Singh, Vikas},
	month = feb,
	year = {2021},
	pages = {24},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\SZ47JFC5\\Verma et al. - 2021 - BIDEAL A Toolbox for Bicluster Analysis—Generatio.pdf:application/pdf},
}

@article{beyer_cooperative_2021,
	title = {Cooperative verifier-based testing with {CoVeriTest}},
	volume = {23},
	issn = {1433-2779, 1433-2787},
	url = {https://link.springer.com/10.1007/s10009-020-00587-8},
	doi = {10.1007/s10009-020-00587-8},
	abstract = {Abstract
            
              Testing is a widely applied technique to evaluate software quality, and coverage criteria are often used to assess the adequacy of a generated test suite. However, manually constructing an adequate test suite is typically too expensive, and numerous techniques for automatic test-suite generation were proposed. All of them come with different strengths. To build stronger test-generation tools, different techniques should be combined. In this paper, we study cooperative combinations of verification approaches for test generation, which exchange high-level information. We present
              CoVeriTest
              , a hybrid technique for test-suite generation.
              CoVeriTest
              iteratively applies different conditional model checkers and allows users to adjust the level of cooperation and to configure individual time limits for each conditional model checker. In our experiments, we systematically study different
              CoVeriTest
              cooperation setups, which either use combinations of explicit-state model checking and predicate abstraction, or bounded model checking and symbolic execution. A comparison with state-of-the-art test-generation tools reveals that
              CoVeriTest
              achieves higher coverage for many programs (about 15\%).},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {International Journal on Software Tools for Technology Transfer},
	author = {Beyer, Dirk and Jakobs, Marie-Christine},
	month = jun,
	year = {2021},
	pages = {313--333},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\56NXSZIW\\Beyer and Jakobs - 2021 - Cooperative verifier-based testing with CoVeriTest.pdf:application/pdf},
}

@article{huynh_improving_2021,
	title = {Improving the {Accuracy} in {Copy}-{Move} {Image} {Detection}: {A} {Model} of {Sharpness} and {Blurriness}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Improving the {Accuracy} in {Copy}-{Move} {Image} {Detection}},
	url = {https://link.springer.com/10.1007/s42979-021-00682-w},
	doi = {10.1007/s42979-021-00682-w},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Huynh, Kha-Tu and Ly, Tu-Nga and Nguyen, Phuong-Thanh},
	month = jul,
	year = {2021},
	pages = {278},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\4XIMCURZ\\Huynh et al. - 2021 - Improving the Accuracy in Copy-Move Image Detectio.pdf:application/pdf},
}

@article{pilarski_predictions--chip_2021,
	title = {Predictions-on-chip: model-based training and automated deployment of machine learning models at runtime: {For} multi-disciplinary design and operation of gas turbines},
	volume = {20},
	issn = {1619-1366, 1619-1374},
	shorttitle = {Predictions-on-chip},
	url = {https://link.springer.com/10.1007/s10270-020-00856-9},
	doi = {10.1007/s10270-020-00856-9},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Pilarski, Sebastian and Staniszewski, Martin and Bryan, Matthew and Villeneuve, Frederic and Varró, Dániel},
	month = jun,
	year = {2021},
	pages = {685--709},
}

@article{kauffman_what_2021,
	title = {What can we monitor over unreliable channels?},
	volume = {23},
	issn = {1433-2779, 1433-2787},
	url = {https://link.springer.com/10.1007/s10009-021-00625-z},
	doi = {10.1007/s10009-021-00625-z},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {International Journal on Software Tools for Technology Transfer},
	author = {Kauffman, Sean and Havelund, Klaus and Fischmeister, Sebastian},
	month = aug,
	year = {2021},
	pages = {579--600},
}

@article{hensel_probabilistic_2021,
	title = {The probabilistic model checker {Storm}},
	issn = {1433-2779, 1433-2787},
	url = {https://link.springer.com/10.1007/s10009-021-00633-z},
	doi = {10.1007/s10009-021-00633-z},
	abstract = {Abstract
            
              We present the probabilistic model checker
              Storm
              .
              Storm
              supports the analysis of discrete- and continuous-time variants of both Markov chains and Markov decision processes.
              Storm
              has three major distinguishing features. It supports multiple input languages for Markov models, including the
              Jani
              and
              Prism
              modeling languages, dynamic fault trees, generalized stochastic Petri nets, and the probabilistic guarded command language. It has a modular setup in which solvers and symbolic engines can easily be exchanged. Its Python API allows for rapid prototyping by encapsulating
              Storm
              ’s fast and scalable algorithms. This paper reports on the main features of
              Storm
              and explains how to effectively use them. A description is provided of the main distinguishing functionalities of
              Storm
              . Finally, an empirical evaluation of different configurations of
              Storm
              on the QComp 2019 benchmark set is presented.},
	language = {en},
	urldate = {2021-10-24},
	journal = {International Journal on Software Tools for Technology Transfer},
	author = {Hensel, Christian and Junges, Sebastian and Katoen, Joost-Pieter and Quatmann, Tim and Volk, Matthias},
	month = jul,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\P5AXW8CK\\Hensel et al. - 2021 - The probabilistic model checker Storm.pdf:application/pdf},
}

@article{assi_featcompare_2021,
	title = {{FeatCompare}: {Feature} comparison for competing mobile apps leveraging user reviews},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {{FeatCompare}},
	url = {https://link.springer.com/10.1007/s10664-021-09988-y},
	doi = {10.1007/s10664-021-09988-y},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Assi, Maram and Hassan, Safwat and Tian, Yuan and Zou, Ying},
	month = sep,
	year = {2021},
	pages = {94},
}

@article{noel_review_2021,
	title = {Review and analysis of classical algorithms and hash-based post-quantum algorithm},
	issn = {2199-4668, 2199-4676},
	url = {https://link.springer.com/10.1007/s40860-021-00155-0},
	doi = {10.1007/s40860-021-00155-0},
	language = {en},
	urldate = {2021-10-24},
	journal = {Journal of Reliable Intelligent Environments},
	author = {Noel, Moses Dogonyaro and Waziri, Victor Onomza and Abdulhamid, Shafii Muhammad and Ojeniyi, Joseph Adebayo},
	month = oct,
	year = {2021},
}

@article{stray_exploring_2021,
	title = {Exploring human factors of the agile software tester},
	issn = {0963-9314, 1573-1367},
	url = {https://link.springer.com/10.1007/s11219-021-09561-2},
	doi = {10.1007/s11219-021-09561-2},
	abstract = {Abstract
            Although extensive research has been conducted on the characteristics of the agile developer, little attention has been given to the features of the software-testing role. This paper explores the human factors of the software testers working in agile projects through a qualitative study focusing on how these factors are perceived. We interviewed 22 agile software practitioners working in three international companies: 14 testers, five developers, and three designers. Additionally, we observed 11 meetings and daily work of 13 participants in one of the companies. Our findings show that the views on the human factors shaping the agile software tester’s role were crystallized into seven traits, which the agile team members saw as central for the software-testing role: the ability to see the whole picture, good communication skills, detail-orientation, structuredness, creativeness, curiosity, and adaptability. The testers spent half their day communicating and learned how to mitigate the fact that they had to bring bad news to other project members. They also facilitated communication between the business side and development. Based on our results, we propose the seven traits as dimensions to consider for organizations recruiting agile software testers, as well as a reference for IT and non-IT professionals considering a software-testing career.},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software Quality Journal},
	author = {Stray, Viktoria and Florea, Raluca and Paruch, Lucas},
	month = jun,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\3NDU8LV2\\Stray et al. - 2021 - Exploring human factors of the agile software test.pdf:application/pdf},
}

@article{khoury_automata-based_2021,
	title = {Automata-based monitoring for {LTL}-{FO}\$\${\textasciicircum}+\$\$},
	volume = {23},
	issn = {1433-2779, 1433-2787},
	url = {https://link.springer.com/10.1007/s10009-020-00566-z},
	doi = {10.1007/s10009-020-00566-z},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {International Journal on Software Tools for Technology Transfer},
	author = {Khoury, Raphaël and Hallé, Sylvain and Lebrun, Yannick},
	month = apr,
	year = {2021},
	pages = {137--154},
}

@article{teixeira_predictive_2021,
	title = {A {Predictive} {Resource} {Allocation} for {Wireless} {Communications} {Systems}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00854-8},
	doi = {10.1007/s42979-021-00854-8},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Teixeira, Márcio J. and Timóteo, Varese S.},
	month = nov,
	year = {2021},
	pages = {473},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\T86IJNXU\\Teixeira and Timóteo - 2021 - A Predictive Resource Allocation for Wireless Comm.pdf:application/pdf},
}

@article{langdon_genetic_2021,
	title = {Genetic programming convergence},
	issn = {1389-2576, 1573-7632},
	url = {https://link.springer.com/10.1007/s10710-021-09405-9},
	doi = {10.1007/s10710-021-09405-9},
	language = {en},
	urldate = {2021-10-24},
	journal = {Genetic Programming and Evolvable Machines},
	author = {Langdon, W. B.},
	month = aug,
	year = {2021},
}

@article{de_sanctis_mikado_2021,
	title = {{MIKADO}: a smart city {KPIs} assessment modeling framework},
	issn = {1619-1366, 1619-1374},
	shorttitle = {{MIKADO}},
	url = {https://link.springer.com/10.1007/s10270-021-00907-9},
	doi = {10.1007/s10270-021-00907-9},
	abstract = {Abstract
            
              Smart decision making plays a central role for smart city governance. It exploits data analytics approaches applied to collected data, for supporting smart cities stakeholders in understanding and effectively managing a smart city. Smart governance is performed through the management of key performance indicators (KPIs), reflecting the degree of smartness and sustainability of smart cities. Even though KPIs are gaining relevance, e.g., at European level, the existing tools for their calculation are still limited. They mainly consist in dashboards and online spreadsheets that are rigid, thus making the KPIs evolution and customization a tedious and error-prone process. In this paper, we exploit model-driven engineering (MDE) techniques, through metamodel-based domain-specific languages (DSLs), to build a framework called
              MIKADO
               for the automatic assessment of KPIs over smart cities. In particular, the approach provides support for both: (
              i
              ) domain experts, by the definition of a textual DSL for an intuitive KPIs modeling process and (
              ii
              ) smart cities stakeholders, by the definition of graphical editors for smart cities modeling. Moreover, dynamic dashboards are generated to support an intuitive visualization and interpretation of the KPIs assessed by our KPIs evaluation engine. We provide evaluation results by showing a demonstration case as well as studying the scalability of the KPIs evaluation engine and the general usability of the approach with encouraging results. Moreover, the approach is open and extensible to further manage comparison among smart cities, simulations, and KPIs interrelations.},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {De Sanctis, Martina and Iovino, Ludovico and Rossi, Maria Teresa and Wimmer, Manuel},
	month = aug,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\JDGLRIGR\\De Sanctis et al. - 2021 - MIKADO a smart city KPIs assessment modeling fram.pdf:application/pdf},
}

@article{perez-castillo_method_2021,
	title = {A method for transforming knowledge discovery metamodel to {ArchiMate} models},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-021-00912-y},
	doi = {10.1007/s10270-021-00912-y},
	abstract = {Abstract
            Enterprise architecture has become an important driver to facilitate digital transformation in companies, since it allows to manage IT and business in a holistic and integrated manner by establishing connections among technology concerns and strategical/motivational ones. Enterprise architecture modelling is critical to accurately represent business and their IT assets in combination. This modelling is important when companies start to manage their enterprise architecture, but also when it is remodelled so that the enterprise architecture is realigned in a changing world. Enterprise architecture is commonly modelled by few experts in a manual way, which is error-prone and time-consuming and makes continuous realignment difficult. In contrast, other enterprise architecture modelling proposal automatically analyses some artefacts like source code, databases, services, etc. Previous automated modelling proposals focus on the analysis of individual artefacts with isolated transformations toward ArchiMate or other enterprise architecture notations and/or frameworks. We propose the usage of Knowledge Discovery Metamodel (KDM) to represent all the intermediate information retrieved from information systems’ artefacts, which is then transformed into ArchiMate models. Thus, the core contribution of this paper is the model transformation between KDM and ArchiMate metamodels. The main implication of this proposal is that ArchiMate models are automatically generated from a common knowledge repository. Thereby, the relationships between different-nature artefacts can be exploited to get more complete and accurate enterprise architecture representations.},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Pérez-Castillo, Ricardo and Delgado, Andrea and Ruiz, Francisco and Bacigalupe, Virginia and Piattini, Mario},
	month = aug,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\3ANJPZ4X\\Pérez-Castillo et al. - 2021 - A method for transforming knowledge discovery meta.pdf:application/pdf},
}

@article{chen_maintenance-related_2021,
	title = {Maintenance-related concerns for post-deployed {Ethereum} smart contract development: issues, techniques, and future challenges},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {Maintenance-related concerns for post-deployed {Ethereum} smart contract development},
	url = {https://link.springer.com/10.1007/s10664-021-10018-0},
	doi = {10.1007/s10664-021-10018-0},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Chen, Jiachi and Xia, Xin and Lo, David and Grundy, John and Yang, Xiaohu},
	month = nov,
	year = {2021},
	pages = {117},
}

@article{rheindt_dysharq_2021,
	title = {{DySHARQ}: {Dynamic} {Software}-{Defined} {Hardware}-{Managed} {Queues} for {Tile}-{Based} {Architectures}},
	volume = {49},
	issn = {0885-7458, 1573-7640},
	shorttitle = {{DySHARQ}},
	url = {https://link.springer.com/10.1007/s10766-020-00687-7},
	doi = {10.1007/s10766-020-00687-7},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {International Journal of Parallel Programming},
	author = {Rheindt, Sven and Maier, Sebastian and Pohle, Nora and Nolte, Lars and Lenke, Oliver and Schmaus, Florian and Wild, Thomas and Schröder-Preikschat, Wolfgang and Herkersdorf, Andreas},
	month = aug,
	year = {2021},
	pages = {506--540},
}

@article{levi_property_2021,
	title = {Property testing of planarity in the {CONGEST} model},
	volume = {34},
	issn = {0178-2770, 1432-0452},
	url = {https://link.springer.com/10.1007/s00446-020-00382-3},
	doi = {10.1007/s00446-020-00382-3},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Distributed Computing},
	author = {Levi, Reut and Medina, Moti and Ron, Dana},
	month = feb,
	year = {2021},
	pages = {15--32},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\5EHP8R65\\Levi et al. - 2021 - Property testing of planarity in the CONGEST model.pdf:application/pdf},
}

@article{pereira_greenhub_2021,
	title = {{GreenHub}: a large-scale collaborative dataset to battery consumption analysis of android devices},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {{GreenHub}},
	url = {https://link.springer.com/10.1007/s10664-020-09925-5},
	doi = {10.1007/s10664-020-09925-5},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Pereira, Rui and Matalonga, Hugo and Couto, Marco and Castor, Fernando and Cabral, Bruno and Carvalho, Pedro and de Sousa, Simão Melo and Fernandes, João Paulo},
	month = may,
	year = {2021},
	pages = {38},
}

@article{prana_out_2021,
	title = {Out of sight, out of mind? {How} vulnerable dependencies affect open-source projects},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {Out of sight, out of mind?},
	url = {https://link.springer.com/10.1007/s10664-021-09959-3},
	doi = {10.1007/s10664-021-09959-3},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Prana, Gede Artha Azriadi and Sharma, Abhishek and Shar, Lwin Khin and Foo, Darius and Santosa, Andrew E. and Sharma, Asankhaya and Lo, David},
	month = jul,
	year = {2021},
	pages = {59},
}

@article{ramos-gutierrez_discovering_2021,
	title = {Discovering configuration workflows from existing logs using process mining},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09911-x},
	doi = {10.1007/s10664-020-09911-x},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Ramos-Gutiérrez, Belén and Varela-Vaca, Ángel Jesús and Galindo, José A. and Gómez-López, María Teresa and Benavides, David},
	month = jan,
	year = {2021},
	pages = {11},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\TYLWDB7R\\Ramos-Gutiérrez et al. - 2021 - Discovering configuration workflows from existing .pdf:application/pdf},
}

@article{farzad_two_2021,
	title = {Two {Class} {Pruned} {Log} {Message} {Anomaly} {Detection}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00772-9},
	doi = {10.1007/s42979-021-00772-9},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Farzad, Amir and Gulliver, T. Aaron},
	month = sep,
	year = {2021},
	pages = {391},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\RZE9WSKM\\Farzad and Gulliver - 2021 - Two Class Pruned Log Message Anomaly Detection.pdf:application/pdf},
}

@article{demongivert_distributable_2021,
	title = {A distributable event-oriented architecture for activity recognition in smart homes},
	volume = {7},
	issn = {2199-4668, 2199-4676},
	url = {https://link.springer.com/10.1007/s40860-020-00125-y},
	doi = {10.1007/s40860-020-00125-y},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {Journal of Reliable Intelligent Environments},
	author = {Demongivert, Cédric and Bouchard, Kévin and Gaboury, Sébastien and Bouchard, Bruno and Lussier, Maxime and Parenteau, Maxime and Laliberté, Catherine and Couture, Mélanie and Bier, Nathalie and Giroux, Sylvain},
	month = sep,
	year = {2021},
	pages = {215--231},
}

@article{rai_using_2021,
	title = {Using {Open} {Source} {Intelligence} as a {Tool} for {Reliable} {Web} {Searching}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00777-4},
	doi = {10.1007/s42979-021-00777-4},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Rai, Bipin Kumar and Verma, Ravi and Tiwari, Shiva},
	month = sep,
	year = {2021},
	pages = {402},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\DX5EF5TT\\Rai et al. - 2021 - Using Open Source Intelligence as a Tool for Relia.pdf:application/pdf},
}

@article{karhapaa_strategies_2021,
	title = {Strategies to manage quality requirements in agile software development: a multiple case study},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {Strategies to manage quality requirements in agile software development},
	url = {http://link.springer.com/10.1007/s10664-020-09903-x},
	doi = {10.1007/s10664-020-09903-x},
	abstract = {Abstract
            Agile methods can deliver software that fulfills customer needs rapidly and continuously. Quality requirements (QRs) are important in this regard; however, detailed studies on how companies applying agile methods to manage QRs are limited, as are studies on the rationale for choosing specific QR management practices and related challenges. The aim of this study was to address why practitioners manage QRs as they do and what challenges they face. We also analyzed how existing practices mitigate some of the found challenges. Lastly, we connect the contextual elements of the companies with their practices and challenges. We conducted 36 interviews with practitioners from four companies of varying sizes. Since each company operates in different domains, comparing QR management strategies and related challenges in different contexts was possible. We found that the companies apply proactive, reactive, and interactive strategies to manage QRs. Additionally, our study revealed 40 challenges in six categories that companies applying agile methods may face in QR management. We also identified nine contextual elements that affect QR management practice choices and which, importantly, can explain many related challenges. Based on these findings, we constructed a theoretical model about the connection between context, QR management practices, and challenges. Practitioners in similar contexts can learn from the practices identified in this study. Our preliminary theoretical model can help other practitioners identify what challenges they can expect to face in QR management in different developmental contexts as well as which practices to apply to mitigate these challenges.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Karhapää, Pertti and Behutiye, Woubshet and Rodríguez, Pilar and Oivo, Markku and Costal, Dolors and Franch, Xavier and Aaramaa, Sanja and Choraś, Michał and Partanen, Jari and Abherve, Antonin},
	month = mar,
	year = {2021},
	pages = {28},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\72G3MC9J\\Karhapää et al. - 2021 - Strategies to manage quality requirements in agile.pdf:application/pdf},
}

@article{chang_binary_2021,
	title = {Binary de {Bruijn} {Sequences} via {Zech}’s {Logarithms}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00683-9},
	doi = {10.1007/s42979-021-00683-9},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Chang, Zuling and Ezerman, Martianus Frederic and Fahreza, Adamas Aqsa and Ling, San and Szmidt, Janusz and Wang, Huaxiong},
	month = jul,
	year = {2021},
	pages = {314},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\JBZ9X8L6\\Chang et al. - 2021 - Binary de Bruijn Sequences via Zech’s Logarithms.pdf:application/pdf},
}

@article{nguyen_precision_2021,
	title = {Precision, recall, and sensitivity of monitoring partially synchronous distributed programs},
	volume = {34},
	issn = {0178-2770, 1432-0452},
	url = {https://link.springer.com/10.1007/s00446-021-00402-w},
	doi = {10.1007/s00446-021-00402-w},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Distributed Computing},
	author = {Nguyen, Duong and Yingchareonthawornchai, Sorrachai and Tekken Valapil, Vidhya and Kulkarni, Sandeep S. and Demirbas, Murat},
	month = oct,
	year = {2021},
	pages = {319--348},
}

@article{soremekun_locating_2021,
	title = {Locating faults with program slicing: an empirical analysis},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {Locating faults with program slicing},
	url = {https://link.springer.com/10.1007/s10664-020-09931-7},
	doi = {10.1007/s10664-020-09931-7},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Soremekun, Ezekiel and Kirschner, Lukas and Böhme, Marcel and Zeller, Andreas},
	month = may,
	year = {2021},
	pages = {51},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\IZPY6BMN\\Soremekun et al. - 2021 - Locating faults with program slicing an empirical.pdf:application/pdf},
}

@article{bolotnikov_interprocedural_2021,
	title = {Interprocedural {Static} {Analysis} for {Finding} {Bugs} in {Go} {Programs}},
	volume = {47},
	issn = {0361-7688, 1608-3261},
	url = {https://link.springer.com/10.1134/S0361768821050030},
	doi = {10.1134/S0361768821050030},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Programming and Computer Software},
	author = {Bolotnikov, I. V. and Borodin, A. E.},
	month = sep,
	year = {2021},
	pages = {344--352},
}

@article{tizpaz-niari_quantitative_2021,
	title = {Quantitative estimation of side-channel leaks with neural networks},
	volume = {23},
	issn = {1433-2779, 1433-2787},
	url = {https://link.springer.com/10.1007/s10009-021-00622-2},
	doi = {10.1007/s10009-021-00622-2},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {International Journal on Software Tools for Technology Transfer},
	author = {Tizpaz-Niari, Saeid and Černý, Pavol and Sankaranarayanan, Sriram and Trivedi, Ashutosh},
	month = aug,
	year = {2021},
	pages = {641--654},
}

@article{jayanti_concurrent_2021,
	title = {Concurrent disjoint set union},
	issn = {0178-2770, 1432-0452},
	url = {https://link.springer.com/10.1007/s00446-020-00388-x},
	doi = {10.1007/s00446-020-00388-x},
	abstract = {Abstract
            
              We develop and analyze concurrent algorithms for the disjoint set union (“union-find” ) problem in the shared memory, asynchronous multiprocessor model of computation, with CAS (compare and swap) or DCAS (double compare and swap) as the synchronization primitive. We give a deterministic bounded wait-free algorithm that uses DCAS and has a total work bound of
              
                
                  \$\$O{\textbackslash}biggl ( m {\textbackslash}cdot {\textbackslash}left( {\textbackslash}log \{{\textbackslash}left( {\textbackslash}frac\{np\}\{m\} + 1 {\textbackslash}right) \} + {\textbackslash}alpha \{{\textbackslash}left( n, {\textbackslash}frac\{m\}\{np\} {\textbackslash}right) \} {\textbackslash}right) {\textbackslash}biggr )\$\$
                  
                    
                      O
                      
                        (
                      
                      m
                      ·
                      
                        log
                        
                          
                            
                              np
                            
                            m
                          
                          +
                          1
                        
                        +
                        α
                        
                          n
                          ,
                          
                            m
                            
                              np
                            
                          
                        
                      
                      
                        )
                      
                    
                  
                
              
              for a problem with
              n
              elements and
              m
              operations solved by
              p
              processes, where
              
                
                  \$\${\textbackslash}alpha \$\$
                  
                    α
                  
                
              
              is a functional inverse of Ackermann’s function. We give two randomized algorithms that use only CAS and have the same work bound in expectation. The analysis of the second randomized algorithm is valid even if the scheduler is adversarial. Our DCAS and randomized algorithms take
              
                
                  \$\$O({\textbackslash}log n)\$\$
                  
                    
                      O
                      (
                      log
                      n
                      )
                    
                  
                
              
              steps per operation, worst-case for the DCAS algorithm, high-probability for the randomized algorithms. Our work and step bounds grow only logarithmically with
              p
              , making our algorithms truly scalable. We prove that for a class of symmetric algorithms that includes ours, no better step or work bound is possible. Our work is theoretical, but Alistarh et al (In search of the fastest concurrent union-find algorithm, 2019), Dhulipala et al (A framework for static and incremental parallel graph connectivity algorithms, 2020) and Hong et al (Exploring the design space of static and incremental graph connectivity algorithms on gpus, 2020) have implemented some of our algorithms on CPUs and GPUs and experimented with them. On many realistic data sets, our algorithms run as fast or faster than all others.},
	language = {en},
	urldate = {2021-10-24},
	journal = {Distributed Computing},
	author = {Jayanti, Siddhartha V. and Tarjan, Robert E.},
	month = apr,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\8Z4MRPYN\\Jayanti and Tarjan - 2021 - Concurrent disjoint set union.pdf:application/pdf},
}

@article{laaber_applying_2021,
	title = {Applying test case prioritization to software microbenchmarks},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-10037-x},
	doi = {10.1007/s10664-021-10037-x},
	abstract = {Abstract
            
              Regression testing comprises techniques which are applied during software evolution to uncover faults effectively and efficiently. While regression testing is widely studied for functional tests, performance regression testing, e.g., with software microbenchmarks, is hardly investigated. Applying test case prioritization (TCP), a regression testing technique, to software microbenchmarks may help capturing large performance regressions sooner upon new versions. This may especially be beneficial for microbenchmark suites, because they take considerably longer to execute than unit test suites. However, it is unclear whether traditional unit testing TCP techniques work equally well for software microbenchmarks. In this paper, we empirically study coverage-based TCP techniques, employing
              total
              and
              additional
              greedy strategies, applied to software microbenchmarks along multiple parameterization dimensions, leading to 54 unique technique instantiations. We find that TCP techniques have a mean
              APFD-P
              (average percentage of fault-detection on performance) effectiveness between 0.54 and 0.71 and are able to capture the three largest performance changes after executing 29\% to 66\% of the whole microbenchmark suite. Our efficiency analysis reveals that the runtime overhead of TCP varies considerably depending on the exact parameterization. The most effective technique has an overhead of 11\% of the total microbenchmark suite execution time, making TCP a viable option for performance regression testing. The results demonstrate that the
              total
              strategy is superior to the
              additional
              strategy. Finally,
              dynamic-coverage
              techniques should be favored over
              static-coverage
              techniques due to their acceptable analysis overhead; however, in settings where the time for prioritzation is limited,
              static-coverage
              techniques provide an attractive alternative.},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Laaber, Christoph and Gall, Harald C. and Leitner, Philipp},
	month = nov,
	year = {2021},
	pages = {133},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\6AE2GXNI\\Laaber et al. - 2021 - Applying test case prioritization to software micr.pdf:application/pdf},
}

@article{schulz_batjl_2021,
	title = {{BAT}.jl: {A} {Julia}-{Based} {Tool} for {Bayesian} {Inference}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {{BAT}.jl},
	url = {https://link.springer.com/10.1007/s42979-021-00626-4},
	doi = {10.1007/s42979-021-00626-4},
	abstract = {Abstract
            We describe the development of a multi-purpose software for Bayesian statistical inference, BAT.jl, written in the Julia language. The major design considerations and implemented algorithms are summarized here, together with a test suite that ensures the proper functioning of the algorithms. We also give an extended example from the realm of physics that demonstrates the functionalities of BAT.jl.},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Schulz, Oliver and Beaujean, Frederik and Caldwell, Allen and Grunwald, Cornelius and Hafych, Vasyl and Kröninger, Kevin and Cagnina, Salvatore La and Röhrig, Lars and Shtembari, Lolian},
	month = may,
	year = {2021},
	pages = {210},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\4MKEWDHN\\Schulz et al. - 2021 - BAT.jl A Julia-Based Tool for Bayesian Inference.pdf:application/pdf},
}

@article{fakeeroodeen_hybrid_2021,
	title = {Hybrid {Data} {Privacy} and {Anonymization} {Algorithms} for {Smart} {Health} {Applications}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-021-00547-2},
	doi = {10.1007/s42979-021-00547-2},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Fakeeroodeen, Y. N. and Beeharry, Y.},
	month = apr,
	year = {2021},
	pages = {126},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\CL5MWIUR\\Fakeeroodeen and Beeharry - 2021 - Hybrid Data Privacy and Anonymization Algorithms f.pdf:application/pdf},
}

@article{aranega_rotten_2021,
	title = {Rotten green tests in {Java}, {Pharo} and {Python}: {An} empirical study},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {Rotten green tests in {Java}, {Pharo} and {Python}},
	url = {https://link.springer.com/10.1007/s10664-021-10016-2},
	doi = {10.1007/s10664-021-10016-2},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Aranega, Vincent and Delplanque, Julien and Martinez, Matias and Black, Andrew P. and Ducasse, Stéphane and Etien, Anne and Fuhrman, Christopher and Polito, Guillermo},
	month = nov,
	year = {2021},
	pages = {130},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\CT9X9SRT\\Aranega et al. - 2021 - Rotten green tests in Java, Pharo and Python An e.pdf:application/pdf},
}

@article{kermansaravi_investigating_2021,
	title = {Investigating design anti-pattern and design pattern mutations and their change- and fault-proneness},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09900-0},
	doi = {10.1007/s10664-020-09900-0},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Kermansaravi, Zeinab Azadeh and Rahman, Md Saidur and Khomh, Foutse and Jaafar, Fehmi and Guéhéneuc, Yann-Gaël},
	month = jan,
	year = {2021},
	pages = {9},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\GC3M5ZIL\\Kermansaravi et al. - 2021 - Investigating design anti-pattern and design patte.pdf:application/pdf},
}

@article{huang_reviewing_2022,
	title = {Reviewing rounds prediction for code patches},
	volume = {27},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-10035-z},
	doi = {10.1007/s10664-021-10035-z},
	abstract = {Abstract
            
              Code review is one of the common activities to guarantee the reliability of software, while code review is time-consuming as it requires reviewers to inspect the source code of each patch. A patch may be reviewed more than once before it is eventually merged or abandoned, and then such a patch may tighten the development schedule of the developers and further affect the development progress of a project. Thus, a tool that predicts early on how long a patch will be reviewed can help developers take self-inspection beforehand for the patches that require long-time review. In this paper, we propose a novel method,
              PMCost
              , to predict the reviewing rounds of a patch.
              PMCost
              uses a number of features, including patch meta-features, code diff features, personal experience features and patch textual features, to better reflect code changes and review process. To examine the benefits of
              PMCost
              , we perform experiments on three large open source projects, namely Eclipse, OpenDaylight and OpenStack. The encouraging experimental results demonstrate the feasibility and effectiveness of our approach. Besides, we further study the why the proposed features contribute to the reviewing rounds prediction.},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Huang, Yuan and Liang, Xingjian and Chen, Zhihao and Jia, Nan and Luo, Xiapu and Chen, Xiangping and Zheng, Zibin and Zhou, Xiaocong},
	month = jan,
	year = {2022},
	pages = {7},
}

@article{back_discover_2021,
	title = {{DisCoveR}: accurate and efficient discovery of declarative process models},
	issn = {1433-2779, 1433-2787},
	shorttitle = {{DisCoveR}},
	url = {https://link.springer.com/10.1007/s10009-021-00616-0},
	doi = {10.1007/s10009-021-00616-0},
	language = {en},
	urldate = {2021-10-24},
	journal = {International Journal on Software Tools for Technology Transfer},
	author = {Back, Christoffer Olling and Slaats, Tijs and Hildebrandt, Thomas Troels and Marquard, Morten},
	month = jun,
	year = {2021},
}

@article{ghaffari_improved_2021,
	title = {Improved distributed \$\${\textbackslash}{Delta} \$\$-coloring},
	volume = {34},
	issn = {0178-2770, 1432-0452},
	url = {https://link.springer.com/10.1007/s00446-021-00397-4},
	doi = {10.1007/s00446-021-00397-4},
	abstract = {Abstract
            
              We present a randomized distributed algorithm that computes a
              
                
                  \$\${\textbackslash}Delta \$\$
                  
                    Δ
                  
                
              
              -coloring in any non-complete graph with maximum degree
              
                
                  \$\${\textbackslash}Delta {\textbackslash}ge 4\$\$
                  
                    
                      Δ
                      ≥
                      4
                    
                  
                
              
              in
              
                
                  \$\$O({\textbackslash}log {\textbackslash}Delta ) + 2{\textasciicircum}\{O({\textbackslash}sqrt\{{\textbackslash}log {\textbackslash}log n\})\}\$\$
                  
                    
                      O
                      
                        (
                        log
                        Δ
                        )
                      
                      +
                      
                        2
                        
                          O
                          (
                          
                            
                              log
                              log
                              n
                            
                          
                          )
                        
                      
                    
                  
                
              
              rounds, as well as a randomized algorithm that computes a
              
                
                  \$\${\textbackslash}Delta \$\$
                  
                    Δ
                  
                
              
              -coloring in
              
                
                  \$\$O(({\textbackslash}log {\textbackslash}log n){\textasciicircum}2)\$\$
                  
                    
                      O
                      (
                      
                        
                          (
                          log
                          log
                          n
                          )
                        
                        2
                      
                      )
                    
                  
                
              
              rounds when
              
                
                  \$\${\textbackslash}Delta {\textbackslash}in [3, O(1)]\$\$
                  
                    
                      Δ
                      ∈
                      [
                      3
                      ,
                      O
                      (
                      1
                      )
                      ]
                    
                  
                
              
              . Both these algorithms improve on an
              
                
                  \$\$O({\textbackslash}log {\textasciicircum}3 n / {\textbackslash}log {\textbackslash}Delta )\$\$
                  
                    
                      O
                      (
                      
                        log
                        3
                      
                      n
                      /
                      log
                      Δ
                      )
                    
                  
                
              
              -round algorithm of Panconesi and Srinivasan (STOC’93), which has remained the state of the art for the past 25 years. Moreover, the latter algorithm gets (exponentially) closer to an
              
                
                  \$\${\textbackslash}Omega ({\textbackslash}log {\textbackslash}log n)\$\$
                  
                    
                      Ω
                      (
                      log
                      log
                      n
                      )
                    
                  
                
              
              round lower bound of Brandt et al. (STOC’16).},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Distributed Computing},
	author = {Ghaffari, Mohsen and Hirvonen, Juho and Kuhn, Fabian and Maus, Yannic},
	month = aug,
	year = {2021},
	pages = {239--258},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\7PD746UP\\Ghaffari et al. - 2021 - Improved distributed \$\$Delta \$\$-coloring.pdf:application/pdf},
}

@article{bogner_industry_2021,
	title = {Industry practices and challenges for the evolvability assurance of microservices: {An} interview study and systematic grey literature review},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {Industry practices and challenges for the evolvability assurance of microservices},
	url = {https://link.springer.com/10.1007/s10664-021-09999-9},
	doi = {10.1007/s10664-021-09999-9},
	abstract = {Abstract
            
              Context
              Microservices as a lightweight and decentralized architectural style with fine-grained services promise several beneficial characteristics for sustainable long-term software evolution. Success stories from early adopters like Netflix, Amazon, or Spotify have demonstrated that it is possible to achieve a high degree of flexibility and evolvability with these systems. However, the described advantageous characteristics offer no concrete guidance and little is known about evolvability assurance processes for microservices in industry as well as challenges in this area. Insights into the current state of practice are a very important prerequisite for relevant research in this field.
            
            
              Objective
              We therefore wanted to explore how practitioners structure the evolvability assurance processes for microservices, what tools, metrics, and patterns they use, and what challenges they perceive for the evolvability of their systems.
            
            
              Method
              We first conducted 17 semi-structured interviews and discussed 14 different microservice-based systems and their assurance processes with software professionals from 10 companies. Afterwards, we performed a systematic grey literature review (GLR) and used the created interview coding system to analyze 295 practitioner online resources.
            
            
              Results
              
                The combined analysis revealed the importance of finding a sensible balance between decentralization and standardization. Guidelines like architectural principles were seen as valuable to ensure a base consistency for evolvability and specialized test automation was a prevalent theme. Source code quality was the primary target for the usage of tools and metrics for our interview participants, while testing tools and productivity metrics were the focus of our GLR resources. In both studies, practitioners did not mention architectural or service-oriented tools and metrics, even though the most crucial challenges like
                Service Cutting
                or
                Microservices Integration
                were of an architectural nature.
              
            
            
              Conclusions
              
                Practitioners relied on guidelines, standardization, or patterns like
                Event-Driven Messaging
                to partially address some reported evolvability challenges. However, specialized techniques, tools, and metrics are needed to support industry with the continuous evaluation of service granularity and dependencies. Future microservices research in the areas of maintenance, evolution, and technical debt should take our findings and the reported industry sentiments into account.},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Bogner, Justus and Fritzsch, Jonas and Wagner, Stefan and Zimmermann, Alfred},
	month = sep,
	year = {2021},
	pages = {104},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\2SSIE7E7\\Bogner et al. - 2021 - Industry practices and challenges for the evolvabi.pdf:application/pdf},
}

@article{sarker_data_2021,
	title = {Data {Science} and {Analytics}: {An} {Overview} from {Data}-{Driven} {Smart} {Computing}, {Decision}-{Making} and {Applications} {Perspective}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Data {Science} and {Analytics}},
	url = {https://link.springer.com/10.1007/s42979-021-00765-8},
	doi = {10.1007/s42979-021-00765-8},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Sarker, Iqbal H.},
	month = sep,
	year = {2021},
	pages = {377},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\3ZLNR8ZN\\Sarker - 2021 - Data Science and Analytics An Overview from Data-.pdf:application/pdf},
}

@article{yin_comparative_2021,
	title = {A {Comparative} {Survey} of {Big} {Data} {Computing} and {HPC}: {From} a {Parallel} {Programming} {Model} to a {Cluster} {Architecture}},
	issn = {0885-7458, 1573-7640},
	shorttitle = {A {Comparative} {Survey} of {Big} {Data} {Computing} and {HPC}},
	url = {https://link.springer.com/10.1007/s10766-021-00717-y},
	doi = {10.1007/s10766-021-00717-y},
	language = {en},
	urldate = {2021-10-24},
	journal = {International Journal of Parallel Programming},
	author = {Yin, Fei and Shi, Feng},
	month = may,
	year = {2021},
}

@article{brito_characterizing_2021,
	title = {Characterizing refactoring graphs in {Java} and {JavaScript} projects},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-10023-3},
	doi = {10.1007/s10664-021-10023-3},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Brito, Aline and Hora, Andre and Valente, Marco Tulio},
	month = nov,
	year = {2021},
	pages = {125},
}

@article{nogueira_monitoring_2021,
	title = {Monitoring a {CI}/{CD} {Workflow} {Using} {Process} {Mining}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00830-2},
	doi = {10.1007/s42979-021-00830-2},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Nogueira, Ana Filipa and Zenha-Rela, Mário},
	month = nov,
	year = {2021},
	pages = {448},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\CJXMHN4V\\Nogueira and Zenha-Rela - 2021 - Monitoring a CICD Workflow Using Process Mining.pdf:application/pdf},
}

@article{kong_anchor_2021,
	title = {{ANCHOR}: locating android framework-specific crashing faults},
	volume = {28},
	issn = {0928-8910, 1573-7535},
	shorttitle = {{ANCHOR}},
	url = {https://link.springer.com/10.1007/s10515-021-00290-1},
	doi = {10.1007/s10515-021-00290-1},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Automated Software Engineering},
	author = {Kong, Pingfan and Li, Li and Gao, Jun and Riom, Timothée and Zhao, Yanjie and Bissyandé, Tegawendé F. and Klein, Jacques},
	month = nov,
	year = {2021},
	pages = {10},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\IMSSUTXM\\Kong et al. - 2021 - ANCHOR locating android framework-specific crashi.pdf:application/pdf},
}

@article{silva_topic_2021,
	title = {Topic modeling in software engineering research},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-10026-0},
	doi = {10.1007/s10664-021-10026-0},
	abstract = {Abstract
            Topic modeling using models such as Latent Dirichlet Allocation (LDA) is a text mining technique to extract human-readable semantic “topics” (i.e., word clusters) from a corpus of textual documents. In software engineering, topic modeling has been used to analyze textual data in empirical studies (e.g., to find out what developers talk about online), but also to build new techniques to support software engineering tasks (e.g., to support source code comprehension). Topic modeling needs to be applied carefully (e.g., depending on the type of textual data analyzed and modeling parameters). Our study aims at describing how topic modeling has been applied in software engineering research with a focus on four aspects: (1) which topic models and modeling techniques have been applied, (2) which textual inputs have been used for topic modeling, (3) how textual data was “prepared” (i.e., pre-processed) for topic modeling, and (4) how generated topics (i.e., word clusters) were named to give them a human-understandable meaning. We analyzed topic modeling as applied in 111 papers from ten highly-ranked software engineering venues (five journals and five conferences) published between 2009 and 2020. We found that (1) LDA and LDA-based techniques are the most frequent topic modeling techniques, (2) developer communication and bug reports have been modelled most, (3) data pre-processing and modeling parameters vary quite a bit and are often vaguely reported, and (4) manual topic naming (such as deducting names based on frequent words in a topic) is common.},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Silva, Camila Costa and Galster, Matthias and Gilson, Fabian},
	month = nov,
	year = {2021},
	pages = {120},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\3IHVMXEK\\Silva et al. - 2021 - Topic modeling in software engineering research.pdf:application/pdf},
}

@article{sartaj_testing_2021,
	title = {Testing cockpit display systems of aircraft using a model-based approach},
	issn = {1619-1366, 1619-1374},
	url = {http://link.springer.com/10.1007/s10270-020-00844-z},
	doi = {10.1007/s10270-020-00844-z},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Sartaj, Hassan and Iqbal, Muhammad Zohaib and Khan, Muhammad Uzair},
	month = jan,
	year = {2021},
}

@article{maoz_spectra_2021,
	title = {Spectra: a specification language for reactive systems},
	volume = {20},
	issn = {1619-1366, 1619-1374},
	shorttitle = {Spectra},
	url = {https://link.springer.com/10.1007/s10270-021-00868-z},
	doi = {10.1007/s10270-021-00868-z},
	abstract = {Abstract
            We introduce Spectra, a new specification language for reactive systems, specifically tailored for the context of reactive synthesis. The meaning of Spectra is defined by a translation to a kernel language. Spectra comes with the Spectra Tools, a set of analyses, including a synthesizer to obtain a correct-by-construction implementation, several means for executing the resulting controller, and additional analyses aimed at helping engineers write higher-quality specifications. We present the language in detail and give an overview of its tool set. Together with the language and its tool set, we present four collections of many, non-trivial, large specifications, written by undergraduate computer science students for the development of autonomous Lego robots and additional example reactive systems. The collected specifications can serve as benchmarks for future studies on reactive synthesis. We present the specifications, with observations and lessons learned about the potential use of reactive synthesis by software engineers.},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Maoz, Shahar and Ringert, Jan Oliver},
	month = oct,
	year = {2021},
	pages = {1553--1586},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\XYWIC5ZM\\Maoz and Ringert - 2021 - Spectra a specification language for reactive sys.pdf:application/pdf},
}

@article{augusto_optimization_2021,
	title = {Optimization framework for {DFG}-based automated process discovery approaches},
	volume = {20},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-020-00846-x},
	doi = {10.1007/s10270-020-00846-x},
	abstract = {Abstract
            The problem of automatically discovering business process models from event logs has been intensely investigated in the past two decades, leading to a wide range of approaches that strike various trade-offs between accuracy, model complexity, and execution time. A few studies have suggested that the accuracy of automated process discovery approaches can be enhanced by means of metaheuristic optimization techniques. However, these studies have remained at the level of proposals without validation on real-life datasets or they have only considered one metaheuristic in isolation. This article presents a metaheuristic optimization framework for automated process discovery. The key idea of the framework is to construct a directly-follows graph (DFG) from the event log, to perturb this DFG so as to generate new candidate solutions, and to apply a DFG-based automated process discovery approach in order to derive a process model from each DFG. The framework can be instantiated by linking it to an automated process discovery approach, an optimization metaheuristic, and the quality measure to be optimized (e.g., fitness, precision, F-score). The article considers several instantiations of the framework corresponding to four optimization metaheuristics, three automated process discovery approaches (Inductive Miner—directly-follows, Fodina, and Split Miner), and one accuracy measure (Markovian F-score). These framework instances are compared using a set of 20 real-life event logs. The evaluation shows that metaheuristic optimization consistently yields visible improvements in F-score for all the three automated process discovery approaches, at the cost of execution times in the order of minutes, versus seconds for the baseline approaches.},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Augusto, Adriano and Dumas, Marlon and La Rosa, Marcello and Leemans, Sander J. J. and vanden Broucke, Seppe K. L. M.},
	month = aug,
	year = {2021},
	pages = {1245--1270},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\A4C84B6R\\Augusto et al. - 2021 - Optimization framework for DFG-based automated pro.pdf:application/pdf},
}

@article{madani_distributed_2021,
	title = {Distributed model validation with {Epsilon}},
	volume = {20},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-021-00878-x},
	doi = {10.1007/s10270-021-00878-x},
	abstract = {Abstract
            
              Scalable performance is a major challenge with current model management tools. As the size and complexity of models and model management programs increases and the cost of computing falls, one solution for improving performance of model management programs is to perform computations on multiple computers. In this paper, we demonstrate a low-overhead data-parallel approach for distributed model validation in the context of an OCL-like language. Our approach minimises communication costs by exploiting the deterministic structure of programs and can take advantage of multiple cores on each (heterogeneous) machine with highly configurable computational granularity. Our performance evaluation shows that the implementation is extremely low overhead, achieving a speed up of 24.5
              
                
                  \$\${\textbackslash}times \$\$
                  
                    ×
                  
                
              
              with 26 computers over the sequential case, and 122
              
                
                  \$\${\textbackslash}times \$\$
                  
                    ×
                  
                
              
              when utilising all six cores on each computer.},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Madani, Sina and Kolovos, Dimitris and Paige, Richard F.},
	month = oct,
	year = {2021},
	pages = {1689--1712},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\9JZPR99W\\Madani et al. - 2021 - Distributed model validation with Epsilon.pdf:application/pdf},
}

@article{lima_assessing_2021,
	title = {Assessing exception handling testing practices in open-source libraries},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-09983-3},
	doi = {10.1007/s10664-021-09983-3},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Lima, Luan P. and Rocha, Lincoln S. and Bezerra, Carla I. M. and Paixao, Matheus},
	month = sep,
	year = {2021},
	pages = {85},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\KYF5QS9P\\Lima et al. - 2021 - Assessing exception handling testing practices in .pdf:application/pdf},
}

@article{ulan_copula-based_2021,
	title = {Copula-based software metrics aggregation},
	issn = {0963-9314, 1573-1367},
	url = {https://link.springer.com/10.1007/s11219-021-09568-9},
	doi = {10.1007/s11219-021-09568-9},
	abstract = {Abstract
            
              A quality model is a conceptual decomposition of an abstract notion of quality into relevant, possibly conflicting characteristics and further into measurable metrics. For quality assessment and decision making, metrics values are aggregated to characteristics and ultimately to quality scores. Aggregation has often been problematic as quality models do not provide the semantics of aggregation. This makes it hard to formally reason about metrics, characteristics, and quality. We argue that aggregation needs to be interpretable and mathematically well defined in order to assess, to compare, and to improve quality. To address this challenge, we propose a probabilistic approach to aggregation and define quality scores based on joint distributions of absolute metrics values. To evaluate the proposed approach and its implementation under realistic conditions, we conduct empirical studies on
              bug prediction
              of ca. 5000 software classes,
              maintainability
              of ca. 15000 open-source software systems, and on the
              information quality
              of ca. 100000 real-world technical documents. We found that our approach is feasible, accurate, and scalable in performance.},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software Quality Journal},
	author = {Ulan, Maria and Löwe, Welf and Ericsson, Morgan and Wingkvist, Anna},
	month = aug,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\VYRXZU3X\\Ulan et al. - 2021 - Copula-based software metrics aggregation.pdf:application/pdf},
}

@article{ahammad_software-defined_2021,
	title = {Software-{Defined} {Dew}, {Roof}, {Fog} and {Cloud} ({SD}-{DRFC}) {Framework} for {IoT} {Ecosystem}: {The} {Journey}, {Novel} {Framework} {Architecture}, {Simulation}, and {Use} {Cases}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Software-{Defined} {Dew}, {Roof}, {Fog} and {Cloud} ({SD}-{DRFC}) {Framework} for {IoT} {Ecosystem}},
	url = {https://link.springer.com/10.1007/s42979-021-00521-y},
	doi = {10.1007/s42979-021-00521-y},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Ahammad, Ishtiaq and Khan, Md. Ashikur Rahman and Salehin, Zayed Us},
	month = may,
	year = {2021},
	pages = {159},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\QGMGLE2C\\Ahammad et al. - 2021 - Software-Defined Dew, Roof, Fog and Cloud (SD-DRFC.pdf:application/pdf},
}

@article{falcone_taxonomy_2021,
	title = {A taxonomy for classifying runtime verification tools},
	volume = {23},
	issn = {1433-2779, 1433-2787},
	url = {https://link.springer.com/10.1007/s10009-021-00609-z},
	doi = {10.1007/s10009-021-00609-z},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {International Journal on Software Tools for Technology Transfer},
	author = {Falcone, Yliès and Krstić, Srđan and Reger, Giles and Traytel, Dmitriy},
	month = apr,
	year = {2021},
	pages = {255--284},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\ACWR8DA9\\Falcone et al. - 2021 - A taxonomy for classifying runtime verification to.pdf:application/pdf},
}

@article{hatamian_privacy_2021,
	title = {A privacy and security analysis of early-deployed {COVID}-19 contact tracing {Android} apps},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-020-09934-4},
	doi = {10.1007/s10664-020-09934-4},
	abstract = {Abstract
            As this article is being drafted, the SARS-CoV-2/COVID-19 pandemic is causing harm and disruption across the world. Many countries aimed at supporting their contact tracers with the use of digital contact tracing apps in order to manage and control the spread of the virus. Their idea is the automatic registration of meetings between smartphone owners for the quicker processing of infection chains. To date, there are many contact tracing apps that have already been launched and used in 2020. There has been a lot of speculations about the privacy and security aspects of these apps and their potential violation of data protection principles. Therefore, the developers of these apps are constantly criticized because of undermining users’ privacy, neglecting essential privacy and security requirements, and developing apps under time pressure without considering privacy- and security-by-design. In this study, we analyze the privacy and security performance of 28 contact tracing apps available on Android platform from various perspectives, including their code’s privileges, promises made in their privacy policies, and static and dynamic performances. Our methodology is based on the collection of various types of data concerning these 28 apps, namely permission requests, privacy policy texts, run-time resource accesses, and existing security vulnerabilities. Based on the analysis of these data, we quantify and assess the impact of these apps on users’ privacy. We aimed at providing a quick and systematic inspection of the earliest contact tracing apps that have been deployed on multiple continents. Our findings have revealed that the developers of these apps need to take more cautionary steps to ensure code quality and to address security and privacy vulnerabilities. They should more consciously follow legal requirements with respect to apps’ permission declarations, privacy principles, and privacy policy contents.},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Hatamian, Majid and Wairimu, Samuel and Momen, Nurul and Fritsch, Lothar},
	month = may,
	year = {2021},
	pages = {36},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\U8GZIVHF\\Hatamian et al. - 2021 - A privacy and security analysis of early-deployed .pdf:application/pdf},
}

@article{cogo_empirical_2021,
	title = {An empirical study of same-day releases of popular packages in the npm ecosystem},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-09980-6},
	doi = {10.1007/s10664-021-09980-6},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Cogo, Filipe R. and Oliva, Gustavo A. and Bezemer, Cor-Paul and Hassan, Ahmed E.},
	month = sep,
	year = {2021},
	pages = {89},
}

@article{abid_facer_2021,
	title = {{FACER}: {An} {API} usage-based code-example recommender for opportunistic reuse},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {{FACER}},
	url = {https://link.springer.com/10.1007/s10664-021-10000-w},
	doi = {10.1007/s10664-021-10000-w},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Abid, Shamsa and Shamail, Shafay and Basit, Hamid Abdul and Nadi, Sarah},
	month = nov,
	year = {2021},
	pages = {110},
}

@article{wu_intent-driven_2021,
	title = {Intent-driven cloud resource design framework to meet cloud performance requirements and its application to a cloud-sensor system},
	volume = {10},
	issn = {2192-113X},
	url = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-021-00242-w},
	doi = {10.1186/s13677-021-00242-w},
	abstract = {Abstract
            In cloud service delivery, the cloud user is concerned about “what” function and performance the cloud service could provide, while the cloud provider is concerned about “how” to design proper underlying cloud resources to meet the cloud user’s requirements. We take the cloud user’s requirement as intent and aim to translate the intent autonomously into cloud resource decisions. In recent years, intent-driven management has been a widely spread management concept which aims to close the gap between the operator’s high-level requirements and the underlying infrastructure configuration complexity. Intent-driven management has drawn attention from telecommunication industries, standards organizations, the open source software community and academic research. There are various application of intent-driven management which are being studied and implemented, including intent-driven Software Defined Network (SDN), intent-driven wireless network configuration, etc. However, application of intent-driven management into the cloud domain, especially the translation of cloud performance-related intent into the amount of cloud resource, has not been addressed by existing studies. In this work, we have proposed an Intent-based Cloud Service Management (ICSM) framework, and focused on realizing the RDF (Resource Design Function) to translate cloud performance-related intent into concrete cloud computation resource amount settings that are able  to meet the intended performance requirement. Furthermore, we have also proposed an intent breach prevention mechanism, P-mode, which is essential for commercial cloud service delivery. We have validated the proposals in a sensor-cloud system, designed to meet the user’s intent to process a large quantity of images collected by the sensors in a restricted time interval. The validation results show that the framework achieved 88.93 {\textasciitilde} 90.63\% precision for performance inference, and exceeds the conventional resource approach in the aspects of human cost, time cost and design results. Furthermore, the intent breach prevention mechanism P-mode significantly reduced the breach risk, at the same time keeping a high level of precision.},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Journal of Cloud Computing},
	author = {Wu, Chao and Horiuchi, Shingo and Murase, Kenji and Kikushima, Hiroaki and Tayama, Kenichi},
	month = dec,
	year = {2021},
	pages = {30},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\FBX8L4YL\\Wu et al. - 2021 - Intent-driven cloud resource design framework to m.pdf:application/pdf},
}

@article{kitamura_low-congestion_2021,
	title = {Low-congestion shortcut and graph parameters},
	volume = {34},
	issn = {0178-2770, 1432-0452},
	url = {https://link.springer.com/10.1007/s00446-021-00401-x},
	doi = {10.1007/s00446-021-00401-x},
	abstract = {Abstract
            
              Distributed graph algorithms in the standard CONGEST model often exhibit the time-complexity lower bound of
              
                
                  \$\$\{{\textbackslash}tilde\{{\textbackslash}Omega \}\}({\textbackslash}sqrt\{n\} + D)\$\$
                  
                    
                      
                        Ω
                        {\textasciitilde}
                      
                      
                        (
                        
                          n
                        
                        +
                        D
                        )
                      
                    
                  
                
              
              rounds for several global problems, where
              n
              denotes the number of nodes and
              D
              the diameter of the input graph. Because such a lower bound is derived from special “hard-core” instances, it does not necessarily apply to specific popular graph classes such as planar graphs. The concept of
              low-congestion shortcuts
              was initiated by Ghaffari and Haeupler [SODA2016] for addressing the design of CONGEST algorithms running fast in restricted network topologies. In particular, given a graph class
              
                
                  \$\$\{{\textbackslash}mathcal \{C\}\}\$\$
                  
                    C
                  
                
              
              , an
              f
              -round algorithm for constructing shortcuts of quality
              q
              for any instance in
              
                
                  \$\$\{{\textbackslash}mathcal \{C\}\}\$\$
                  
                    C
                  
                
              
              results in
              
                
                  \$\$\{{\textbackslash}tilde\{O\}\}(q + f)\$\$
                  
                    
                      
                        O
                        {\textasciitilde}
                      
                      
                        (
                        q
                        +
                        f
                        )
                      
                    
                  
                
              
              -round algorithms for solving several fundamental graph problems such as minimum spanning tree and minimum cut, for
              
                
                  \$\$\{{\textbackslash}mathcal \{C\}\}\$\$
                  
                    C
                  
                
              
              . The main interest on this line is to identify the graph classes allowing the shortcuts that are efficient in the sense of breaking
              
                
                  \$\$\{{\textbackslash}tilde\{O\}\}({\textbackslash}sqrt\{n\}+D)\$\$
                  
                    
                      
                        O
                        {\textasciitilde}
                      
                      
                        (
                        
                          n
                        
                        +
                        D
                        )
                      
                    
                  
                
              
              -round general lower bounds. In this study, we consider the relationship between the quality of low-congestion shortcuts and the following four major graph parameters: doubling dimension, chordality, diameter, and clique-width. The key ingredient of the upper-bound side is a novel shortcut construction technique known as
              short-hop extension
              , which might be of independent interest.},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Distributed Computing},
	author = {Kitamura, Naoki and Kitagawa, Hirotaka and Otachi, Yota and Izumi, Taisuke},
	month = oct,
	year = {2021},
	pages = {349--365},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\2S6S3I8F\\Kitamura et al. - 2021 - Low-congestion shortcut and graph parameters.pdf:application/pdf},
}

@article{yin_application_2021,
	title = {Application of the {OIRE} method—tool support and initial feedback from two chinese companies},
	issn = {0963-9314, 1573-1367},
	url = {https://link.springer.com/10.1007/s11219-021-09562-1},
	doi = {10.1007/s11219-021-09562-1},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software Quality Journal},
	author = {Yin, Huishi and Pfahl, Dietmar},
	month = jun,
	year = {2021},
}

@article{kugele_model-based_2021,
	title = {Model-based resource analysis and synthesis of service-oriented automotive software architectures},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-021-00896-9},
	doi = {10.1007/s10270-021-00896-9},
	abstract = {Abstract
            
              Context
              Automotive software architectures describe distributed functionality by an interaction of software components. One drawback of today’s architectures is their strong integration into the onboard communication network based on predefined dependencies at design time. The idea is to reduce this rigid integration and technological dependencies. To this end, service-oriented architecture offers a suitable methodology since network communication is dynamically established at run-time.
            
            
              Aim
              We target to provide a methodology for analysing hardware resources and synthesising automotive service-oriented architectures based on platform-independent service models. Subsequently, we focus on transforming these models into a platform-specific architecture realisation process following AUTOSAR Adaptive.
            
            
              Approach
              For the platform-independent part, we apply the concepts of design space exploration and simulation to analyse and synthesise deployment configurations, i. e., mapping services to hardware resources at an early development stage. We refine these configurations to AUTOSAR Adaptive software architecture models representing the necessary input for a subsequent implementation process for the platform-specific part.
            
            
              Result
              We present deployment configurations that are optimal for the usage of a given set of computing resources currently under consideration for our next generation of E/E architecture. We also provide simulation results that demonstrate the ability of these configurations to meet the run time requirements. Both results helped us to decide whether a particular configuration can be implemented. As a possible software toolchain for this purpose, we finally provide a prototype.
            
            
              Conclusion
              The use of models and their analysis are proper means to get there, but the quality and speed of development must also be considered.},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Kugele, Stefan and Obergfell, Philipp and Sax, Eric},
	month = sep,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\FBR44UYS\\Kugele et al. - 2021 - Model-based resource analysis and synthesis of ser.pdf:application/pdf},
}

@article{oyetoyan_improved_2021,
	title = {An improved text classification modelling approach to identify security messages in heterogeneous projects},
	volume = {29},
	issn = {0963-9314, 1573-1367},
	url = {https://link.springer.com/10.1007/s11219-020-09546-7},
	doi = {10.1007/s11219-020-09546-7},
	abstract = {Abstract
            Security remains under-addressed in many organisations, illustrated by the number of large-scale software security breaches. Preventing breaches can begin during software development if attention is paid to security during the software’s design and implementation. One approach to security assurance during software development is to examine communications between developers as a means of studying the security concerns of the project. Prior research has investigated models for classifying project communication messages (e.g., issues or commits) as security related or not. A known problem is that these models are project-specific, limiting their use by other projects or organisations. We investigate whether we can build a generic classification model that can generalise across projects. We define a set of security keywords by extracting them from relevant security sources, dividing them into four categories: asset, attack/threat, control/mitigation, and implicit. Using different combinations of these categories and including them in the training dataset, we built a classification model and evaluated it on industrial, open-source, and research-based datasets containing over 45 different products. Our model based on harvested security keywords as a feature set shows average recall from 55 to 86\%, minimum recall from 43 to 71\% and maximum recall from 60 to 100\%. An average f-score between 3.4 and 88\%, an average g-measure of at least 66\% across all the dataset, and an average AUC of ROC from 69 to 89\%. In addition, models that use externally sourced features outperformed models that use project-specific features on average by a margin of 26–44\% in recall, 22–50\% in g-measure, 0.4–28\% in f-score, and 15–19\% in AUC of ROC. Further, our results outperform a state-of-the-art prediction model for security bug reports in all cases. We find using sound statistical and effect size tests that (1) using harvested security keywords as features to train a text classification model improve classification models and generalise to other projects significantly. (2) Including features in the training dataset before model construction improve classification models significantly. (3) Different security categories represent predictors for different projects. Finally, we introduce new and promising approaches to construct models that can generalise across different independent projects.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Software Quality Journal},
	author = {Oyetoyan, Tosin Daniel and Morrison, Patrick},
	month = jun,
	year = {2021},
	pages = {509--553},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\JAMQXKJ9\\Oyetoyan and Morrison - 2021 - An improved text classification modelling approach.pdf:application/pdf},
}

@article{olianas_matter_2021,
	title = {{MATTER}: {A} tool for generating end-to-end {IoT} test scripts},
	issn = {0963-9314, 1573-1367},
	shorttitle = {{MATTER}},
	url = {https://link.springer.com/10.1007/s11219-021-09565-y},
	doi = {10.1007/s11219-021-09565-y},
	abstract = {Abstract
            In the last few years, Internet of Things (IoT) systems have drastically increased their relevance in many fundamental sectors. For this reason, assuring their quality is of paramount importance, especially in safety-critical contexts. Unfortunately, few quality assurance proposals for assuring the quality of these complex systems are present in the literature. In this paper, we extended and improved our previous approach for semi-automated model-based generation of executable test scripts. Our proposal is oriented to system-level acceptance testing of IoT systems. We have implemented a prototype tool taking in input a UML model of the system under test and some additional artefacts, and producing in output a test suite that checks if the system’s behaviour is compliant with such a model. We empirically evaluated our tool employing two IoT systems: a mobile health IoT system for diabetic patients and a smart park management system part of a smart city project. Both systems involve sensors or actuators, smartphones, and a remote cloud server. Results show that the test suites generated with our tool have been able to kill 91\% of the overall 260 generated mutants (i.e. artificial bugged versions of the two considered systems). Moreover, the optimisation introduced in this novel version of our prototype, based on a minimisation post-processing step, allowed to reduce the time required for executing the entire test suites (about -20/25\%) with no adverse effect on the bug-detection capability.},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software Quality Journal},
	author = {Olianas, Dario and Leotta, Maurizio and Ricca, Filippo},
	month = aug,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\6WB7ZDKD\\Olianas et al. - 2021 - MATTER A tool for generating end-to-end IoT test .pdf:application/pdf},
}

@article{sanchez_runtime_2021,
	title = {Runtime translation of {OCL}-like statements on {Simulink} models: {Expanding} domains and optimising queries},
	issn = {1619-1366, 1619-1374},
	shorttitle = {Runtime translation of {OCL}-like statements on {Simulink} models},
	url = {https://link.springer.com/10.1007/s10270-021-00910-0},
	doi = {10.1007/s10270-021-00910-0},
	abstract = {Abstract
            Open-source model management frameworks such as OCL and ATL tend to focus on manipulating models built atop the Eclipse Modelling Framework (EMF), a de facto standard for domain specific modelling. MATLAB Simulink is a widely used proprietary modelling framework for dynamic systems that is built atop an entirely different technical stack to EMF. To leverage the facilities of open-source model management frameworks with Simulink models, these can be transformed into an EMF-compatible representation. Downsides of this approach include the synchronisation of the native Simulink model and its EMF representation as they evolve; the completeness of the EMF representation, and the transformation cost which can be crippling for large Simulink models. We propose an alternative approach to bridge Simulink models with open-source model management frameworks that uses an “on-the-fly” translation of model management constructs into MATLAB statements. Our approach does not require an EMF representation and can mitigate the cost of the upfront transformation on large models. To evaluate both approaches we measure the performance of a model validation process with Epsilon (a model management framework) on a sample of large Simulink models available on GitHub. Our previous results suggest that, with our approach, the total validation time can be reduced by up to 80\%. In this paper, we expand our approach to support the management of Simulink requirements and dictionaries, and we improve the approach to perform queries on collections of model elements more efficiently. We demonstrate the use of the Simulink requirements and dictionaries with a case study and we evaluate the optimisations on collection queries with an experiment that compares the performance of a set of queries on models with different sizes. Our results suggest an improvement by up to 99\% on some queries.},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Sanchez, Beatriz A. and Zolotas, Athanasios and Hoyos Rodriguez, Horacio and Kolovos, Dimitris and Paige, Richard F. and Cooper, Justin C. and Hampson, Jason},
	month = aug,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\AE6M86DX\\Sanchez et al. - 2021 - Runtime translation of OCL-like statements on Simu.pdf:application/pdf},
}

@article{schneider_scalable_2021,
	title = {Scalable online first-order monitoring},
	volume = {23},
	issn = {1433-2779, 1433-2787},
	url = {https://link.springer.com/10.1007/s10009-021-00607-1},
	doi = {10.1007/s10009-021-00607-1},
	abstract = {Abstract
            Online monitoring is the task of identifying complex temporal patterns while incrementally processing streams of data-carrying events. Existing state-of-the-art monitors for first-order patterns, which may refer to and quantify over data values, can process streams of modest velocity in real-time. We show how to scale up first-order monitoring to substantially higher velocities by slicing the stream, based on the events’ data values, into substreams that can be monitored independently. Because monitoring is not embarrassingly parallel in general, slicing can lead to data duplication. To reduce this overhead, we adapt hash-based partitioning techniques from databases to the monitoring setting. We implement these techniques in an automatic data slicer based on Apache Flink and empirically evaluate its performance using two tools—MonPoly and DejaVu—to monitor the substreams. Our evaluation attests to substantial scalability improvements for both tools.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {International Journal on Software Tools for Technology Transfer},
	author = {Schneider, Joshua and Basin, David and Brix, Frederik and Krstić, Srđan and Traytel, Dmitriy},
	month = apr,
	year = {2021},
	pages = {185--208},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\XPNWH457\\Schneider et al. - 2021 - Scalable online first-order monitoring.pdf:application/pdf},
}

@article{alani_big_2021,
	title = {Big data in cybersecurity: a survey of applications and future trends},
	volume = {7},
	issn = {2199-4668, 2199-4676},
	shorttitle = {Big data in cybersecurity},
	url = {https://link.springer.com/10.1007/s40860-020-00120-3},
	doi = {10.1007/s40860-020-00120-3},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Journal of Reliable Intelligent Environments},
	author = {Alani, Mohammed M.},
	month = jun,
	year = {2021},
	pages = {85--114},
}

@article{havelund_extension_2021,
	title = {An extension of first-order {LTL} with rules with application to runtime verification},
	volume = {23},
	issn = {1433-2779, 1433-2787},
	url = {https://link.springer.com/10.1007/s10009-021-00626-y},
	doi = {10.1007/s10009-021-00626-y},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {International Journal on Software Tools for Technology Transfer},
	author = {Havelund, Klaus and Peled, Doron},
	month = aug,
	year = {2021},
	pages = {547--563},
}

@article{peruma_how_2022,
	title = {How do i refactor this? {An} empirical study on refactoring trends and topics in {Stack} {Overflow}},
	volume = {27},
	issn = {1382-3256, 1573-7616},
	shorttitle = {How do i refactor this?},
	url = {https://link.springer.com/10.1007/s10664-021-10045-x},
	doi = {10.1007/s10664-021-10045-x},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Peruma, Anthony and Simmons, Steven and AlOmar, Eman Abdullah and Newman, Christian D. and Mkaouer, Mohamed Wiem and Ouni, Ali},
	month = jan,
	year = {2022},
	pages = {11},
}

@article{beyer_first_2021,
	title = {First international competition on software testing},
	issn = {1433-2779, 1433-2787},
	url = {https://link.springer.com/10.1007/s10009-021-00613-3},
	doi = {10.1007/s10009-021-00613-3},
	abstract = {Abstract
            
              Tool competitions are a special form of comparative evaluation, where each tool has a team of developers or supporters associated that makes sure the tool is properly configured to show its best possible performance. In several research areas, tool competitions have been a driving force for the development of mature tools that represent the state of the art in their field. This paper describes and reports the results of the 1
              
                
                  \$\${\textasciicircum}\{{\textbackslash}text \{st\}\}\$\$
                  
                    
                      
                      st
                    
                  
                
              
              International Competition on Software Testing (Test-Comp 2019), a comparative evaluation of automatic tools for software test generation. Test-Comp 2019 was presented as part of TOOLympics 2019, a satellite event of the conference TACAS. Nine test generators were evaluated on 2 356 test-generation tasks. There were two test specifications, one for generating a test that covers a particular function call and one for generating a test suite that tries to cover the branches of the program.},
	language = {en},
	urldate = {2021-10-24},
	journal = {International Journal on Software Tools for Technology Transfer},
	author = {Beyer, Dirk},
	month = jun,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\TQCNG58C\\Beyer - 2021 - First international competition on software testin.pdf:application/pdf},
}

@article{cranefield_enabling_2021,
	title = {Enabling {BDI} group plans with coordination middleware: semantics and implementation},
	volume = {35},
	issn = {1387-2532, 1573-7454},
	shorttitle = {Enabling {BDI} group plans with coordination middleware},
	url = {https://link.springer.com/10.1007/s10458-021-09525-7},
	doi = {10.1007/s10458-021-09525-7},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Autonomous Agents and Multi-Agent Systems},
	author = {Cranefield, Stephen},
	month = oct,
	year = {2021},
	pages = {45},
}

@article{ahmed_learning_2021,
	title = {Learning lenient parsing \& typing via indirect supervision},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-021-09942-y},
	doi = {10.1007/s10664-021-09942-y},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Ahmed, Toufique and Devanbu, Premkumar and Hellendoorn, Vincent J},
	month = mar,
	year = {2021},
	pages = {29},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\6RJZT4QQ\\Ahmed et al. - 2021 - Learning lenient parsing & typing via indirect sup.pdf:application/pdf},
}

@article{veizaga_systematically_2021,
	title = {On systematically building a controlled natural language for functional requirements},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-09956-6},
	doi = {10.1007/s10664-021-09956-6},
	abstract = {Abstract
            Natural language (NL) is pervasive in software requirements specifications (SRSs). However, despite its popularity and widespread use, NL is highly prone to quality issues such as vagueness, ambiguity, and incompleteness. Controlled natural languages (CNLs) have been proposed as a way to prevent quality problems in requirements documents, while maintaining the flexibility to write and communicate requirements in an intuitive and universally understood manner. In collaboration with an industrial partner from the financial domain, we systematically develop and evaluate a CNL, named Rimay, intended at helping analysts write functional requirements. We rely on Grounded Theory for building Rimay and follow well-known guidelines for conducting and reporting industrial case study research. Our main contributions are: (1) a qualitative methodology to systematically define a CNL for functional requirements; this methodology is intended to be general for use across information-system domains, (2) a CNL grammar to represent functional requirements; this grammar is derived from our experience in the financial domain, but should be applicable, possibly with adaptations, to other information-system domains, and (3) an empirical evaluation of our CNL (Rimay) through an industrial case study. Our contributions draw on 15 representative SRSs, collectively containing 3215 NL requirements statements from the financial domain. Our evaluation shows that Rimay is expressive enough to capture, on average, 88\% (405 out of 460) of the NL requirements statements in four previously unseen SRSs from the financial domain.},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Veizaga, Alvaro and Alferez, Mauricio and Torre, Damiano and Sabetzadeh, Mehrdad and Briand, Lionel},
	month = jul,
	year = {2021},
	pages = {79},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\29YLA8FU\\Veizaga et al. - 2021 - On systematically building a controlled natural la.pdf:application/pdf},
}

@article{siavvas_hierarchical_2021,
	title = {A hierarchical model for quantifying software security based on static analysis alerts and software metrics},
	volume = {29},
	issn = {0963-9314, 1573-1367},
	url = {https://link.springer.com/10.1007/s11219-021-09555-0},
	doi = {10.1007/s11219-021-09555-0},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Software Quality Journal},
	author = {Siavvas, Miltiadis and Kehagias, Dionysios and Tzovaras, Dimitrios and Gelenbe, Erol},
	month = jun,
	year = {2021},
	pages = {431--507},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\47DZU75H\\Siavvas et al. - 2021 - A hierarchical model for quantifying software secu.pdf:application/pdf},
}

@article{verbeek_log_2021,
	title = {The {Log} {Skeleton} {Visualizer} in {ProM} 6.9: {The} winning contribution to the process discovery contest 2019},
	issn = {1433-2779, 1433-2787},
	shorttitle = {The {Log} {Skeleton} {Visualizer} in {ProM} 6.9},
	url = {https://link.springer.com/10.1007/s10009-021-00618-y},
	doi = {10.1007/s10009-021-00618-y},
	abstract = {Abstract
            Process discovery is an important area in the field of process mining. To help advance this area, a process discovery contest (PDC) has been set up, which allows us to compare different approaches. At the moment of writing, there have been three instances of the PDC: in 2016, in 2017, and in 2019. This paper introduces the winning contribution to the PDC 2019, called the Log Skeleton Visualizer. This visualizer uses a novel type of process models called log skeletons. In contrast with many workflow net-based discovery techniques, these log skeletons do not rely on the directly follows relation. As a result, log skeletons offer circumstantial information on the event log at hand rather than only sequential information. Using this visualizer, we were able to classify 898 out of 900 traces correctly for the PDC 2019 and to win this contest.},
	language = {en},
	urldate = {2021-10-24},
	journal = {International Journal on Software Tools for Technology Transfer},
	author = {Verbeek, H. M. W.},
	month = may,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\777CU7MQ\\Verbeek - 2021 - The Log Skeleton Visualizer in ProM 6.9 The winni.pdf:application/pdf},
}

@article{kappel_language-independent_2021,
	title = {Language-independent look-ahead for checking multi-perspective declarative process models},
	volume = {20},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-020-00857-8},
	doi = {10.1007/s10270-020-00857-8},
	abstract = {Abstract
            Declarative process modelling languages focus on describing a process by restrictions over the behaviour, which must be satisfied throughout the whole process execution. Hence, they are well suited for modelling knowledge-intensive processes with many decision points. However, such models can be hard to read and understand, which affect the modelling and maintenance of the process models tremendously as well as their execution. When executing such declarative (multi-perspective) process models, it may happen that the execution of activities or the change of data values may result in the non-executability of crucial activities. Hence, it would be beneficial to know all consequences of decisions to give recommendations to the process participants. A look-ahead attempts to predict the effects of executing an activity towards possible consequences within an a priori defined time window. The prediction is based on the current state of the process execution, the intended next event and the underlying process model. While execution engines for single-perspective imperative process models already implement such functionality, execution approaches, for multi-perspective declarative process models that involve constraints on data and resources, are less mature. In this paper, we introduce a simulation-based look-ahead approach for multi-perspective declarative process models. This approach transforms the problem of a context-aware process simulation into a SAT problem, by translating a declarative multi-perspective process model and the current state of a process execution into a specification of the logic language Alloy. Via a SAT solver, process trajectories are generated that either satisfy or violate this specification. The simulated process trajectories are used to derive consequences and effects of certain decisions at any time of process execution. We evaluate our approach by means of three examples and give some advice for further optimizations.},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Käppel, Martin and Ackermann, Lars and Schönig, Stefan and Jablonski, Stefan},
	month = oct,
	year = {2021},
	pages = {1379--1401},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\RUHBF9YH\\Käppel et al. - 2021 - Language-independent look-ahead for checking multi.pdf:application/pdf},
}

@article{ulan_weighted_2021,
	title = {Weighted software metrics aggregation and its application to defect prediction},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-09984-2},
	doi = {10.1007/s10664-021-09984-2},
	abstract = {Abstract
            It is a well-known practice in software engineering to aggregate software metrics to assess software artifacts for various purposes, such as their maintainability or their proneness to contain bugs. For different purposes, different metrics might be relevant. However, weighting these software metrics according to their contribution to the respective purpose is a challenging task. Manual approaches based on experts do not scale with the number of metrics. Also, experts get confused if the metrics are not independent, which is rarely the case. Automated approaches based on supervised learning require reliable and generalizable training data, a ground truth, which is rarely available. We propose an automated approach to weighted metrics aggregation that is based on unsupervised learning. It sets metrics scores and their weights based on probability theory and aggregates them. To evaluate the effectiveness, we conducted two empirical studies on defect prediction, one on ca. 200 000 code changes, and another ca. 5 000 software classes. The results show that our approach can be used as an agnostic unsupervised predictor in the absence of a ground truth.},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Ulan, Maria and Löwe, Welf and Ericsson, Morgan and Wingkvist, Anna},
	month = sep,
	year = {2021},
	pages = {86},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\DDAYUM78\\Ulan et al. - 2021 - Weighted software metrics aggregation and its appl.pdf:application/pdf},
}

@article{singh_searching_2021,
	title = {Searching {String} in {Big}-{Data}: {A} {Better} {Approach} by {Applied} {Machine} {Learning}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Searching {String} in {Big}-{Data}},
	url = {https://link.springer.com/10.1007/s42979-021-00569-w},
	doi = {10.1007/s42979-021-00569-w},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Singh, Paras Nath and Gowdar, Tara P.},
	month = may,
	year = {2021},
	pages = {192},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\P7BAB3QQ\\Singh and Gowdar - 2021 - Searching String in Big-Data A Better Approach by.pdf:application/pdf},
}

@article{ashfaq_natural_2021,
	title = {Natural language ambiguity resolution by intelligent semantic annotation of software requirements},
	volume = {28},
	issn = {0928-8910, 1573-7535},
	url = {https://link.springer.com/10.1007/s10515-021-00291-0},
	doi = {10.1007/s10515-021-00291-0},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Automated Software Engineering},
	author = {Ashfaq, Fariha and Bajwa, Imran Sarwar},
	month = nov,
	year = {2021},
	pages = {13},
}

@article{bessghaier_longitudinal_2021,
	title = {A longitudinal exploratory study on code smells in server side web applications},
	issn = {0963-9314, 1573-1367},
	url = {https://link.springer.com/10.1007/s11219-021-09567-w},
	doi = {10.1007/s11219-021-09567-w},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software Quality Journal},
	author = {Bessghaier, Narjes and Ouni, Ali and Mkaouer, Mohamed Wiem},
	month = aug,
	year = {2021},
}

@article{akiki_checksum_2021,
	title = {{CHECKSUM}: tracking changes and measuring contributions in cooperative systems modeling},
	volume = {20},
	issn = {1619-1366, 1619-1374},
	shorttitle = {{CHECKSUM}},
	url = {https://link.springer.com/10.1007/s10270-020-00840-3},
	doi = {10.1007/s10270-020-00840-3},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Akiki, Pierre A. and Maalouf, Hoda W.},
	month = aug,
	year = {2021},
	pages = {1079--1122},
}

@article{wijerathna_mining_2022,
	title = {Mining and relating design contexts and design patterns from {Stack} {Overflow}},
	volume = {27},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-10034-0},
	doi = {10.1007/s10664-021-10034-0},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Wijerathna, Laksri and Aleti, Aldeida and Bi, Tingting and Tang, Antony},
	month = jan,
	year = {2022},
	pages = {8},
}

@article{wang_iiag_2021,
	title = {{IIAG}: a data-driven and theory-inspired approach for advising how to interact with new remote collaborators in {OSS} teams},
	volume = {28},
	issn = {0928-8910, 1573-7535},
	shorttitle = {{IIAG}},
	url = {https://link.springer.com/10.1007/s10515-021-00283-0},
	doi = {10.1007/s10515-021-00283-0},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Automated Software Engineering},
	author = {Wang, Yi and Redmiles, David},
	month = nov,
	year = {2021},
	pages = {5},
}

@article{samhi_first_2021,
	title = {A first look at {Android} applications in {Google} {Play} related to {COVID}-19},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-09943-x},
	doi = {10.1007/s10664-021-09943-x},
	abstract = {Abstract
            Due to the convenience of access-on-demand to information and business solutions, mobile apps have become an important asset in the digital world. In the context of the COVID-19 pandemic, app developers have joined the response effort in various ways by releasing apps that target different user bases (e.g., all citizens or journalists), offer different services (e.g., location tracking or diagnostic-aid), provide generic or specialized information, etc. While many apps have raised some concerns by spreading misinformation or even malware, the literature does not yet provide a clear landscape of the different apps that were developed. In this study, we focus on the Android ecosystem and investigate Covid-related Android apps. In a best-effort scenario, we attempt to systematically identify all relevant apps and study their characteristics with the objective to provide a first taxonomy of Covid-related apps, broadening the relevance beyond the implementation of contact tracing. Overall, our study yields a number of empirical insights that contribute to enlarge the knowledge on Covid-related apps: (1) Developer communities contributed rapidly to the COVID-19, with dedicated apps released as early as January 2020; (2) Covid-related apps deliver digital tools to users (e.g., health diaries), serve to broadcast information to users (e.g., spread statistics), and collect data from users (e.g., for tracing); (3) Covid-related apps are less complex than standard apps; (4) they generally do not seem to leak sensitive data; (5) in the majority of cases, Covid-related apps are released by entities with past experience on the market, mostly official government entities or public health organizations.},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Samhi, Jordan and Allix, Kevin and Bissyandé, Tegawendé F. and Klein, Jacques},
	month = jul,
	year = {2021},
	pages = {57},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\FRZTE94B\\Samhi et al. - 2021 - A first look at Android applications in Google Pla.pdf:application/pdf},
}

@article{hassan_survey_2021,
	title = {Survey on serverless computing},
	volume = {10},
	issn = {2192-113X},
	url = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-021-00253-7},
	doi = {10.1186/s13677-021-00253-7},
	abstract = {Abstract
            Serverless computing has gained importance over the last decade as an exciting new field, owing to its large influence in reducing costs, decreasing latency, improving scalability, and eliminating server-side management, to name a few. However, to date there is a lack of in-depth survey that would help developers and researchers better understand the significance of serverless computing in different contexts. Thus, it is essential to present research evidence that has been published in this area. In this systematic survey, 275 research papers that examined serverless computing from well-known literature databases were extensively reviewed to extract useful data. Then, the obtained data were analyzed to answer several research questions regarding state-of-the-art contributions of serverless computing, its concepts, its platforms, its usage, etc. We moreover discuss the challenges that serverless computing faces nowadays and how future research could enable its implementation and usage.},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Journal of Cloud Computing},
	author = {Hassan, Hassan B. and Barakat, Saman A. and Sarhan, Qusay I.},
	month = dec,
	year = {2021},
	pages = {39},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\4QZJVGWE\\Hassan et al. - 2021 - Survey on serverless computing.pdf:application/pdf},
}

@article{sanchez-ferreres_unleashing_2021,
	title = {Unleashing textual descriptions of business processes},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-021-00886-x},
	doi = {10.1007/s10270-021-00886-x},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Sànchez-Ferreres, Josep and Burattin, Andrea and Carmona, Josep and Montali, Marco and Padró, Lluís and Quishpi, Luís},
	month = may,
	year = {2021},
}

@article{lopez-martin_machine_2021,
	title = {Machine learning techniques for software testing effort prediction},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-020-09545-8},
	doi = {10.1007/s11219-020-09545-8},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software Quality Journal},
	author = {López-Martín, Cuauhtémoc},
	month = feb,
	year = {2021},
}

@article{al-hawari_classification_2021,
	title = {Classification of application reviews into software maintenance tasks using data mining techniques},
	volume = {29},
	issn = {0963-9314, 1573-1367},
	url = {https://link.springer.com/10.1007/s11219-020-09529-8},
	doi = {10.1007/s11219-020-09529-8},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {Software Quality Journal},
	author = {Al-Hawari, Assem and Najadat, Hassan and Shatnawi, Raed},
	month = sep,
	year = {2021},
	pages = {667--703},
}

@article{amit_corrective_2021,
	title = {Corrective commit probability: a measure of the effort invested in bug fixing},
	issn = {0963-9314, 1573-1367},
	shorttitle = {Corrective commit probability},
	url = {https://link.springer.com/10.1007/s11219-021-09564-z},
	doi = {10.1007/s11219-021-09564-z},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software Quality Journal},
	author = {Amit, Idan and Feitelson, Dror G.},
	month = aug,
	year = {2021},
}

@article{tahir_does_2021,
	title = {Does class size matter? {An} in-depth assessment of the effect of class size in software defect prediction},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {Does class size matter?},
	url = {https://link.springer.com/10.1007/s10664-021-09991-3},
	doi = {10.1007/s10664-021-09991-3},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Tahir, Amjed and Bennin, Kwabena E. and Xiao, Xun and MacDonell, Stephen G.},
	month = sep,
	year = {2021},
	pages = {106},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\UJUNJAYV\\Tahir et al. - 2021 - Does class size matter An in-depth assessment of .pdf:application/pdf},
}

@article{di_rocco_development_2021,
	title = {Development of recommendation systems for software engineering: the {CROSSMINER} experience},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {Development of recommendation systems for software engineering},
	url = {https://link.springer.com/10.1007/s10664-021-09963-7},
	doi = {10.1007/s10664-021-09963-7},
	abstract = {Abstract
            To perform their daily tasks, developers intensively make use of existing resources by consulting open source software (OSS) repositories. Such platforms contain rich data sources, e.g., code snippets, documentations, and user discussions, that can be useful for supporting development activities. Over the last decades, several techniques and tools have been promoted to provide developers with innovative features, aiming to bring in improvements in terms of development effort, cost savings, and productivity. In the context of the EU H2020 CROSSMINER project, a set of recommendation systems has been conceived to assist software programmers in different phases of the development process. The systems provide developers with various artifacts, such as third-party libraries, documentation about how to use the APIs being adopted, or relevant API function calls. To develop such recommendations, various technical choices have been made to overcome issues related to several aspects including the lack of baselines, limited data availability, decisions about the performance measures, and evaluation approaches. This paper is an experience report to present the knowledge pertinent to the set of recommendation systems developed through the CROSSMINER project. We explain in detail the challenges we had to deal with, together with the related lessons learned when developing and evaluating these systems. Our aim is to provide the research community with concrete takeaway messages that are expected to be useful for those who want to develop or customize their own recommendation systems. The reported experiences can facilitate interesting discussions and research work, which in the end contribute to the advancement of recommendation systems applied to solve different issues in Software Engineering.},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Di Rocco, Juri and Di Ruscio, Davide and Di Sipio, Claudio and Nguyen, Phuong T. and Rubei, Riccardo},
	month = jul,
	year = {2021},
	pages = {69},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\AY2NI9DE\\Di Rocco et al. - 2021 - Development of recommendation systems for software.pdf:application/pdf},
}

@article{shrikanth_assessing_2021,
	title = {Assessing practitioner beliefs about software engineering},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-09957-5},
	doi = {10.1007/s10664-021-09957-5},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Shrikanth, N. C. and Nichols, William and Fahid, Fahmid Morshed and Menzies, Tim},
	month = jul,
	year = {2021},
	pages = {73},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\SCSJ4SRI\\Shrikanth et al. - 2021 - Assessing practitioner beliefs about software engi.pdf:application/pdf},
}

@article{mashreghi_broadcast_2021,
	title = {Broadcast and minimum spanning tree with o(m) messages in the asynchronous {CONGEST} model},
	volume = {34},
	issn = {0178-2770, 1432-0452},
	url = {https://link.springer.com/10.1007/s00446-020-00387-y},
	doi = {10.1007/s00446-020-00387-y},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Distributed Computing},
	author = {Mashreghi, Ali and King, Valerie},
	month = aug,
	year = {2021},
	pages = {283--299},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\RW48UZI7\\Mashreghi and King - 2021 - Broadcast and minimum spanning tree with o(m) mess.pdf:application/pdf},
}

@article{choetkiertikul_automatically_2021,
	title = {Automatically recommending components for issue reports using deep learning},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09898-5},
	doi = {10.1007/s10664-020-09898-5},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Choetkiertikul, Morakot and Dam, Hoa Khanh and Tran, Truyen and Pham, Trang and Ragkhitwetsagul, Chaiyong and Ghose, Aditya},
	month = mar,
	year = {2021},
	pages = {14},
}

@article{feuilloley_redundancy_2021,
	title = {Redundancy in distributed proofs},
	volume = {34},
	issn = {0178-2770, 1432-0452},
	url = {https://link.springer.com/10.1007/s00446-020-00386-z},
	doi = {10.1007/s00446-020-00386-z},
	abstract = {Abstract
            
              Distributed proofs are mechanisms that enable the nodes of a network to collectively and efficiently check the correctness of Boolean predicates on the structure of the network (e.g., having a specific diameter), or on objects distributed over the nodes (e.g., a spanning tree). We consider well known mechanisms consisting of two components: a
              prover
              that assigns a
              certificate
              to each node, and a distributed algorithm called a
              verifier
              that is in charge of verifying the distributed proof formed by the collection of all certificates. We show that many network predicates have distributed proofs offering a high level of redundancy, explicitly or implicitly. We use this remarkable property of distributed proofs to establish perfect tradeoffs between the
              size of the certificate
              stored at every node, and the
              number of rounds
              of the verification protocol.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Distributed Computing},
	author = {Feuilloley, Laurent and Fraigniaud, Pierre and Hirvonen, Juho and Paz, Ami and Perry, Mor},
	month = apr,
	year = {2021},
	pages = {113--132},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\M53VBTXA\\Feuilloley et al. - 2021 - Redundancy in distributed proofs.pdf:application/pdf},
}

@article{mahdavi-hezaveh_software_2021,
	title = {Software development with feature toggles: practices used by practitioners},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {Software development with feature toggles},
	url = {http://link.springer.com/10.1007/s10664-020-09901-z},
	doi = {10.1007/s10664-020-09901-z},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Mahdavi-Hezaveh, Rezvan and Dremann, Jacob and Williams, Laurie},
	month = jan,
	year = {2021},
	pages = {1},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\4HYF7KAB\\Mahdavi-Hezaveh et al. - 2021 - Software development with feature toggles practic.pdf:application/pdf},
}

@article{aleti_e-apr_2021,
	title = {E-{APR}: {Mapping} the effectiveness of automated program repair techniques},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {E-{APR}},
	url = {https://link.springer.com/10.1007/s10664-021-09989-x},
	doi = {10.1007/s10664-021-09989-x},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Aleti, Aldeida and Martinez, Matias},
	month = sep,
	year = {2021},
	pages = {99},
}

@article{kim_are_2021,
	title = {Are datasets for information retrieval-based bug localization techniques trustworthy?: {Impact} analysis of bug types on {IRBL}},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {Are datasets for information retrieval-based bug localization techniques trustworthy?},
	url = {https://link.springer.com/10.1007/s10664-021-09946-8},
	doi = {10.1007/s10664-021-09946-8},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Kim, Misoo and Lee, Eunseok},
	month = may,
	year = {2021},
	pages = {35},
}

@article{rani_what_2021,
	title = {What do class comments tell us? {An} investigation of comment evolution and practices in {Pharo} {Smalltalk}},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {What do class comments tell us?},
	url = {https://link.springer.com/10.1007/s10664-021-09981-5},
	doi = {10.1007/s10664-021-09981-5},
	abstract = {Abstract
            
              Context
              Previous studies have characterized code comments in various programming languages, showing how high quality of code comments is crucial to support program comprehension activities, and to improve the effectiveness of maintenance tasks. However, very few studies have focused on understanding developer practices to write comments. None of them has compared such developer practices to the standard comment guidelines to study the extent to which developers follow the guidelines.
            
            
              Objective
              Therefore, our goal is to investigate developer commenting practices and compare them to the comment guidelines.
            
            
              Method
              
                This paper reports the first empirical study investigating commenting practices in Pharo Smalltalk. First, we analyze class comment evolution over seven Pharo versions. Then, we quantitatively and qualitatively investigate the information types embedded in class comments. Finally, we study the adherence of developer commenting practices to the official
                class comment template
                over Pharo versions.
              
            
            
              Results
              Our results show that there is a rapid increase in class comments in the initial three Pharo versions, while in subsequent versions developers added comments to both new and old classes, thus maintaining a similar code to comment ratio. We furthermore found three times as many information types in class comments as those suggested by the template. However, the information types suggested by the template tend to be present more often than other types of information. Additionally, we find that a substantial proportion of comments follow the writing style of the template in writing these information types, but they are written and formatted in a non-uniform way.
            
            
              Conclusion
              The results suggest the need to standardize the commenting guidelines for formatting the text, and to provide headers for the different information types to ensure a consistent style and to identify the information easily. Given the importance of high-quality code comments, we draw numerous implications for developers and researchers to improve the support for comment quality assessment tools.},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Rani, Pooja and Panichella, Sebastiano and Leuenberger, Manuel and Ghafari, Mohammad and Nierstrasz, Oscar},
	month = nov,
	year = {2021},
	pages = {112},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\Y7KNK4MC\\Rani et al. - 2021 - What do class comments tell us An investigation o.pdf:application/pdf},
}

@article{sangeeta_new_2021,
	title = {New failure rate model for iterative software development life cycle process},
	volume = {28},
	issn = {0928-8910, 1573-7535},
	url = {https://link.springer.com/10.1007/s10515-021-00288-9},
	doi = {10.1007/s10515-021-00288-9},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Automated Software Engineering},
	author = {{Sangeeta} and {Sitender} and Sharma, Kapil and Bala, Manju},
	month = nov,
	year = {2021},
	pages = {9},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\XZS56NFY\\Sangeeta et al. - 2021 - New failure rate model for iterative software deve.pdf:application/pdf},
}

@article{hammoudehgarcia_bootstrapping_2021,
	title = {Bootstrapping {MDE} development from {ROS} manual code: {Part} 2—{Model} generation and leveraging models at runtime},
	issn = {1619-1366, 1619-1374},
	shorttitle = {Bootstrapping {MDE} development from {ROS} manual code},
	url = {https://link.springer.com/10.1007/s10270-021-00873-2},
	doi = {10.1007/s10270-021-00873-2},
	abstract = {Abstract
            Model-driven engineering (MDE) addresses central aspects of robotics software development. MDE could enable domain experts to leverage the expressiveness of models, while implementation details on different hardware platforms would be handled by automatic code generation. Today, despite strong MDE efforts in the robotics research community, most evidence points to manual code development being the norm. A possible reason for MDE not being accepted by robot software developers could be the wide range of applications and target platforms, which make all-encompassing MDE IDEs hard to develop and maintain. Therefore, we chose to leverage a large corpus of open-source software widely adopted by the robotics community to extract common structures and gain insight on how and where MDE can support the developers to work more efficiently. We pursue modeling as a complement, rather than imposing MDE as separate solution. Our previous work introduced metamodels to describe components, their interactions, and their resulting composition. In this paper, we present two methods based on metamodels for automated generation of models from manually written artifacts: (1) through static code analysis and (2) by monitoring the execution of a running system. For both methods, we present tools that leverage the potentials of our contributions, with a special focus on their application at runtime to observe and diagnose a real system during its execution. A comprehensive example is provided as a walk-through for robotics software practitioners.},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Hammoudeh García, Nadia and Deshpande, Harshavardhan and Santos, André and Kahl, Björn and Bordignon, Mirko},
	month = apr,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\GS2A7L3Z\\Hammoudeh García et al. - 2021 - Bootstrapping MDE development from ROS manual code.pdf:application/pdf},
}

@article{luna_security_2021,
	title = {Security and {Reliability} of {Safety}-{Critical} {RTOS}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00753-y},
	doi = {10.1007/s42979-021-00753-y},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Luna, Ryan and Islam, Sheikh Ariful},
	month = sep,
	year = {2021},
	pages = {356},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\QA4QQZD2\\Luna and Islam - 2021 - Security and Reliability of Safety-Critical RTOS.pdf:application/pdf},
}

@article{granada_cevinedit_2021,
	title = {{CEViNEdit}: improving the process of creating cognitively effective graphical editors with {GMF}},
	volume = {20},
	issn = {1619-1366, 1619-1374},
	shorttitle = {{CEViNEdit}},
	url = {https://link.springer.com/10.1007/s10270-020-00833-2},
	doi = {10.1007/s10270-020-00833-2},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Granada, David and Vara, Juan M. and Merayo, Mercedes and Marcos, Esperanza},
	month = jun,
	year = {2021},
	pages = {867--895},
}

@article{adamo_what_2021,
	title = {What is a process model composed of?: {A} systematic literature review of meta-models in {BPM}},
	volume = {20},
	issn = {1619-1366, 1619-1374},
	shorttitle = {What is a process model composed of?},
	url = {https://link.springer.com/10.1007/s10270-020-00847-w},
	doi = {10.1007/s10270-020-00847-w},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Adamo, Greta and Ghidini, Chiara and Di Francescomarino, Chiara},
	month = aug,
	year = {2021},
	pages = {1215--1243},
}

@article{fan_what_2021,
	title = {What makes a popular academic {AI} repository?},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09916-6},
	doi = {10.1007/s10664-020-09916-6},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Fan, Yuanrui and Xia, Xin and Lo, David and Hassan, Ahmed E. and Li, Shanping},
	month = jan,
	year = {2021},
	pages = {2},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\2QB93LZH\\Fan et al. - 2021 - What makes a popular academic AI repository.pdf:application/pdf},
}

@article{zhou_container_2021,
	title = {Container orchestration on {HPC} systems through {Kubernetes}},
	volume = {10},
	issn = {2192-113X},
	url = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-021-00231-z},
	doi = {10.1186/s13677-021-00231-z},
	abstract = {Abstract
            
              Containerisation demonstrates its efficiency in application deployment in Cloud Computing. Containers can encapsulate complex programs with their dependencies in isolated environments making applications more portable, hence are being adopted in High Performance Computing (HPC) clusters.
              Singularity
              , initially designed for HPC systems, has become their
              de facto
              standard container runtime. Nevertheless, conventional HPC workload managers lack micro-service support and deeply-integrated container management, as opposed to container orchestrators. We introduce a Torque-Operator which serves as a bridge between HPC workload manager (TORQUE) and container orchestrator (Kubernetes). We propose a hybrid architecture that integrates HPC and Cloud clusters seamlessly with little interference to HPC systems where container orchestration is performed on two levels.},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Journal of Cloud Computing},
	author = {Zhou, Naweiluo and Georgiou, Yiannis and Pospieszny, Marcin and Zhong, Li and Zhou, Huan and Niethammer, Christoph and Pejak, Branislav and Marko, Oskar and Hoppe, Dennis},
	month = dec,
	year = {2021},
	pages = {16},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\WGEA2MH3\\Zhou et al. - 2021 - Container orchestration on HPC systems through Kub.pdf:application/pdf},
}

@article{cabrera_lozoya_commit2vec_2021,
	title = {{Commit2Vec}: {Learning} {Distributed} {Representations} of {Code} {Changes}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {{Commit2Vec}},
	url = {https://link.springer.com/10.1007/s42979-021-00566-z},
	doi = {10.1007/s42979-021-00566-z},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Cabrera Lozoya, Rocío and Baumann, Arnaud and Sabetta, Antonino and Bezzi, Michele},
	month = may,
	year = {2021},
	pages = {150},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\DBLZZQRF\\Cabrera Lozoya et al. - 2021 - Commit2Vec Learning Distributed Representations o.pdf:application/pdf},
}

@article{ngonga_ngomo_limes_2021,
	title = {{LIMES}: {A} {Framework} for {Link} {Discovery} on the {Semantic} {Web}},
	issn = {0933-1875, 1610-1987},
	shorttitle = {{LIMES}},
	url = {http://link.springer.com/10.1007/s13218-021-00713-x},
	doi = {10.1007/s13218-021-00713-x},
	abstract = {Abstract
            
              The Linked Data paradigm builds upon the backbone of distributed knowledge bases connected by typed links. The mere volume of current knowledge bases as well as their sheer number pose two major challenges when aiming to support the computation of links across and within them. The first is that tools for link discovery have to be time-efficient when they compute links. Secondly, these tools have to produce links of high quality to serve the applications built upon Linked Data well. Solutions to the second problem build upon efficient computational approaches developed to solve the first and combine these with dedicated machine learning techniques. The current version of the
              Limes
              framework is the product of seven years of research on these two challenges. A series of machine learning techniques and efficient computation approaches were developed and integrated into this framework to address the link discovery problem. The framework combines these diverse algorithms within a generic and extensible architecture. In this article, we give an overview of version 1.7.4 of the open-source release of the framework. In particular, we focus on an overview of the architecture of the framework, an intuition of its inner workings and a brief overview of the approaches it contains. Some descriptions of the applications within which the framework was used complete the paper. Our framework is open-source and available under a GNU license at
              https://github.com/dice-group/LIMES
              together with a user manual and a developer manual.},
	language = {en},
	urldate = {2021-10-24},
	journal = {KI - Künstliche Intelligenz},
	author = {Ngonga Ngomo, Axel-Cyrille and Sherif, Mohamed Ahmed and Georgala, Kleanthi and Hassan, Mofeed Mohamed and Dreßler, Kevin and Lyko, Klaus and Obraczka, Daniel and Soru, Tommaso},
	month = mar,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\QR49JH69\\Ngonga Ngomo et al. - 2021 - LIMES A Framework for Link Discovery on the Seman.pdf:application/pdf},
}

@article{priyadarshini_new_2021,
	title = {A new enhanced cyber security framework for medical cyber physical systems},
	issn = {2524-8510, 2524-8529},
	url = {http://link.springer.com/10.1007/s00450-021-00427-3},
	doi = {10.1007/s00450-021-00427-3},
	language = {en},
	urldate = {2021-10-24},
	journal = {SICS Software-Intensive Cyber-Physical Systems},
	author = {Priyadarshini, Ishaani and Kumar, Raghvendra and Tuan, Le Minh and Son, Le Hoang and Long, Hoang Viet and Sharma, Rohit and Rai, Sakshi},
	month = mar,
	year = {2021},
}

@article{faieq_building_2021,
	title = {Building adaptive context-aware service-based smart systems},
	volume = {15},
	issn = {1863-2386, 1863-2394},
	url = {http://link.springer.com/10.1007/s11761-020-00310-0},
	doi = {10.1007/s11761-020-00310-0},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Service Oriented Computing and Applications},
	author = {Faieq, Soufiane and Saidi, Rajaa and El Ghazi, Hamid and Front, Agnès and Rahmani, Moulay Driss},
	month = mar,
	year = {2021},
	pages = {21--42},
}

@article{rocha_model-based_2021,
	title = {Model-based test case generation from {UML} sequence diagrams using extended finite state machines},
	volume = {29},
	issn = {0963-9314, 1573-1367},
	url = {https://link.springer.com/10.1007/s11219-020-09531-0},
	doi = {10.1007/s11219-020-09531-0},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {Software Quality Journal},
	author = {Rocha, Mauricio and Simão, Adenilso and Sousa, Thiago},
	month = sep,
	year = {2021},
	pages = {597--627},
}

@article{bartocci_cpsdebug_2021,
	title = {{CPSDebug}: {Automatic} failure explanation in {CPS} models},
	issn = {1433-2779, 1433-2787},
	shorttitle = {{CPSDebug}},
	url = {http://link.springer.com/10.1007/s10009-020-00599-4},
	doi = {10.1007/s10009-020-00599-4},
	abstract = {Abstract
            Debugging cyber-physical system (CPS) models is a cumbersome and costly activity. CPS models combine continuous and discrete dynamics—a fault in a physical component manifests itself in a very different way than a fault in a state machine. Furthermore, faults can propagate both in time and space before they can be detected at the observable interface of the model. As a consequence, explaining the reason of an observed failure is challenging and often requires domain-specific knowledge. In this paper, we propose approach, a novel CPSDebug that combines testing, specification mining, and failure analysis, to automatically explain failures in Simulink/Stateflow models. In particular, we address the hybrid nature of CPS models by using different methods to infer properties from continuous and discrete state variables of the model. We evaluate CPSDebug on two case studies, involving two main scenarios and several classes of faults, demonstrating the potential value of our approach.},
	language = {en},
	urldate = {2021-10-24},
	journal = {International Journal on Software Tools for Technology Transfer},
	author = {Bartocci, Ezio and Manjunath, Niveditha and Mariani, Leonardo and Mateis, Cristinel and Ničković, Dejan},
	month = jan,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\RUPEBWU3\\Bartocci et al. - 2021 - CPSDebug Automatic failure explanation in CPS mod.pdf:application/pdf},
}

@article{nicolau_choosing_2021,
	title = {Choosing function sets with better generalisation performance for symbolic regression models},
	volume = {22},
	issn = {1389-2576, 1573-7632},
	url = {https://link.springer.com/10.1007/s10710-020-09391-4},
	doi = {10.1007/s10710-020-09391-4},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Genetic Programming and Evolvable Machines},
	author = {Nicolau, Miguel and Agapitos, Alexandros},
	month = mar,
	year = {2021},
	pages = {73--100},
}

@article{alhawi_verification_2021,
	title = {Verification and refutation of {C} programs based on k-induction and invariant inference},
	volume = {23},
	issn = {1433-2779, 1433-2787},
	url = {https://link.springer.com/10.1007/s10009-020-00564-1},
	doi = {10.1007/s10009-020-00564-1},
	abstract = {Abstract
            
              DepthK is a source-to-source transformation tool that employs bounded model checking (BMC) to verify and falsify safety properties in single- and multi-threaded C programs, without manual annotation of loop invariants. Here, we describe and evaluate a proof-by-induction algorithm that combines
              k
              -induction with invariant inference to prove and refute safety properties. We apply two invariant generators to produce program invariants and feed these into a
              k
              -induction-based verification algorithm implemented in DepthK, which uses the efficient SMT-based context-bounded model checker (ESBMC) as sequential verification back-end. A set of C benchmarks from the International Competition on Software Verification (SV-COMP) and embedded-system applications extracted from the available literature are used to evaluate the effectiveness of the proposed approach. Experimental results show that
              k
              -induction with invariants can handle a wide variety of safety properties, in typical programs with loops and embedded software applications from the telecommunications, control systems, and medical domains. The results of our comparative evaluation extend the knowledge about approaches that rely on both BMC and
              k
              -induction for software verification, in the following ways. (1) The proposed method outperforms the existing implementations that use
              k
              -induction with an interval-invariant generator (
              e.g.
              , 2LS and ESBMC), in the category ConcurrencySafety, and overcame, in others categories, such as SoftwareSystems, other software verifiers that use plain BMC (
              e.g.
              , CBMC). Also, (2) it is more precise than other verifiers based on the property-directed reachability (PDR) algorithm (
              i.e.
              , SeaHorn, Vvt and CPAchecker-CTIGAR). This way, our methodology demonstrated improvement over existing BMC and
              k
              -induction-based approaches.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {International Journal on Software Tools for Technology Transfer},
	author = {Alhawi, Omar M. and Rocha, Herbert and Gadelha, Mikhail R. and Cordeiro, Lucas C. and Batista, Eddie},
	month = apr,
	year = {2021},
	pages = {115--135},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\D5F8T5NN\\Alhawi et al. - 2021 - Verification and refutation of C programs based on.pdf:application/pdf},
}

@article{cruciani_phase_2021,
	title = {Phase transition of the 2-{Choices} dynamics on core–periphery networks},
	volume = {34},
	issn = {0178-2770, 1432-0452},
	url = {https://link.springer.com/10.1007/s00446-021-00396-5},
	doi = {10.1007/s00446-021-00396-5},
	abstract = {Abstract
            
              The
              2-Choices
              dynamics is a process that models voting behavior on networks and works as follows: Each agent initially holds either opinion
              blue
              or
              red
              ; then, in each round, each agent looks at two random neighbors and, if the two have the same opinion, the agent adopts it. We study its behavior on a class of networks with core–periphery structure. Assume that a densely-connected subset of agents, the
              core
              , holds a different opinion from the rest of the network, the
              periphery
              . We prove that, depending on the strength of the cut between core and periphery, a phase-transition phenomenon occurs: Either the core’s opinion rapidly spreads across the network, or a
              metastability
              phase takes place in which both opinions coexist for superpolynomial time. The interest of our result, which we also validate with extensive experiments on real networks, is twofold. First, it sheds light on the
              influence
              of the core on the rest of the network as a function of its connectivity toward the latter. Second, it is one of the first analytical results which shows a heterogeneous behavior of a simple dynamics as a function of structural parameters of the network.},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {Distributed Computing},
	author = {Cruciani, Emilio and Natale, Emanuele and Nusser, André and Scornavacca, Giacomo},
	month = jun,
	year = {2021},
	pages = {207--225},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\RHSBBCV8\\Cruciani et al. - 2021 - Phase transition of the 2-Choices dynamics on core.pdf:application/pdf},
}

@article{chen_demystifying_2021,
	title = {Demystifying the challenges and benefits of analyzing user-reported logs in bug reports},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09893-w},
	doi = {10.1007/s10664-020-09893-w},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Chen, An Ran and Chen, Tse-Hsun (Peter) and Wang, Shaowei},
	month = jan,
	year = {2021},
	pages = {8},
}

@article{naqash_statistical_2021,
	title = {Statistical {Analysis} {Based} {Intrusion} {Detection} {System} for {Ultra}-{High}-{Speed} {Software} {Defined} {Network}},
	issn = {0885-7458, 1573-7640},
	url = {https://link.springer.com/10.1007/s10766-021-00715-0},
	doi = {10.1007/s10766-021-00715-0},
	language = {en},
	urldate = {2021-10-24},
	journal = {International Journal of Parallel Programming},
	author = {Naqash, Talha and Shah, Sajjad Hussain and Islam, Muhammad Najam Ul},
	month = aug,
	year = {2021},
}

@article{bou_ghantous_evaluating_2021,
	title = {Evaluating the {DevOps} {Reference} {Architecture} for {Multi}-cloud {IoT}-{Applications}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-021-00519-6},
	doi = {10.1007/s42979-021-00519-6},
	abstract = {Abstract
            DevOps originated in the context of the agile development aims to enable the continuous deployment of software applications in small releases. Most recently, organizations are taking a significant interest in adopting DevOps for automatically deploying IoT applications to multi-cloud. The interest is there; however, the challenge is how to achieve this. A new DevOps reference architecture (DRA) framework has been iteratively developed to address this challenge. This paper presents the updated DRA framework and its empirical evaluation results. The empirical evaluation is composed of two phases: (1) industry case study evaluation conducted in an IT organization, and (2) industry field survey with a cohort of experts in software engineering. The evaluation aims to determine the applicability and novelty of the DRA framework. The evaluation results indicate that the DRA is fit for its intended purpose and is expected to help both researchers and practitioners. The DRA uses can architect complex design models for the purpose of supporting the automated development stage of software applications. Software engineers can implement the DRA models for deploying complex IoT application to the multi-cloud environment in the current organization development parameters.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Bou Ghantous, Georges and Gill, Asif Qumer},
	month = apr,
	year = {2021},
	pages = {123},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\M5NE6IZA\\Bou Ghantous and Gill - 2021 - Evaluating the DevOps Reference Architecture for M.pdf:application/pdf},
}

@article{vidgof_interactive_2021,
	title = {Interactive log-delta analysis using multi-range filtering},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-021-00902-0},
	doi = {10.1007/s10270-021-00902-0},
	abstract = {Abstract
            
              Process mining is a family of analytical techniques that extract insights from an event log and present them to an analyst. A key analysis task is to understand the distinctive features of different variants of the process and their impact on process performance. Techniques for log-delta analysis (or variant analysis) put a strong emphasis on automatically extracting explanations for differences between variants. A weakness of them is, however, their limited support for interactively exploring the dividing line between typical and atypical behavior. In this paper, we address this research gap by developing and evaluating an interactive technique for log-delta analysis, which we call
              InterLog
              . This technique is developed based on the idea that the analyst can interactively define filter ranges and that these filters are used to partition the log
              L
              into sub-logs
              
                
                  \$\$L\_1\$\$
                  
                    
                      L
                      1
                    
                  
                
              
              for the selected cases and
              
                
                  \$\$L\_2\$\$
                  
                    
                      L
                      2
                    
                  
                
              
              for the deselected cases. In this way, the analyst can step-by-step explore the log and manually separate the typical behavior from the atypical. We prototypically implement InterLog and demonstrate its application for a real-world event log. Furthermore, we evaluate it in a preliminary design study with process mining experts for usefulness and ease of use.},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Vidgof, Maxim and Djurica, Djordje and Bala, Saimir and Mendling, Jan},
	month = sep,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\74Y567DV\\Vidgof et al. - 2021 - Interactive log-delta analysis using multi-range f.pdf:application/pdf},
}

@article{r_fully_2021,
	title = {Fully {Responsive} {Image} and {Speech} {Detection} {Artificial} {Yankee} ({FRIDAY}): {Human} {Assistant}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Fully {Responsive} {Image} and {Speech} {Detection} {Artificial} {Yankee} ({FRIDAY})},
	url = {https://link.springer.com/10.1007/s42979-021-00630-8},
	doi = {10.1007/s42979-021-00630-8},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {R, Supreeth and Kamath, Ajay S and A N, Srinidhi and R, Kumaraswamy},
	month = jul,
	year = {2021},
	pages = {243},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\VISPSKJD\\R et al. - 2021 - Fully Responsive Image and Speech Detection Artifi.pdf:application/pdf},
}

@article{parthasarathy_development_2021,
	title = {Development of educational model of power compensated differential scanning calorimeter ({PC}-{DSC})},
	volume = {9},
	issn = {2277-9078, 2277-9086},
	url = {http://link.springer.com/10.1007/s40012-020-00320-5},
	doi = {10.1007/s40012-020-00320-5},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {CSI Transactions on ICT},
	author = {Parthasarathy, R. and Prabhu, E. and Venkatramanan, K. and Gnanasekaran, T.},
	month = mar,
	year = {2021},
	pages = {59--70},
}

@article{ye_probabilistic_2021,
	title = {Probabilistic modelling and verification using {RoboChart} and {PRISM}},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-021-00916-8},
	doi = {10.1007/s10270-021-00916-8},
	abstract = {Abstract
            RoboChart is a timed domain-specific language for robotics, distinctive in its support for automated verification by model checking and theorem proving. Since uncertainty is an essential part of robotic systems, we present here an extension to RoboChart to model uncertainty using probabilism. The extension enriches RoboChart state machines with probability through a new construct: probabilistic junctions as the source of transitions with a probability value. RoboChart has an accompanying tool, called RoboTool, for modelling and verification of functional and real-time behaviour. We present here also an automatic technique, implemented in RoboTool, to transform a RoboChart model into a PRISM model for verification. We have extended the property language of RoboTool so that probabilistic properties expressed in temporal logic can be written using controlled natural language.},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Ye, Kangfeng and Cavalcanti, Ana and Foster, Simon and Miyazawa, Alvaro and Woodcock, Jim},
	month = oct,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\WVFXPJWW\\Ye et al. - 2021 - Probabilistic modelling and verification using Rob.pdf:application/pdf},
}

@article{vangipuram_covichain_2021,
	title = {{CoviChain}: {A} {Blockchain} {Based} {Framework} for {Nonrepudiable} {Contact} {Tracing} in {Healthcare} {Cyber}-{Physical} {Systems} {During} {Pandemic} {Outbreaks}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {{CoviChain}},
	url = {https://link.springer.com/10.1007/s42979-021-00746-x},
	doi = {10.1007/s42979-021-00746-x},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Vangipuram, Sukrutha L. T. and Mohanty, Saraju P. and Kougianos, Elias},
	month = sep,
	year = {2021},
	pages = {346},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\TPE672VU\\Vangipuram et al. - 2021 - CoviChain A Blockchain Based Framework for Nonrep.pdf:application/pdf},
}

@article{dai_studies_2021,
	title = {Studies of {Norm}-{Based} {Locality} {Measures} of {Two}-{Dimensional} {Hilbert} {Curves}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00711-8},
	doi = {10.1007/s42979-021-00711-8},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Dai, H. K. and Su, H. C.},
	month = sep,
	year = {2021},
	pages = {403},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\G49FT8MM\\Dai and Su - 2021 - Studies of Norm-Based Locality Measures of Two-Dim.pdf:application/pdf},
}

@article{singh_codes_2021,
	title = {Codes of conduct in {Open} {Source} {Software}—for warm and fuzzy feelings or equality in community?},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-020-09543-w},
	doi = {10.1007/s11219-020-09543-w},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software Quality Journal},
	author = {Singh, Vandana and Bongiovanni, Brice and Brandon, William},
	month = feb,
	year = {2021},
}

@article{revoredo_study_2021,
	title = {A study into the practice of reporting software engineering experiments},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-10007-3},
	doi = {10.1007/s10664-021-10007-3},
	abstract = {Abstract
            It has been argued that reporting software engineering experiments in a standardized way helps researchers find relevant information, understand how experiments were conducted and assess the validity of their results. Various guidelines have been proposed specifically for software engineering experiments. The benefits of such guidelines have often been emphasized, but the actual uptake and practice of reporting have not yet been investigated since the introduction of many of the more recent guidelines. In this research, we utilize a mixed-method study design including sequence analysis techniques for evaluating to which extent papers follow such guidelines. Our study focuses on the four most prominent software engineering journals and the time period from 2000 to 2020. Our results show that many experimental papers miss information suggested by guidelines, that no de facto standard sequence for reporting exists, and that many papers do not cite any guidelines. We discuss these findings and implications for the discipline of experimental software engineering focusing on the review process and the potential to refine and extend guidelines, among others, to account for theory explicitly.},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Revoredo, Kate and Djurica, Djordje and Mendling, Jan},
	month = nov,
	year = {2021},
	pages = {113},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\QA89PM6K\\Revoredo et al. - 2021 - A study into the practice of reporting software en.pdf:application/pdf},
}

@article{gote_analysing_2021,
	title = {Analysing {Time}-{Stamped} {Co}-{Editing} {Networks} in {Software} {Development} {Teams} using git2net},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-020-09928-2},
	doi = {10.1007/s10664-020-09928-2},
	abstract = {Abstract
            
              Data from software repositories have become an important foundation for the empirical study of software engineering processes. A recurring theme in the repository mining literature is the inference of developer networks capturing e.g. collaboration, coordination, or communication from the commit history of projects. Many works in this area studied networks of
              co-authorship
              of software artefacts, neglecting detailed information on code changes and code ownership available in software repositories. To address this issue, we introduce , a scalable  software that facilitates the extraction of fine-grained
              co-editing networks
              in large  repositories. It uses text mining techniques to analyse the detailed history of textual modifications
              within
              files. We apply our tool in two case studies using  repositories of multiple Open Source as well as a proprietary software project. Specifically, we use data on more than 1.2 million commits and more than 25,000 developers to test a hypothesis on the relation between developer productivity and co-editing patterns in software teams. We argue that  opens up an important new source of high-resolution data on human collaboration patterns that can be used to advance theory in empirical software engineering, computational social science, and organisational studies.},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Gote, Christoph and Scholtes, Ingo and Schweitzer, Frank},
	month = jul,
	year = {2021},
	pages = {75},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\4GQKWX5T\\Gote et al. - 2021 - Analysing Time-Stamped Co-Editing Networks in Soft.pdf:application/pdf},
}

@article{giallorenzo_virtualization_2021,
	title = {Virtualization {Costs}: {Benchmarking} {Containers} and {Virtual} {Machines} {Against} {Bare}-{Metal}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Virtualization {Costs}},
	url = {https://link.springer.com/10.1007/s42979-021-00781-8},
	doi = {10.1007/s42979-021-00781-8},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Giallorenzo, Saverio and Mauro, Jacopo and Poulsen, Martin Gyde and Siroky, Filip},
	month = sep,
	year = {2021},
	pages = {404},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\WCLCU2LG\\Giallorenzo et al. - 2021 - Virtualization Costs Benchmarking Containers and .pdf:application/pdf},
}

@article{hoyos_removal_2021,
	title = {On the {Removal} of {Feature} {Toggles}: {A} {Study} of {Python} {Projects} and {Practitioners} {Motivations}},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {On the {Removal} of {Feature} {Toggles}},
	url = {http://link.springer.com/10.1007/s10664-020-09902-y},
	doi = {10.1007/s10664-020-09902-y},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Hoyos, Juan and Abdalkareem, Rabe and Mujahid, Suhaib and Shihab, Emad and Bedoya, Albeiro Espinosa},
	month = mar,
	year = {2021},
	pages = {15},
}

@article{yang_single-state_2021,
	title = {Single-state state machines in model-driven software engineering: an exploratory study},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {Single-state state machines in model-driven software engineering},
	url = {https://link.springer.com/10.1007/s10664-021-10015-3},
	doi = {10.1007/s10664-021-10015-3},
	abstract = {Abstract
            
              Context
              Models, as the main artifact in model-driven engineering, have been extensively used in the area of embedded systems for code generation and verification. One of the most popular behavioral modeling techniques is the state machine. Many state machine modeling guidelines recommend that a state machine should have more than one state in order to be meaningful. However, single-state state machines (SSSMs) violating this recommendation have been used in modeling cases reported in the literature.
            
            
              Objective
              We aim for understanding the phenomenon of using SSSMs in practice as understanding why developers violate the modeling guidelines is the first step towards improvement of modeling tools and practice.
            
            
              Method
              To study the phenomenon, we conducted an exploratory study which consists of two complementary studies. The first study investigated the prevalence and role of SSSMs in the domain of embedded systems, as well as the reasons why developers use them and their perceived advantages and disadvantages. We employed the sequential explanatory strategy, including repository mining and interview, to study 1500 state machines from 26 components at ASML, a leading company in manufacturing lithography machines from the semiconductor industry. In the second study, we investigated the evolutionary aspects of SSSMs, exploring when SSSMs are introduced to the systems and how developers modify them by mining the largest state-machine-based component from the company.
            
            
              Results
              We observe that 25 out of 26 components contain SSSMs. Our interviews suggest that SSSMs are used to interface with the existing code, to deal with tool limitations, to facilitate maintenance and to ease verification. Our study on the evolutionary aspects of SSSMs reveals that the need for SSSMs to deal with tool limitations grew continuously over the years. Moreover, only a minority of SSSMs have been changed between SSSM and multiple-state state machine (MSSM) during their evolution. The most frequent modifications developers made to SSSMs is inserting events with constraints on the execution of the events.
            
            
              Conclusions
              Based on our results, we provide implications for developers and tool builders. Furthermore, we formulate hypotheses about the effectiveness of SSSMs, the impacts of SSSMs on development, maintenance and verification as well as the evolution of SSSMs.},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Yang, Nan and Cuijpers, Pieter and Schiffelers, Ramon and Lukkien, Johan and Serebrenik, Alexander},
	month = nov,
	year = {2021},
	pages = {124},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\5TZBYHYF\\Yang et al. - 2021 - Single-state state machines in model-driven softwa.pdf:application/pdf},
}

@article{pimentel_understanding_2021,
	title = {Understanding and improving the quality and reproducibility of {Jupyter} notebooks},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-09961-9},
	doi = {10.1007/s10664-021-09961-9},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Pimentel, João Felipe and Murta, Leonardo and Braganholo, Vanessa and Freire, Juliana},
	month = jul,
	year = {2021},
	pages = {65},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\I6S235WS\\Pimentel et al. - 2021 - Understanding and improving the quality and reprod.pdf:application/pdf},
}

@article{geng_profile-based_2021,
	title = {A {Profile}-{Based} {AI}-{Assisted} {Dynamic} {Scheduling} {Approach} for {Heterogeneous} {Architectures}},
	issn = {0885-7458, 1573-7640},
	url = {https://link.springer.com/10.1007/s10766-021-00721-2},
	doi = {10.1007/s10766-021-00721-2},
	language = {en},
	urldate = {2021-10-24},
	journal = {International Journal of Parallel Programming},
	author = {Geng, Tongsheng and Amaris, Marcos and Zuckerman, Stéphane and Goldman, Alfredo and Gao, Guang R. and Gaudiot, Jean-Luc},
	month = aug,
	year = {2021},
}

@article{ben-basat_optimal_2021,
	title = {Optimal distributed covering algorithms},
	issn = {0178-2770, 1432-0452},
	url = {https://link.springer.com/10.1007/s00446-021-00391-w},
	doi = {10.1007/s00446-021-00391-w},
	abstract = {Abstract
            
              We present a time-optimal deterministic distributed algorithm for approximating a minimum weight vertex cover in hypergraphs of rank
              f
              . This problem is equivalent to the Minimum Weight Set Cover problem in which the frequency of every element is bounded by
              f
              . The approximation factor of our algorithm is
              
                
                  \$\$(f+{\textbackslash}varepsilon )\$\$
                  
                    
                      (
                      f
                      +
                      ε
                      )
                    
                  
                
              
              . Let
              
                
                  \$\${\textbackslash}varDelta \$\$
                  
                    Δ
                  
                
              
              denote the maximum degree in the hypergraph. Our algorithm runs in the
              congest
              model and requires
              
                
                  \$\$O({\textbackslash}log \{{\textbackslash}varDelta \} / {\textbackslash}log {\textbackslash}log {\textbackslash}varDelta )\$\$
                  
                    
                      O
                      (
                      log
                      Δ
                      /
                      log
                      log
                      Δ
                      )
                    
                  
                
              
              rounds, for constants
              
                
                  \$\${\textbackslash}varepsilon {\textbackslash}in (0,1]\$\$
                  
                    
                      ε
                      ∈
                      (
                      0
                      ,
                      1
                      ]
                    
                  
                
              
              and
              
                
                  \$\$f{\textbackslash}in \{{\textbackslash}mathbb \{N\}\}{\textasciicircum}+\$\$
                  
                    
                      f
                      ∈
                      
                        
                          N
                        
                        +
                      
                    
                  
                
              
              . This is the first distributed algorithm for this problem whose running time does not depend on the vertex weights nor the number of vertices. Thus adding another member to the exclusive family of
              provably optimal
              distributed algorithms. For constant values of
              f
              and
              
                
                  \$\${\textbackslash}varepsilon \$\$
                  
                    ε
                  
                
              
              , our algorithm improves over the
              
                
                  \$\$(f+{\textbackslash}varepsilon )\$\$
                  
                    
                      (
                      f
                      +
                      ε
                      )
                    
                  
                
              
              -approximation algorithm of Kuhn et al. (SODA, 2006)whose running time is
              
                
                  \$\$O({\textbackslash}log {\textbackslash}varDelta + {\textbackslash}log W)\$\$
                  
                    
                      O
                      (
                      log
                      Δ
                      +
                      log
                      W
                      )
                    
                  
                
              
              , where
              W
              is the ratio between the largest and smallest vertex weights in the graph. Our algorithm also achieves an
              f
              -approximation for the problem in
              
                
                  \$\$O(f{\textbackslash}log n)\$\$
                  
                    
                      O
                      (
                      f
                      log
                      n
                      )
                    
                  
                
              
              rounds, improving over the classical result of Khuller et al. (J Algorithms, 1994) that achieves a running time of
              
                
                  \$\$O(f{\textbackslash}log {\textasciicircum}2 n)\$\$
                  
                    
                      O
                      (
                      f
                      
                        log
                        2
                      
                      n
                      )
                    
                  
                
              
              . Finally, for weighted vertex cover (
              
                
                  \$\$f=2\$\$
                  
                    
                      f
                      =
                      2
                    
                  
                
              
              ) our algorithm achieves a
              deterministic
              running time of
              
                
                  \$\$O({\textbackslash}log n)\$\$
                  
                    
                      O
                      (
                      log
                      n
                      )
                    
                  
                
              
              , matching the
              randomized
              previously best result of Koufogiannakis and Young (Distrib Comput, 2011). We also show that integer covering-programs can be reduced to the Minimum Weight Set Cover problem in the distributed setting. This allows us to achieve an
              
                
                  \$\$(f{\textbackslash}lceil {\textbackslash}log \_2(M)+1 {\textbackslash}rceil +{\textbackslash}varepsilon )\$\$
                  
                    
                      (
                      f
                      
                        ⌈
                        
                          log
                          2
                        
                        
                          (
                          M
                          )
                        
                        +
                        1
                        ⌉
                      
                      +
                      ε
                      )
                    
                  
                
              
              -approximate integral solution in
              
                
                  \$\${\textbackslash}begin\{aligned\} O{\textbackslash}left( (1+f/{\textbackslash}log n){\textbackslash}cdot {\textbackslash}left( \{{\textbackslash}frac\{{\textbackslash}log {\textbackslash}varDelta \}\{ {\textbackslash}log {\textbackslash}log {\textbackslash}varDelta \} + (\{f{\textbackslash}cdot {\textbackslash}log M\}){\textasciicircum}\{1.01\}{\textbackslash}cdot {\textbackslash}log {\textbackslash}varepsilon {\textasciicircum}\{-1\}{\textbackslash}cdot ({\textbackslash}log {\textbackslash}varDelta ){\textasciicircum}\{0.01\}\}{\textbackslash}right) {\textbackslash}right) {\textbackslash}end\{aligned\}\$\$
                  
                    
                      
                        
                          
                            
                              O
                              
                                
                                  (
                                  1
                                  +
                                  f
                                  /
                                  log
                                  n
                                  )
                                
                                ·
                                
                                  
                                    
                                      
                                        log
                                        Δ
                                      
                                      
                                        log
                                        log
                                        Δ
                                      
                                    
                                    +
                                    
                                      
                                        (
                                        
                                          f
                                          ·
                                          log
                                          M
                                        
                                        )
                                      
                                      
                                        1.01
                                      
                                    
                                    ·
                                    log
                                    
                                      ε
                                      
                                        -
                                        1
                                      
                                    
                                    ·
                                    
                                      
                                        (
                                        log
                                        Δ
                                        )
                                      
                                      
                                        0.01
                                      
                                    
                                  
                                
                              
                            
                          
                        
                      
                    
                  
                
              
              rounds, where
              f
              bounds the number of variables in a constraint,
              
                
                  \$\${\textbackslash}varDelta \$\$
                  
                    Δ
                  
                
              
              bounds the number of constraints a variable appears in, and
              
                
                  \$\$M={\textbackslash}max {\textbackslash}left{\textbackslash}\{ 1, {\textbackslash}lceil 1/a\_\{{\textbackslash}min \} {\textbackslash}rceil {\textbackslash}right{\textbackslash}\} \$\$
                  
                    
                      M
                      =
                      max
                      
                        1
                        ,
                        ⌈
                        1
                        /
                        
                          a
                          min
                        
                        ⌉
                      
                    
                  
                
              
              , where
              
                
                  \$\$a\_\{{\textbackslash}min \}\$\$
                  
                    
                      a
                      min
                    
                  
                
              
              is the smallest normalized constraint coefficient.},
	language = {en},
	urldate = {2021-10-24},
	journal = {Distributed Computing},
	author = {Ben-Basat, Ran and Even, Guy and Kawarabayashi, Ken-ichi and Schwartzman, Gregory},
	month = apr,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\PZC9Q9Y7\\Ben-Basat et al. - 2021 - Optimal distributed covering algorithms.pdf:application/pdf},
}

@article{sleimi_automated_2021,
	title = {An automated framework for the extraction of semantic legal metadata from legal texts},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-020-09933-5},
	doi = {10.1007/s10664-020-09933-5},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Sleimi, Amin and Sannier, Nicolas and Sabetzadeh, Mehrdad and Briand, Lionel and Ceci, Marcello and Dann, John},
	month = may,
	year = {2021},
	pages = {43},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\GDLKFV7T\\Sleimi et al. - 2021 - An automated framework for the extraction of seman.pdf:application/pdf},
}

@article{praitheeshan_private_2021,
	title = {Private and {Trustworthy} {Distributed} {Lending} {Model} {Using} {Hyperledger} {Besu}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-021-00500-3},
	doi = {10.1007/s42979-021-00500-3},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Praitheeshan, Purathani and Pan, Lei and Doss, Robin},
	month = apr,
	year = {2021},
	pages = {115},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\63DS4KVG\\Praitheeshan et al. - 2021 - Private and Trustworthy Distributed Lending Model .pdf:application/pdf},
}

@article{ye_automated_2021,
	title = {Automated patch assessment for program repair at scale},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09920-w},
	doi = {10.1007/s10664-020-09920-w},
	abstract = {Abstract
            In this paper, we do automatic correctness assessment for patches generated by program repair systems. We consider the human-written patch as ground truth oracle and randomly generate tests based on it, a technique proposed by Shamshiri et al., called Random testing with Ground Truth (RGT) in this paper. We build a curated dataset of 638 patches for Defects4J generated by 14 state-of-the-art repair systems, we evaluate automated patch assessment on this dataset. The results of this study are novel and significant: First, we improve the state of the art performance of automatic patch assessment with RGT by 190\% by improving the oracle; Second, we show that RGT is reliable enough to help scientists to do overfitting analysis when they evaluate program repair systems; Third, we improve the external validity of the program repair knowledge with the largest study ever.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Ye, He and Martinez, Matias and Monperrus, Martin},
	month = mar,
	year = {2021},
	pages = {20},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\5QBQSID4\\Ye et al. - 2021 - Automated patch assessment for program repair at s.pdf:application/pdf},
}

@article{vitui_mlasp_2021,
	title = {{MLASP}: {Machine} learning assisted capacity planning: {An} industrial experience report},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {{MLASP}},
	url = {https://link.springer.com/10.1007/s10664-021-09994-0},
	doi = {10.1007/s10664-021-09994-0},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Vitui, Arthur and Chen, Tse-Hsun},
	month = sep,
	year = {2021},
	pages = {87},
}

@article{gilsing_defining_2021,
	title = {Defining business model key performance indicators using intentional linguistic summaries},
	volume = {20},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-021-00894-x},
	doi = {10.1007/s10270-021-00894-x},
	abstract = {Abstract
            To sustain competitiveness in contemporary, fast-paced markets, organizations increasingly focus on innovating their business models to enhance current value propositions or to explore novel sources of value creation. However, business model innovation is a complex task, characterized by shifting characteristics in terms of uncertainty, data availability and its impact on decision making. To cope with such challenges, business model evaluation is advocated to make sense of novel business models and to support decision making. Key performance indicators (KPIs) are frequently used in business model evaluation to structure the performance assessment of these models and to evaluate their strategic implications, in turn aiding business model decision making. However, given the shifting characteristics of the innovation process, the application and effectiveness of KPIs depend significantly on how such KPIs are defined. The techniques proposed in the existing literature typically generate or use quantitatively oriented KPIs, which are not well-suited for the early phases of the business model innovation process. Therefore, following a design science research methodology, we have developed a novel method for defining business model KPIs, taking into account the characteristics of the innovation process, offering holistic support toward decision making. Building on theory on linguistic summarization, we use a set of structured templates to define qualitative KPIs that are suitable to support early-phase decision making. In addition, we show how these KPIs can be gradually quantified to support later phases of the innovation process. We have evaluated our method by applying it in two real-life business cases, interviewing 13 industry experts to assess its utility.},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Gilsing, Rick and Wilbik, Anna and Grefen, Paul and Turetken, Oktay and Ozkan, Baris and Adali, Onat Ege and Berkers, Frank},
	month = aug,
	year = {2021},
	pages = {965--996},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\NUEUIUGE\\Gilsing et al. - 2021 - Defining business model key performance indicators.pdf:application/pdf},
}

@article{uddin_empirical_2021,
	title = {An empirical study of {IoT} topics in {IoT} developer discussions on {Stack} {Overflow}},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-10021-5},
	doi = {10.1007/s10664-021-10021-5},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Uddin, Gias and Sabir, Fatima and Guéhéneuc, Yann-Gaël and Alam, Omar and Khomh, Foutse},
	month = nov,
	year = {2021},
	pages = {121},
}

@article{xing_accelerating_2021,
	title = {Accelerating {DES} and {AES} {Algorithms} for a {Heterogeneous} {Many}-core {Processor}},
	volume = {49},
	issn = {0885-7458, 1573-7640},
	url = {https://link.springer.com/10.1007/s10766-021-00692-4},
	doi = {10.1007/s10766-021-00692-4},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {International Journal of Parallel Programming},
	author = {Xing, Biao and Wang, DanDan and Yang, Yongquan and Wei, Zhiqiang and Wu, Jiajing and He, Cuihua},
	month = jun,
	year = {2021},
	pages = {463--486},
}

@article{ernst_understanding_2021,
	title = {Understanding peer review of software engineering papers},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-10005-5},
	doi = {10.1007/s10664-021-10005-5},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Ernst, Neil A. and Carver, Jeffrey C. and Mendez, Daniel and Torchiano, Marco},
	month = sep,
	year = {2021},
	pages = {103},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\7LJ9G9PA\\Ernst et al. - 2021 - Understanding peer review of software engineering .pdf:application/pdf},
}

@article{haakman_ai_2021,
	title = {{AI} lifecycle models need to be revised: {An} exploratory study in {Fintech}},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {{AI} lifecycle models need to be revised},
	url = {https://link.springer.com/10.1007/s10664-021-09993-1},
	doi = {10.1007/s10664-021-09993-1},
	abstract = {Abstract
            
              Tech-leading organizations are embracing the forthcoming artificial intelligence revolution. Intelligent systems are replacing and cooperating with traditional software components. Thus, the same development processes and standards in software engineering ought to be complied in artificial intelligence systems. This study aims to understand the processes by which artificial intelligence-based systems are developed and how state-of-the-art lifecycle models fit the current needs of the industry. We conducted an exploratory case study at ING, a global bank with a strong European base. We interviewed 17 people with different roles and from different departments within the organization. We have found that the following stages have been overlooked by previous lifecycle models:
              data collection
              ,
              feasibility study
              ,
              documentation
              ,
              model monitoring
              , and
              model risk assessment
              . Our work shows that the real challenges of applying Machine Learning go much beyond sophisticated learning algorithms – more focus is needed on the entire lifecycle. In particular, regardless of the existing development tools for Machine Learning, we observe that they are still not meeting the particularities of this field.},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Haakman, Mark and Cruz, Luís and Huijgens, Hennie and van Deursen, Arie},
	month = sep,
	year = {2021},
	pages = {95},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\GRMB65PP\\Haakman et al. - 2021 - AI lifecycle models need to be revised An explora.pdf:application/pdf},
}

@article{hasan_using_2021,
	title = {Using a balanced scorecard to identify opportunities to improve code review effectiveness: an industrial experience report},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {Using a balanced scorecard to identify opportunities to improve code review effectiveness},
	url = {https://link.springer.com/10.1007/s10664-021-10038-w},
	doi = {10.1007/s10664-021-10038-w},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Hasan, Masum and Iqbal, Anindya and Islam, Mohammad Rafid Ul and Rahman, A.J.M. Imtiajur and Bosu, Amiangshu},
	month = nov,
	year = {2021},
	pages = {129},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\FANA6QTX\\Hasan et al. - 2021 - Using a balanced scorecard to identify opportuniti.pdf:application/pdf},
}

@article{qaddoura_evocluster_2021,
	title = {{EvoCluster}: {An} {Open}-{Source} {Nature}-{Inspired} {Optimization} {Clustering} {Framework}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {{EvoCluster}},
	url = {https://link.springer.com/10.1007/s42979-021-00511-0},
	doi = {10.1007/s42979-021-00511-0},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Qaddoura, Raneem and Faris, Hossam and Aljarah, Ibrahim and Castillo, Pedro A.},
	month = may,
	year = {2021},
	pages = {185},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\M7WXXCIE\\Qaddoura et al. - 2021 - EvoCluster An Open-Source Nature-Inspired Optimiz.pdf:application/pdf},
}

@article{mohamed_extended_2021,
	title = {Extended {Authorization} {Policy} for {Graph}-{Structured} {Data}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00684-8},
	doi = {10.1007/s42979-021-00684-8},
	abstract = {Abstract
            The high increase in the use of graph databases also for business- and privacy-critical applications demands for a sophisticated, flexible, fine-grained authorization and access control (AC) approach. Attribute-based access control (ABAC) supports a fine-grained definition of authorization rules and policies. Attributes can be associated with the subject, the requested resource and action, but also the environment. Thus, this is a promising starting point. However, specific characteristics of graph-structured data, such as attributes on vertices and edges along a path from a given subject to the resource to be accessed, are not yet considered. The well-established eXtensible Access Control Markup Language (XACML), which defines a declarative language for fine-grained, attribute-based authorization policies, is the basis for our proposed approach—XACML for Graph-structured data (XACML4G). The additional path-specific constraints, described in graph patterns, demand for specialized processing of the rules and policies as well as adapted enforcement and decision-making in the access control process. To demonstrate XACML4G and its enforcement process, we present a scenario from the university domain. Due to the project’s environment, the prototype is built with the multi-model database ArangoDB. Finally, compliance of XACML4G with quality standards for access control systems administration and enforcement is assessed. The results are promising and further studies concerning performance and use in practice are planned.},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Mohamed, Aya and Auer, Dagmar and Hofer, Daniel and Küng, Josef},
	month = sep,
	year = {2021},
	pages = {351},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\E2KPJSUQ\\Mohamed et al. - 2021 - Extended Authorization Policy for Graph-Structured.pdf:application/pdf},
}

@article{mossebo_tcheunteu_distributed_2021,
	title = {Distributed data hiding in a single cloud storage environment},
	volume = {10},
	issn = {2192-113X},
	url = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-021-00258-2},
	doi = {10.1186/s13677-021-00258-2},
	abstract = {Abstract
            Distributed steganography is an approach to concealing the secret in several files, leaving fewer traces than the classical approach. Recent work proposed by Moyou and Ndoumdan have improved this approach by preserving the integrity of these files in a multi-cloud storage environment. However, the approach requires a large size of the stego-key and the management of several cloud storage environments. Our contribution consists is to improve this approach by using a single cloud storage environment and reducing the size of the stego-key. In this work, a single cloud storage environment is used to solve the problems of managing several credentials, monetary costs and data controls associated with multi-cloud storage environments. The comparisons showed interesting results with simpler operations to be performed by the participants during the process.},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Journal of Cloud Computing},
	author = {Mossebo Tcheunteu, Stéphane Willy and Moyou Metcheka, Leonel and Ndoundam, René},
	month = dec,
	year = {2021},
	pages = {43},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\UAA9KCVJ\\Mossebo Tcheunteu et al. - 2021 - Distributed data hiding in a single cloud storage .pdf:application/pdf},
}

@article{chehida_learning_2021,
	title = {Learning and analysis of sensors behavior in {IoT} systems using statistical model checking},
	issn = {0963-9314, 1573-1367},
	url = {https://link.springer.com/10.1007/s11219-021-09559-w},
	doi = {10.1007/s11219-021-09559-w},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software Quality Journal},
	author = {Chehida, Salim and Baouya, Abdelhakim and Bensalem, Saddek and Bozga, Marius},
	month = jun,
	year = {2021},
}

@article{asad_dynamical_2022,
	title = {Dynamical analysis of diversity in rule-based open source network intrusion detection systems},
	volume = {27},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-10046-w},
	doi = {10.1007/s10664-021-10046-w},
	abstract = {Abstract
            Diverse layers of defence play an important role in the design of defence-in-depth architectures. The use of Intrusion Detection Systems (IDSs) are ubiquitous in this design. But the selection of the “right” IDSs in various configurations is an important decision that the security architects need to make. Additionally, the ability of these IDSs to adapt to the evolving threat-landscape also needs to be investigated. To help with these decisions, we need rigorous quantitative analysis. In this paper, we present a diversity analysis of open-source IDSs, Snort and Suricata, to help security architects tune/deploy these IDSs. We analyse two types of diversities in these IDSs; configurational diversity and functional diversity. In the configurational diversity analysis, we investigate the diversity in the sets of rules and the Blacklisted IP Addresses (BIPAs) these IDSs use in their configurations. The functional diversity analysis investigates the differences in alerting behaviours of these IDSs when they analyse real network traffic, and how these differences evolve. The configurational diversity experiment utilises snapshots of the rules and BIPAs collected over a period of 5 months, from May to October 2017. The snapshots have been collected for three different off-the-shelf default configurations of the Snort IDS and the Emerging Threats (ET) configuration of the Suricata IDS. The functional diversity investigates the alerting behaviour of these two IDSs for a sample of the real network traffic collected in the same time window. Analysing the differences in these systems allows us to get insights into where the diversity in the behaviour of these systems comes from, how does it evolve and whether this has any effect on the alerting behaviour of these IDSs. This analysis gives insight to security architects on how they can combine and layer these systems in a defence-in-depth deployment.},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Asad, Hafizul and Gashi, Ilir},
	month = jan,
	year = {2022},
	pages = {4},
}

@article{chicha_exposing_2021,
	title = {Exposing safe correlations in transactional datasets},
	issn = {1863-2386, 1863-2394},
	url = {https://link.springer.com/10.1007/s11761-021-00325-1},
	doi = {10.1007/s11761-021-00325-1},
	language = {en},
	urldate = {2021-10-24},
	journal = {Service Oriented Computing and Applications},
	author = {Chicha, Elie and Al Bouna, Bechara and Wünsche, Kay and Chbeir, Richard},
	month = aug,
	year = {2021},
}

@article{ganesh_optimal_2021,
	title = {Optimal extension protocols for byzantine broadcast and agreement},
	volume = {34},
	issn = {0178-2770, 1432-0452},
	url = {https://link.springer.com/10.1007/s00446-020-00384-1},
	doi = {10.1007/s00446-020-00384-1},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Distributed Computing},
	author = {Ganesh, Chaya and Patra, Arpita},
	month = feb,
	year = {2021},
	pages = {59--77},
}

@article{balliu_almost_2021,
	title = {Almost global problems in the {LOCAL} model},
	volume = {34},
	issn = {0178-2770, 1432-0452},
	url = {https://link.springer.com/10.1007/s00446-020-00375-2},
	doi = {10.1007/s00446-020-00375-2},
	abstract = {Abstract
            
              The landscape of the distributed time complexity is nowadays well-understood for subpolynomial complexities. When we look at deterministic algorithms in the
              
                
                  \$\${\textbackslash}mathsf \{LOCAL\}\$\$
                  
                    LOCAL
                  
                
              
              model and locally checkable problems (
              
                
                  \$\${\textbackslash}mathsf \{LCL\}\$\$
                  
                    LCL
                  
                
              
              s) in bounded-degree graphs, the following picture emerges:
              
                
                  
                    There are lots of problems with time complexities of
                    
                      
                        \$\${\textbackslash}varTheta ({\textbackslash}log {\textasciicircum}* n)\$\$
                        
                          
                            Θ
                            (
                            
                              log
                              ∗
                            
                            n
                            )
                          
                        
                      
                    
                    or
                    
                      
                        \$\${\textbackslash}varTheta ({\textbackslash}log n)\$\$
                        
                          
                            Θ
                            (
                            log
                            n
                            )
                          
                        
                      
                    
                    .
                  
                
                
                  
                    It is not possible to have a problem with complexity between
                    
                      
                        \$\${\textbackslash}omega ({\textbackslash}log {\textasciicircum}* n)\$\$
                        
                          
                            ω
                            (
                            
                              log
                              ∗
                            
                            n
                            )
                          
                        
                      
                    
                    and
                    
                      
                        \$\$o({\textbackslash}log n)\$\$
                        
                          
                            o
                            (
                            log
                            n
                            )
                          
                        
                      
                    
                    .
                  
                
                
                  
                    In
                    general graphs
                    , we can construct
                    
                      
                        \$\${\textbackslash}mathsf \{LCL\}\$\$
                        
                          LCL
                        
                      
                    
                    problems with infinitely many complexities between
                    
                      
                        \$\${\textbackslash}omega ({\textbackslash}log n)\$\$
                        
                          
                            ω
                            (
                            log
                            n
                            )
                          
                        
                      
                    
                    and
                    
                      
                        \$\$n{\textasciicircum}\{o(1)\}\$\$
                        
                          
                            n
                            
                              o
                              (
                              1
                              )
                            
                          
                        
                      
                    
                    .
                  
                
                
                  
                    In
                    trees
                    , problems with such complexities do not exist.
                  
                
              
              However, the high end of the complexity spectrum was left open by prior work. In general graphs there are
              
                
                  \$\${\textbackslash}mathsf \{LCL\}\$\$
                  
                    LCL
                  
                
              
              problems with complexities of the form
              
                
                  \$\${\textbackslash}varTheta (n{\textasciicircum}{\textbackslash}alpha )\$\$
                  
                    
                      Θ
                      (
                      
                        n
                        α
                      
                      )
                    
                  
                
              
              for any rational
              
                
                  \$\$0 {\textless} {\textbackslash}alpha {\textbackslash}le 1/2\$\$
                  
                    
                      0
                      {\textless}
                      α
                      ≤
                      1
                      /
                      2
                    
                  
                
              
              , while for trees only complexities of the form
              
                
                  \$\${\textbackslash}varTheta (n{\textasciicircum}\{1/k\})\$\$
                  
                    
                      Θ
                      (
                      
                        n
                        
                          1
                          /
                          k
                        
                      
                      )
                    
                  
                
              
              are known. No
              
                
                  \$\${\textbackslash}mathsf \{LCL\}\$\$
                  
                    LCL
                  
                
              
              problem with complexity between
              
                
                  \$\${\textbackslash}omega ({\textbackslash}sqrt\{n\})\$\$
                  
                    
                      ω
                      (
                      
                        n
                      
                      )
                    
                  
                
              
              and
              o
              (
              n
              ) is known, and neither are there results that would show that such problems do not exist. We show that:
              
                
                  
                    In
                    general graphs
                    , we can construct
                    
                      
                        \$\${\textbackslash}mathsf \{LCL\}\$\$
                        
                          LCL
                        
                      
                    
                    problems with infinitely many complexities between
                    
                      
                        \$\${\textbackslash}omega ({\textbackslash}sqrt\{n\})\$\$
                        
                          
                            ω
                            (
                            
                              n
                            
                            )
                          
                        
                      
                    
                    and
                    o
                    (
                    n
                    ).
                  
                
                
                  
                    In
                    trees
                    , problems with such complexities do not exist.
                  
                
              
              Put otherwise, we show that any
              
                
                  \$\${\textbackslash}mathsf \{LCL\}\$\$
                  
                    LCL
                  
                
              
              with a complexity
              o
              (
              n
              ) can be solved in time
              
                
                  \$\$O({\textbackslash}sqrt\{n\})\$\$
                  
                    
                      O
                      (
                      
                        n
                      
                      )
                    
                  
                
              
              in trees, while the same is not true in general graphs.},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Distributed Computing},
	author = {Balliu, Alkida and Brandt, Sebastian and Olivetti, Dennis and Suomela, Jukka},
	month = aug,
	year = {2021},
	pages = {259--281},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\7WAIDCYC\\Balliu et al. - 2021 - Almost global problems in the LOCAL model.pdf:application/pdf},
}

@article{sarma_methods_2021,
	title = {Methods, {Databases} and {Recent} {Advancement} of {Vision}-{Based} {Hand} {Gesture} {Recognition} for {HCI} {Systems}: {A} {Review}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Methods, {Databases} and {Recent} {Advancement} of {Vision}-{Based} {Hand} {Gesture} {Recognition} for {HCI} {Systems}},
	url = {https://link.springer.com/10.1007/s42979-021-00827-x},
	doi = {10.1007/s42979-021-00827-x},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Sarma, Debajit and Bhuyan, M. K.},
	month = nov,
	year = {2021},
	pages = {436},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\SPKFL88H\\Sarma and Bhuyan - 2021 - Methods, Databases and Recent Advancement of Visio.pdf:application/pdf},
}

@article{challita_model-based_2021,
	title = {Model-based cloud resource management with {TOSCA} and {OCCI}},
	volume = {20},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-021-00869-y},
	doi = {10.1007/s10270-021-00869-y},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Challita, Stéphanie and Korte, Fabian and Erbel, Johannes and Zalila, Faiez and Grabowski, Jens and Merle, Philippe},
	month = oct,
	year = {2021},
	pages = {1609--1631},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\75JHQSR7\\Challita et al. - 2021 - Model-based cloud resource management with TOSCA a.pdf:application/pdf},
}

@article{tuarob_automatic_2021,
	title = {Automatic team recommendation for collaborative software development},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-09966-4},
	doi = {10.1007/s10664-021-09966-4},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Tuarob, Suppawong and Assavakamhaenghan, Noppadol and Tanaphantaruk, Waralee and Suwanworaboon, Ponlakit and Hassan, Saeed-Ul and Choetkiertikul, Morakot},
	month = jul,
	year = {2021},
	pages = {64},
}

@article{frolov_light_2021,
	title = {Light {Transport} in {Realistic} {Rendering}: {State}-of-the-{Art} {Simulation} {Methods}},
	volume = {47},
	issn = {0361-7688, 1608-3261},
	shorttitle = {Light {Transport} in {Realistic} {Rendering}},
	url = {https://link.springer.com/10.1134/S0361768821040034},
	doi = {10.1134/S0361768821040034},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Programming and Computer Software},
	author = {Frolov, V. A. and Voloboy, A. G. and Ershov, S. V. and Galaktionov, V. A.},
	month = jul,
	year = {2021},
	pages = {298--326},
}

@article{garcia_automated_2021,
	title = {Automated driver management for {Selenium} {WebDriver}},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-09975-3},
	doi = {10.1007/s10664-021-09975-3},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {García, Boni and Munoz-Organero, Mario and Alario-Hoyos, Carlos and Kloos, Carlos Delgado},
	month = sep,
	year = {2021},
	pages = {107},
}

@article{ferrara_static_2021,
	title = {Static analysis for discovering {IoT} vulnerabilities},
	volume = {23},
	issn = {1433-2779, 1433-2787},
	url = {http://link.springer.com/10.1007/s10009-020-00592-x},
	doi = {10.1007/s10009-020-00592-x},
	abstract = {Abstract
            The Open Web Application Security Project (OWASP), released the “OWASP Top 10 Internet of Things 2018” list of the high-priority security vulnerabilities for IoT systems. The diversity of these vulnerabilities poses a great challenge toward development of a robust solution for their detection and mitigation. In this paper, we discuss the relationship between these vulnerabilities and the ones listed by OWASP Top 10 (focused on Web applications rather than IoT systems), how these vulnerabilities can actually be exploited, and in which cases static analysis can help in preventing them. Then, we present an extension of an industrial analyzer (Julia) that already covers five out of the top seven vulnerabilities of OWASP Top 10, and we discuss which IoT Top 10 vulnerabilities might be detected by the existing analyses or their extension. The experimental results present the application of some existing Julia’s analyses and their extension to IoT systems, showing its effectiveness of the analysis of some representative case studies.},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {International Journal on Software Tools for Technology Transfer},
	author = {Ferrara, Pietro and Mandal, Amit Kr and Cortesi, Agostino and Spoto, Fausto},
	month = feb,
	year = {2021},
	pages = {71--88},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\53ALKXPU\\Ferrara et al. - 2021 - Static analysis for discovering IoT vulnerabilitie.pdf:application/pdf},
}

@article{hamadeh_fpga_2021,
	title = {An {FPGA} {Implementation} of {Privacy} {Preserving} {Data} {Provenance} {Model} {Based} on {PUF} for {Secure} {Internet} of {Things}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-020-00428-0},
	doi = {10.1007/s42979-020-00428-0},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Hamadeh, Hala and Tyagi, Akhilesh},
	month = apr,
	year = {2021},
	pages = {65},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\FDZ9HLWE\\Hamadeh and Tyagi - 2021 - An FPGA Implementation of Privacy Preserving Data .pdf:application/pdf},
}

@article{henriksson_holistic_2021,
	title = {Holistic data-driven requirements elicitation in the big data era},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-021-00926-6},
	doi = {10.1007/s10270-021-00926-6},
	abstract = {Abstract
            Digital transformation stimulates continuous generation of large amounts of digital data, both in organizations and in society at large. As a consequence, there have been growing efforts in the Requirements Engineering community to consider digital data as sources for requirements acquisition, in addition to human stakeholders. The volume, velocity and variety of the data make requirements discovery increasingly dynamic, but also unstructured and complex, which current elicitation methods are unable to consider and manage in a systematic and efficient manner. We propose a framework, in the form of a conceptual metamodel and a method, for continuous and automated acquisition, analysis and aggregation of heterogeneous digital sources that aims to support data-driven requirements elicitation and management. The usability of the framework is partially validated by an in-depth case study from the business sector of video game development.},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Henriksson, Aron and Zdravkovic, Jelena},
	month = oct,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\DQ7P2NDA\\Henriksson and Zdravkovic - 2021 - Holistic data-driven requirements elicitation in t.pdf:application/pdf},
}

@article{sadi_towards_2021,
	title = {Towards {Tolerating} {Soft} {Errors} for {Embedded} {Systems}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-021-00497-9},
	doi = {10.1007/s42979-021-00497-9},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Sadi, Muhammad Sheikh and Ahmed, Waseem and Jürjens, Jan},
	month = apr,
	year = {2021},
	pages = {101},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\QABIYBMS\\Sadi et al. - 2021 - Towards Tolerating Soft Errors for Embedded System.pdf:application/pdf},
}

@article{cho_distributed_2021,
	title = {Distributed computation with continual population growth},
	issn = {0178-2770, 1432-0452},
	url = {https://link.springer.com/10.1007/s00446-021-00404-8},
	doi = {10.1007/s00446-021-00404-8},
	abstract = {Abstract
            
              Computing via synthetically engineered bacteria is a vibrant and active field with numerous applications in bio-production, bio-sensing, and medicine. Motivated by the lack of robustness and by resource limitation inside single cells, distributed approaches with communication among bacteria have recently gained in interest. In this paper, we focus on the problem of population growth happening concurrently, and possibly interfering, with the desired bio-computation. Specifically, we present a fast protocol in systems with continuous population growth for the majority consensus problem and prove that it correctly identifies the initial majority among two inputs with high probability if the initial difference is
              
                
                  \$\${\textbackslash}varOmega ({\textbackslash}sqrt\{n{\textbackslash}log n\})\$\$
                  
                    
                      Ω
                      (
                      
                        
                          n
                          log
                          n
                        
                      
                      )
                    
                  
                
              
              where 
              n
              is the total initial population. We also present a fast protocol that correctly computes the
              Nand
              of two inputs with high probability. By combining
              Nand
              gates with the majority consensus protocol as an amplifier, it is possible to compute arbitrary Boolean functions. Finally, we extend the protocols to several biologically relevant settings. We simulate a plausible implementation of a noisy
              Nand
              gate with engineered bacteria. In the context of continuous cultures with a constant outflow and a constant inflow of fresh media, we demonstrate that majority consensus is achieved only if the flow is slower than the maximum growth rate. Simulations suggest that flow increases consensus time over a wide parameter range. The proposed protocols help set the stage for bio-engineered distributed computation that directly addresses continuous stochastic population growth.},
	language = {en},
	urldate = {2021-10-24},
	journal = {Distributed Computing},
	author = {Cho, Da-Jung and Függer, Matthias and Hopper, Corbin and Kushwaha, Manish and Nowak, Thomas and Soubeyran, Quentin},
	month = oct,
	year = {2021},
}

@article{berenbrink_time-space_2021,
	title = {Time-space trade-offs in population protocols for the majority problem},
	volume = {34},
	issn = {0178-2770, 1432-0452},
	url = {https://link.springer.com/10.1007/s00446-020-00385-0},
	doi = {10.1007/s00446-020-00385-0},
	abstract = {Abstract
            
              Population protocols are a model for distributed computing that is focused on simplicity and robustness. A system of
              n
              identical agents (finite state machines) performs a global task like electing a unique leader or determining the majority opinion when each agent has one of two opinions. Agents communicate in pairwise interactions with randomly assigned communication partners. Quality is measured in two ways: the number of interactions to complete the task and the number of states per agent. We present protocols for the majority problem that allow for a trade-off between these two measures. Compared to the only other trade-off result (Alistarh et al. in Proceedings of the 2015 ACM symposium on principles of distributed computing, Donostia-San Sebastián, 2015), we improve the number of interactions by almost a linear factor. Furthermore, our protocols can be made uniform (working correctly without any information on the population size
              n
              ), yielding the first uniform majority protocols that stabilize in a subquadratic number of interactions.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Distributed Computing},
	author = {Berenbrink, Petra and Elsässer, Robert and Friedetzky, Tom and Kaaser, Dominik and Kling, Peter and Radzik, Tomasz},
	month = apr,
	year = {2021},
	pages = {91--111},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\GAQX7DQL\\Berenbrink et al. - 2021 - Time-space trade-offs in population protocols for .pdf:application/pdf},
}

@article{fischer_distributed_2021,
	title = {A distributed algorithm for directed minimum-weight spanning tree},
	issn = {0178-2770, 1432-0452},
	url = {https://link.springer.com/10.1007/s00446-021-00398-3},
	doi = {10.1007/s00446-021-00398-3},
	language = {en},
	urldate = {2021-10-24},
	journal = {Distributed Computing},
	author = {Fischer, Orr and Oshman, Rotem},
	month = jun,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\PS9AUMKI\\Fischer and Oshman - 2021 - A distributed algorithm for directed minimum-weigh.pdf:application/pdf},
}

@article{dang_elastic_2021,
	title = {An {Elastic} {Data} {Conversion} {Framework}: {A} {Case} {Study} for {MySQL} and {MongoDB}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {An {Elastic} {Data} {Conversion} {Framework}},
	url = {https://link.springer.com/10.1007/s42979-021-00716-3},
	doi = {10.1007/s42979-021-00716-3},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Dang, Tran Khanh and Huy, Ta Manh and Dang, Ly Hoang and Le Hoang, Nguyen},
	month = jul,
	year = {2021},
	pages = {325},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\4BGCDHX4\\Dang et al. - 2021 - An Elastic Data Conversion Framework A Case Study.pdf:application/pdf},
}

@article{lekidis_energy_2021,
	title = {Energy characterization of {IoT} systems through design aspect monitoring},
	issn = {1433-2779, 1433-2787},
	url = {http://link.springer.com/10.1007/s10009-020-00598-5},
	doi = {10.1007/s10009-020-00598-5},
	language = {en},
	urldate = {2021-10-24},
	journal = {International Journal on Software Tools for Technology Transfer},
	author = {Lekidis, Alexios and Katsaros, Panagiotis},
	month = jan,
	year = {2021},
}

@article{xiong_cyber_2021,
	title = {Cyber security threat modeling based on the {MITRE} {Enterprise} {ATT}\&{CK} {Matrix}},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-021-00898-7},
	doi = {10.1007/s10270-021-00898-7},
	abstract = {Abstract
            Enterprise systems are growing in complexity, and the adoption of cloud and mobile services has greatly increased the attack surface. To proactively address these security issues in enterprise systems, this paper proposes a threat modeling language for enterprise security based on the MITRE Enterprise ATT\&CK Matrix. It is designed using the Meta Attack Language framework and focuses on describing system assets, attack steps, defenses, and asset associations. The attack steps in the language represent adversary techniques as listed and described by MITRE. This entity-relationship model describes enterprise IT systems as a whole; by using available tools, the proposed language enables attack simulations on its system model instances. These simulations can be used to investigate security settings and architectural changes that might be implemented to secure the system more effectively. Our proposed language is tested with a number of unit and integration tests. This is visualized in the paper with two real cyber attacks modeled and simulated.},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Xiong, Wenjun and Legrand, Emeline and Åberg, Oscar and Lagerström, Robert},
	month = jun,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\VMG59NFN\\Xiong et al. - 2021 - Cyber security threat modeling based on the MITRE .pdf:application/pdf},
}

@article{caliz_examining_2021,
	title = {Examining the usability of touchscreen gestures for adults with {DS}},
	volume = {7},
	issn = {2199-4668, 2199-4676},
	url = {https://link.springer.com/10.1007/s40860-020-00122-1},
	doi = {10.1007/s40860-020-00122-1},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Journal of Reliable Intelligent Environments},
	author = {Cáliz, Doris and Ravivanpong, Ployplearn and Schankin, Andrea and Jadán-Guerrero, Janio and Caraguay, Washington and Arellano, Leonardo},
	month = dec,
	year = {2021},
	pages = {355--380},
}

@article{bej_cost-effective_2021,
	title = {A cost-effective alertness-rating tool to enable situational awareness among on-duty static security guards in {Covid}-19 pandemic},
	volume = {7},
	issn = {2199-4668, 2199-4676},
	url = {https://link.springer.com/10.1007/s40860-020-00128-9},
	doi = {10.1007/s40860-020-00128-9},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Journal of Reliable Intelligent Environments},
	author = {Bej, Debabrata and Chakraborty, Shubhranil and Mahammad, Sekh Arif and Mal, Ashis Kumar},
	month = dec,
	year = {2021},
	pages = {341--353},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\TXC5G69U\\Bej et al. - 2021 - A cost-effective alertness-rating tool to enable s.pdf:application/pdf},
}

@article{frohme_compositional_2021,
	title = {Compositional learning of mutually recursive procedural systems},
	volume = {23},
	issn = {1433-2779, 1433-2787},
	url = {https://link.springer.com/10.1007/s10009-021-00634-y},
	doi = {10.1007/s10009-021-00634-y},
	abstract = {Abstract
            This paper presents a compositional approach to active automata learning of Systems of Procedural Automata (SPAs), an extension of Deterministic Finite Automata (DFAs) to systems of DFAs that can mutually call each other. SPAs are of high practical relevance, as they allow one to efficiently learn intuitive recursive models of recursive programs after an easy instrumentation that makes calls and returns observable. Key to our approach is the simultaneous inference of individual DFAs for each of the involved procedures via expansion and projection: membership queries for the individual DFAs are expanded to membership queries of the entire SPA, and global counterexample traces are transformed into counterexamples for the DFAs of concerned procedures. This reduces the inference of SPAs to a simultaneous inference of the DFAs for the involved procedures for which we can utilize various existing regular learning algorithms. The inferred models are easy to understand and allow for an intuitive display of the procedural system under learning that reveals its recursive structure. We implemented the algorithm within the LearnLib framework in order to provide a ready-to-use tool for practical application which is publicly available on GitHub for experimentation.},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {International Journal on Software Tools for Technology Transfer},
	author = {Frohme, Markus and Steffen, Bernhard},
	month = aug,
	year = {2021},
	pages = {521--543},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\FR74ASNI\\Frohme and Steffen - 2021 - Compositional learning of mutually recursive proce.pdf:application/pdf},
}

@article{alharbi_review_2021,
	title = {Review of {Recent} {Technologies} for {Tackling} {COVID}-19},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00841-z},
	doi = {10.1007/s42979-021-00841-z},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Alharbi, Ayman and Abdur Rahman, Md},
	month = nov,
	year = {2021},
	pages = {460},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\F78G2SHV\\Alharbi and Abdur Rahman - 2021 - Review of Recent Technologies for Tackling COVID-1.pdf:application/pdf},
}

@article{brunschwig_modelling_2021,
	title = {Modelling on mobile devices: {A} systematic mapping study},
	issn = {1619-1366, 1619-1374},
	shorttitle = {Modelling on mobile devices},
	url = {https://link.springer.com/10.1007/s10270-021-00897-8},
	doi = {10.1007/s10270-021-00897-8},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Brunschwig, Léa and Guerra, Esther and de Lara, Juan},
	month = jun,
	year = {2021},
}

@article{ma_testing_2021,
	title = {Testing self-healing cyber-physical systems under uncertainty with reinforcement learning: an empirical study},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {Testing self-healing cyber-physical systems under uncertainty with reinforcement learning},
	url = {https://link.springer.com/10.1007/s10664-021-09941-z},
	doi = {10.1007/s10664-021-09941-z},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Ma, Tao and Ali, Shaukat and Yue, Tao},
	month = may,
	year = {2021},
	pages = {52},
}

@article{solomon_follow--leader_2021,
	title = {A {Follow}-the-{Leader} {Strategy} {Using} {Hierarchical} {Deep} {Neural} {Networks} with {Grouped} {Convolutions}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00572-1},
	doi = {10.1007/s42979-021-00572-1},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Solomon, José Enrique and Charette, François},
	month = may,
	year = {2021},
	pages = {147},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\PSVDXB6K\\Solomon and Charette - 2021 - A Follow-the-Leader Strategy Using Hierarchical De.pdf:application/pdf},
}

@article{sarker_machine_2021,
	title = {Machine {Learning}: {Algorithms}, {Real}-{World} {Applications} and {Research} {Directions}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Machine {Learning}},
	url = {https://link.springer.com/10.1007/s42979-021-00592-x},
	doi = {10.1007/s42979-021-00592-x},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Sarker, Iqbal H.},
	month = may,
	year = {2021},
	pages = {160},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\K3Z6HHXP\\Sarker - 2021 - Machine Learning Algorithms, Real-World Applicati.pdf:application/pdf},
}

@article{petrulio_indolent_2021,
	title = {The indolent lambdification of {Java}: {Understanding} the support for lambda expressions in the {Java} ecosystem},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {The indolent lambdification of {Java}},
	url = {https://link.springer.com/10.1007/s10664-021-10039-9},
	doi = {10.1007/s10664-021-10039-9},
	abstract = {Abstract
            As Java 8 introduced functional interfaces and lambda expressions to the Java programming language, the JDK API was changed to introduce support for lambda expressions, thus allowing consumers to define lambda functions when using Java’s collections. While the JDK API allows for a functional paradigm, for API consumers to be able to completely embrace Java’s new functional features, third-party APIs must also support lambda expressions. To understand the current state of the Java ecosystem, we investigate (i) the extent to which third-party Java APIs have changed their interfaces, (ii) why or why not they introduce functional interface support and (iii) in the case the API has changed its interface how it does so. We also investigate the consumers’ perspective, particularly their ease in using lambda expressions in Java with APIs. We perform our investigation by manually analyzing the top 50 popular Java APIs, conducting in-person and email interviews with 23 API producers, and surveying 110 developers. We find that only a minority of the top 50 APIs support functional interfaces, the rest does not support them, predominantly in the interest of backward compatibility. Java 7 support is still greatly desirable due to enterprise projects not migrating to newer versions of Java. This suggests that the Java ecosystem is stagnant and that the introduction of new language features will not be enough to save it from the advent of new languages such as Kotlin (JVM based) and Rust (non-JVM based).},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Petrulio, Fernando and Sawant, Anand Ashok and Bacchelli, Alberto},
	month = nov,
	year = {2021},
	pages = {134},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\I5MYBSPR\\Petrulio et al. - 2021 - The indolent lambdification of Java Understanding.pdf:application/pdf},
}

@article{azanguezet_quimatio_horbac_2021,
	title = {{HOrBAC} {Optimization} {Based} on {Suspicious} {Behavior} {Detection} {Using} {Information} {Theory}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-021-00515-w},
	doi = {10.1007/s42979-021-00515-w},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Azanguezet Quimatio, Benoît Martin and Tsognong, Fidèle},
	month = apr,
	year = {2021},
	pages = {121},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\QLM9T6F7\\Azanguezet Quimatio and Tsognong - 2021 - HOrBAC Optimization Based on Suspicious Behavior D.pdf:application/pdf},
}

@article{zhou_why_2021,
	title = {Why and what happened? {Aiding} bug comprehension with automated category and causal link identification},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {Why and what happened?},
	url = {https://link.springer.com/10.1007/s10664-021-10010-8},
	doi = {10.1007/s10664-021-10010-8},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Zhou, Cheng and Li, Bin and Sun, Xiaobing and Bo, Lili},
	month = nov,
	year = {2021},
	pages = {118},
}

@article{rahman_forgotten_2021,
	title = {The forgotten role of search queries in {IR}-based bug localization: an empirical study},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {The forgotten role of search queries in {IR}-based bug localization},
	url = {https://link.springer.com/10.1007/s10664-021-10022-4},
	doi = {10.1007/s10664-021-10022-4},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Rahman, Mohammad Masudur and Khomh, Foutse and Yeasmin, Shamima and Roy, Chanchal K.},
	month = nov,
	year = {2021},
	pages = {116},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\X42FKB9V\\Rahman et al. - 2021 - The forgotten role of search queries in IR-based b.pdf:application/pdf},
}

@article{ter_beek_efficient_2022,
	title = {Efficient static analysis and verification of featured transition systems},
	volume = {27},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-020-09930-8},
	doi = {10.1007/s10664-020-09930-8},
	abstract = {Abstract
            
              A Featured Transition System (FTS) models the behaviour of all products of a Software Product Line (SPL) in a single compact structure, by associating action-labelled transitions with features that condition their presence in product behaviour. It may however be the case that the resulting featured transitions of an FTS cannot be executed in any product (so called
              dead transitions
              ) or, on the contrary, can be executed in all products (so called
              false optional transitions
              ). Moreover, an FTS may contain states from which a transition can be executed only in some products (so called
              hidden deadlock states
              ). It is useful to detect such ambiguities and signal them to the modeller, because dead transitions indicate an anomaly in the FTS that must be corrected, false optional transitions indicate a redundancy that may be removed, and hidden deadlocks should be made explicit in the FTS to improve the understanding of the model and to enable efficient verification—if the deadlocks in the products should not be remedied in the first place. We provide an algorithm to analyse an FTS for ambiguities and a means to transform an ambiguous FTS into an unambiguous one. The scope is twofold: an ambiguous model is typically undesired as it gives an unclear idea of the SPL and, moreover, an unambiguous FTS can efficiently be model checked. We empirically show the suitability of the algorithm by applying it to a number of benchmark SPL examples from the literature, and we show how this facilitates a kind of family-based model checking of a wide range of properties on FTSs.},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {ter Beek, Maurice H. and Damiani, Ferruccio and Lienhardt, Michael and Mazzanti, Franco and Paolini, Luca},
	month = jan,
	year = {2022},
	pages = {10},
}

@article{hasnain_functional_2021,
	title = {Functional {Requirement}-{Based} {Test} {Case} {Prioritization} in {Regression} {Testing}: {A} {Systematic} {Literature} {Review}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Functional {Requirement}-{Based} {Test} {Case} {Prioritization} in {Regression} {Testing}},
	url = {https://link.springer.com/10.1007/s42979-021-00821-3},
	doi = {10.1007/s42979-021-00821-3},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Hasnain, Muhammad and Pasha, Muhammad Fermi and Ghani, Imran and Jeong, Seung Ryul},
	month = nov,
	year = {2021},
	pages = {421},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\9AS7VXRB\\Hasnain et al. - 2021 - Functional Requirement-Based Test Case Prioritizat.pdf:application/pdf},
}

@article{tsagkaropoulos_severity_2021,
	title = {Severity: a {QoS}-aware approach to cloud application elasticity},
	volume = {10},
	issn = {2192-113X},
	shorttitle = {Severity},
	url = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-021-00255-5},
	doi = {10.1186/s13677-021-00255-5},
	abstract = {Abstract
            While a multitude of cloud vendors exist today offering flexible application hosting services, the application adaptation capabilities provided in terms of autoscaling are rather limited. In most cases, a static adaptation action is used having a fixed scaling response. In the cases that a dynamic adaptation action is provided, this is based on a single scaling variable. We propose Severity, a novel algorithmic approach aiding the adaptation of cloud applications. Based on the input of the DevOps, our approach detects situations, calculates their Severity and proposes adaptations which can lead to better application performance. Severity can be calculated for any number of application QoS attributes and any type of such attributes, whether bounded or unbounded. Evaluation with four distinct workload types and a variety of monitoring attributes shows that QoS for particular application categories is improved. The feasibility of our approach is demonstrated with a prototype implementation of an application adaptation manager, for which the source code is provided.},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Journal of Cloud Computing},
	author = {Tsagkaropoulos, Andreas and Verginadis, Yiannis and Papageorgiou, Nikos and Paraskevopoulos, Fotis and Apostolou, Dimitris and Mentzas, Gregoris},
	month = dec,
	year = {2021},
	pages = {45},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\WIHLPBUT\\Tsagkaropoulos et al. - 2021 - Severity a QoS-aware approach to cloud applicatio.pdf:application/pdf},
}

@article{ma_world_2021,
	title = {World of code: enabling a research workflow for mining and analyzing the universe of open source {VCS} data},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {World of code},
	url = {http://link.springer.com/10.1007/s10664-020-09905-9},
	doi = {10.1007/s10664-020-09905-9},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Ma, Yuxing and Dey, Tapajit and Bogart, Chris and Amreen, Sadika and Valiev, Marat and Tutko, Adam and Kennard, David and Zaretzki, Russell and Mockus, Audris},
	month = mar,
	year = {2021},
	pages = {22},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\WF4TVGPI\\Ma et al. - 2021 - World of code enabling a research workflow for mi.pdf:application/pdf},
}

@article{anderton_windowed_2021,
	title = {Windowed backoff algorithms for {WiFi}: theory and performance under batched arrivals},
	volume = {34},
	issn = {0178-2770, 1432-0452},
	shorttitle = {Windowed backoff algorithms for {WiFi}},
	url = {https://link.springer.com/10.1007/s00446-021-00403-9},
	doi = {10.1007/s00446-021-00403-9},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Distributed Computing},
	author = {Anderton, William C. and Chakraborty, Trisha and Young, Maxwell},
	month = oct,
	year = {2021},
	pages = {367--393},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\M6VN2A5X\\Anderton et al. - 2021 - Windowed backoff algorithms for WiFi theory and p.pdf:application/pdf},
}

@article{barquero_improving_2021,
	title = {Improving query performance on dynamic graphs},
	volume = {20},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-020-00832-3},
	doi = {10.1007/s10270-020-00832-3},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Barquero, Gala and Troya, Javier and Vallecillo, Antonio},
	month = aug,
	year = {2021},
	pages = {1011--1041},
}

@article{cirus_pupils_2021,
	title = {Pupils’ {Digital} {Literacy} {Reflected} in {Teachers}’ {Attitudes} {Towards} {ICT}: {Case} {Study} of the {Czech} {Republic}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Pupils’ {Digital} {Literacy} {Reflected} in {Teachers}’ {Attitudes} {Towards} {ICT}},
	url = {https://link.springer.com/10.1007/s42979-021-00567-y},
	doi = {10.1007/s42979-021-00567-y},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Cirus, Lukas and Simonova, Ivana},
	month = may,
	year = {2021},
	pages = {231},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\442Q5ZVV\\Cirus and Simonova - 2021 - Pupils’ Digital Literacy Reflected in Teachers’ At.pdf:application/pdf},
}

@article{grzelak_canonical_2021,
	title = {A {Canonical} {String} {Encoding} for {Pure} {Bigraphs}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00552-5},
	doi = {10.1007/s42979-021-00552-5},
	abstract = {Abstract
            
              The bigraph theory, devised by Robin Milner, is a recent mathematical framework for concurrent processes. Its generality is able to subsume many existing process calculi, for example, CCS, CSP, and Petri nets. Further, it provides a uniform proof of bisimilarity, which is a congruence. We present the first
              canonical string encoding
              for
              pure and lean bigraphs
              by lifting the breadth-first canonical form of rooted unordered trees to a unique representation for bigraphs up to isomorphism (i.e.,
              lean-support equivalence
              ). The encoding’s applicability is limited to atomic alphabets. The time complexity is
              
                
                  \$\$O(n{\textasciicircum}\{2\}k{\textbackslash}, d {\textbackslash}log \{d\})\$\$
                  
                    
                      O
                      (
                      
                        n
                        2
                      
                      k
                      
                      d
                      log
                      d
                      )
                    
                  
                
              
              , where
              n
              is the number of places,
              d
              the degree of the place graph and
              k
              the maximum arity of a bigraph’s signature. We provide proof of the correctness of our method and also conduct experimental measurements to assess the complexity.},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Grzelak, Dominik and Aßmann, Uwe},
	month = jul,
	year = {2021},
	pages = {246},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\9YKNILV5\\Grzelak and Aßmann - 2021 - A Canonical String Encoding for Pure Bigraphs.pdf:application/pdf},
}

@article{arunachalam_design_2021,
	title = {Design and {Development} of a {Cyber} {Security} {Framework} for {National} {Time} {Dissemination}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-021-00471-5},
	doi = {10.1007/s42979-021-00471-5},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Arunachalam, Amutha and Seetharaman, K. and Agarwal, Ashish},
	month = apr,
	year = {2021},
	pages = {77},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\3S3IEWHE\\Arunachalam et al. - 2021 - Design and Development of a Cyber Security Framewo.pdf:application/pdf},
}

@article{kuutila_individual_2021,
	title = {Individual differences limit predicting well-being and productivity using software repositories: a longitudinal industrial study},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {Individual differences limit predicting well-being and productivity using software repositories},
	url = {https://link.springer.com/10.1007/s10664-021-09977-1},
	doi = {10.1007/s10664-021-09977-1},
	abstract = {Abstract
            
              Reports of poor work well-being and fluctuating productivity in software engineering have been reported in both academic and popular sources. Understanding and predicting these issues through repository analysis might help manage software developers’ well-being. Our objective is to link data from software repositories, that is commit activity, communication, expressed sentiments, and job events, with measures of well-being obtained with a daily experience sampling questionnaire. To achieve our objective, we studied a single software project team for eight months in the software industry. Additionally, we performed semi-structured interviews to explain our results. The acquired quantitative data are analyzed with generalized linear mixed-effects models with autocorrelation structure. We find that individual variance accounts for most of the
              R
              2
              values in models predicting developers’ experienced well-being and productivity. In other words, using software repository variables to predict developers’ well-being or productivity is challenging due to individual differences. Prediction models developed for each developer individually work better, with fixed effects
              R
              2
              value of up to 0.24. The semi-structured interviews give insights into the well-being of software developers and the benefits of chat interaction. Our study suggests that individualized prediction models are needed for well-being and productivity prediction in software development.},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Kuutila, Miikka and Mäntylä, Mika and Claes, Maëlick and Elovainio, Marko and Adams, Bram},
	month = sep,
	year = {2021},
	pages = {88},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\UK8IZJKC\\Kuutila et al. - 2021 - Individual differences limit predicting well-being.pdf:application/pdf},
}

@article{chuka-maduji_cloud_2021,
	title = {Cloud {Computing} {Security} {Challenges} and {Related} {Defensive} {Measures}: {A} {Survey} and {Taxonomy}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Cloud {Computing} {Security} {Challenges} and {Related} {Defensive} {Measures}},
	url = {https://link.springer.com/10.1007/s42979-021-00732-3},
	doi = {10.1007/s42979-021-00732-3},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Chuka-Maduji, Nnamdi and Anu, Vaibhav},
	month = jul,
	year = {2021},
	pages = {331},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\PR872M5I\\Chuka-Maduji and Anu - 2021 - Cloud Computing Security Challenges and Related De.pdf:application/pdf},
}

@article{mohamad_security_2021,
	title = {Security assurance cases—state of the art of an emerging approach},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-09971-7},
	doi = {10.1007/s10664-021-09971-7},
	abstract = {Abstract
            Security Assurance Cases (SAC) are a form of structured argumentation used to reason about the security properties of a system. After the successful adoption of assurance cases for safety, SAC are getting significant traction in recent years, especially in safety-critical industries (e.g., automotive), where there is an increasing pressure to be compliant with several security standards and regulations. Accordingly, research in the field of SAC has flourished in the past decade, with different approaches being investigated. In an effort to systematize this active field of research, we conducted a systematic literature review (SLR) of the existing academic studies on SAC. Our review resulted in an in-depth analysis and comparison of 51 papers. Our results indicate that, while there are numerous papers discussing the importance of SAC and their usage scenarios, the literature is still immature with respect to concrete support for practitioners on how to build and maintain a SAC. More importantly, even though some methodologies are available, their validation and tool support is still lacking.},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Mohamad, Mazen and Steghöfer, Jan-Philipp and Scandariato, Riccardo},
	month = jul,
	year = {2021},
	pages = {70},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\WW69WDN9\\Mohamad et al. - 2021 - Security assurance cases—state of the art of an em.pdf:application/pdf},
}

@article{giantamidis_learning_2021,
	title = {Learning {Moore} machines from input–output traces},
	volume = {23},
	issn = {1433-2779, 1433-2787},
	url = {http://link.springer.com/10.1007/s10009-019-00544-0},
	doi = {10.1007/s10009-019-00544-0},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {International Journal on Software Tools for Technology Transfer},
	author = {Giantamidis, Georgios and Tripakis, Stavros and Basagiannis, Stylianos},
	month = feb,
	year = {2021},
	pages = {1--29},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\BICN5JIS\\Giantamidis et al. - 2021 - Learning Moore machines from input–output traces.pdf:application/pdf},
}

@article{feroze_group_2021,
	title = {Group {Anomaly} {Detection}: {Past} {Notions}, {Present} {Insights}, and {Future} {Prospects}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Group {Anomaly} {Detection}},
	url = {https://link.springer.com/10.1007/s42979-021-00603-x},
	doi = {10.1007/s42979-021-00603-x},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Feroze, Aqeel and Daud, Ali and Amjad, Tehmina and Hayat, Malik Khizar},
	month = may,
	year = {2021},
	pages = {219},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\BHNE9KTP\\Feroze et al. - 2021 - Group Anomaly Detection Past Notions, Present Ins.pdf:application/pdf},
}

@article{wang_beyond_2021,
	title = {Beyond the virus: a first look at coronavirus-themed {Android} malware},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {Beyond the virus},
	url = {https://link.springer.com/10.1007/s10664-021-09974-4},
	doi = {10.1007/s10664-021-09974-4},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Wang, Liu and He, Ren and Wang, Haoyu and Xia, Pengcheng and Li, Yuanchun and Wu, Lei and Zhou, Yajin and Luo, Xiapu and Sui, Yulei and Guo, Yao and Xu, Guoai},
	month = jul,
	year = {2021},
	pages = {82},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\843Q3GEJ\\Wang et al. - 2021 - Beyond the virus a first look at coronavirus-them.pdf:application/pdf},
}

@article{wang_promises_2021,
	title = {Promises and challenges of microservices: an exploratory study},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {Promises and challenges of microservices},
	url = {https://link.springer.com/10.1007/s10664-020-09910-y},
	doi = {10.1007/s10664-020-09910-y},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Wang, Yingying and Kadiyala, Harshavardhan and Rubin, Julia},
	month = jul,
	year = {2021},
	pages = {63},
}

@article{sen_recommendation_2021,
	title = {Recommendation of {Influenced} {Products} {Using} {Association} {Rule} {Mining}: {Neo4j} as a {Case} {Study}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Recommendation of {Influenced} {Products} {Using} {Association} {Rule} {Mining}},
	url = {http://link.springer.com/10.1007/s42979-021-00460-8},
	doi = {10.1007/s42979-021-00460-8},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Sen, Sudipta and Mehta, Akash and Ganguli, Runa and Sen, Soumya},
	month = apr,
	year = {2021},
	pages = {74},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\5QM28MRG\\Sen et al. - 2021 - Recommendation of Influenced Products Using Associ.pdf:application/pdf},
}

@article{brdjanin_automatic_2021,
	title = {Automatic derivation of conceptual database models from differently serialized business process models},
	volume = {20},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-020-00808-3},
	doi = {10.1007/s10270-020-00808-3},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Brdjanin, Drazen and Ilic, Stefan and Banjac, Goran and Banjac, Danijela and Maric, Slavko},
	month = feb,
	year = {2021},
	pages = {89--115},
}

@article{niedermaier_evaluate_2021,
	title = {Evaluate and control service and transaction dependability of complex {IoT} systems},
	issn = {0963-9314, 1573-1367},
	url = {https://link.springer.com/10.1007/s11219-021-09556-z},
	doi = {10.1007/s11219-021-09556-z},
	abstract = {Abstract
            Observing and controlling the dependability of service provision of complex IoT systems is challenging. In practice, many organizations struggle to derive consumer needs related to quality and to observe and quantify the service provision in the context of the dynamic behavior of a complex distributed system. In this paper, we present an approach to define and evaluate the dependability of complex IoT systems. Our approach is an adaptation of the ISO/IEC 25040, an international standard for the evaluation process for system and software quality, which is part of the systems and software quality requirements and evaluation (SQuaRE) series. Our approach was designed and evaluated with action research in an industrial study at Robert Bosch GmbH. Based on the framework of the SQuaRE series, we integrated different elements of site reliability engineering (SRE) and combined them with distributed tracing as a promising measurement method. Our approach introduces the IoT transaction concept to reduce modeling and observation efforts while increasing operationalization to measure performance against dependability targets. Our adaption was effectively applied, consumer-centricity along different system stakeholders were enhanced, and negative consequences of organizational silos were reduced. This has improved the dependability evaluation of service provision to enable fast feedback cycles for service performance control and improvement.},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software Quality Journal},
	author = {Niedermaier, Sina and Zelenik, Thommy and Heisse, Stefan and Wagner, Stefan},
	month = may,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\8B2653Z9\\Niedermaier et al. - 2021 - Evaluate and control service and transaction depen.pdf:application/pdf},
}

@article{abbadandaloussi_exploring_2021,
	title = {Exploring how users engage with hybrid process artifacts based on declarative process models: a behavioral analysis based on eye-tracking and think-aloud},
	volume = {20},
	issn = {1619-1366, 1619-1374},
	shorttitle = {Exploring how users engage with hybrid process artifacts based on declarative process models},
	url = {https://link.springer.com/10.1007/s10270-020-00811-8},
	doi = {10.1007/s10270-020-00811-8},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Abbad Andaloussi, Amine and Zerbato, Francesca and Burattin, Andrea and Slaats, Tijs and Hildebrandt, Thomas T. and Weber, Barbara},
	month = oct,
	year = {2021},
	pages = {1437--1464},
	file = {Accepted Version:C\:\\Users\\Sina\\Zotero\\storage\\9M2EE5TZ\\Abbad Andaloussi et al. - 2021 - Exploring how users engage with hybrid process art.pdf:application/pdf},
}

@article{eken_empirical_2021,
	title = {An empirical study on the effect of community smells on bug prediction},
	volume = {29},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-020-09538-7},
	doi = {10.1007/s11219-020-09538-7},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Software Quality Journal},
	author = {Eken, Beyza and Palma, Francis and Ayşe, Başar and Ayşe, Tosun},
	month = mar,
	year = {2021},
	pages = {159--194},
}

@article{wang_understanding_2021,
	title = {Understanding shared links and their intentions to meet information needs in modern code review:: {A} case study of the {OpenStack} and {Qt} projects},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {Understanding shared links and their intentions to meet information needs in modern code review},
	url = {https://link.springer.com/10.1007/s10664-021-09997-x},
	doi = {10.1007/s10664-021-09997-x},
	abstract = {Abstract
            Code reviews serve as a quality assurance activity for software teams. Especially for Modern Code Review, sharing a link during a review discussion serves as an effective awareness mechanism where “Code reviews are good FYIs [for your information].”. Although prior work has explored link sharing and the information needs of a code review, the extent to which links are used to properly conduct a review is unknown. In this study, we performed a mixed-method approach to investigate the practice of link sharing and their intentions. First, through a quantitative study of the OpenStack and Qt projects, we identify 19,268 reviews that have 39,686 links to explore the extent to which the links are shared, and analyze a correlation between link sharing and review time. Then in a qualitative study, we manually analyze 1,378 links to understand the role and usefulness of link sharing. Results indicate that internal links are more widely referred to (93\% and 80\% for the two projects). Importantly, although the majority of the internal links are referencing to reviews, bug reports and source code are also shared in review discussions. The statistical models show that the number of internal links as an explanatory factor does have an increasing relationship with the review time. Finally, we present seven intentions of link sharing, with providing context being the most common intention for sharing links. Based on the findings and a developer survey, we encourage the patch author to provide clear context and explore both internal and external resources, while the review team should continue link sharing activities. Future research directions include the investigation of causality between sharing links and the review process, as well as the potential for tool support.},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Wang, Dong and Xiao, Tao and Thongtanunam, Patanamon and Kula, Raula Gaikovina and Matsumoto, Kenichi},
	month = sep,
	year = {2021},
	pages = {96},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\8MSC5WBE\\Wang et al. - 2021 - Understanding shared links and their intentions to.pdf:application/pdf},
}

@article{hrusto_closing_2021,
	title = {Closing the {Feedback} {Loop} in {DevOps} {Through} {Autonomous} {Monitors} in {Operations}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00826-y},
	doi = {10.1007/s42979-021-00826-y},
	abstract = {Abstract
            DevOps represent the tight connection between development and operations. To address challenges that arise on the borderline between development and operations, we conducted a study in collaboration with a Swedish company responsible for ticket management and sales in public transportation. The aim of our study was to explore and describe the existing DevOps environment, as well as to identify how the feedback from operations can be improved, specifically with respect to the alerts sent from system operations. Our study complies with the basic principles of the design science paradigm, such as understanding and improving design solutions in the specific areas of practice. Our diagnosis, based on qualitative data collected through interviews and observations, shows that alert flooding is a challenge in the feedback loop, i.e. too much signals from operations create noise in the feedback loop. Therefore, we design a solution to improve the alert management by optimizing when to raise alerts and accordingly introducing a new element in the feedback loop, a smart filter. Moreover, we implemented a prototype of the proposed solution design and showed that a tighter relation between operations and development can be achieved, using a hybrid method which combines rule-based and unsupervised machine learning for operations data analysis.},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Hrusto, Adha and Runeson, Per and Engström, Emelie},
	month = nov,
	year = {2021},
	pages = {447},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\AG6YRG6X\\Hrusto et al. - 2021 - Closing the Feedback Loop in DevOps Through Autono.pdf:application/pdf},
}

@article{kang_detection_2021,
	title = {Detection of {Drug}–{Drug} and {Drug}–{Disease} {Interactions} {Inducing} {Acute} {Kidney} {Injury} {Using} {Deep} {Rule} {Forests}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00670-0},
	doi = {10.1007/s42979-021-00670-0},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Kang, Yihuang and Huang, Sheng-Tai and Wu, Ping-Hsung},
	month = jul,
	year = {2021},
	pages = {299},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\W94LTJKX\\Kang et al. - 2021 - Detection of Drug–Drug and Drug–Disease Interactio.pdf:application/pdf},
}

@article{keserwani_smart_2021,
	title = {A smart anomaly-based intrusion detection system for the {Internet} of {Things} ({IoT}) network using {GWO}–{PSO}–{RF} model},
	volume = {7},
	issn = {2199-4668, 2199-4676},
	url = {http://link.springer.com/10.1007/s40860-020-00126-x},
	doi = {10.1007/s40860-020-00126-x},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Journal of Reliable Intelligent Environments},
	author = {Keserwani, Pankaj Kumar and Govil, Mahesh Chandra and Pilli, Emmanuel S. and Govil, Prajjval},
	month = mar,
	year = {2021},
	pages = {3--21},
}

@article{singh_execution_2021,
	title = {Execution of {Structured} and {Unstructured} {Mining} in {Automotive} {Industry} {Using} {Hortonworks} {Sandbox}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00692-8},
	doi = {10.1007/s42979-021-00692-8},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Singh, Sukhpreet and Jagdev, Gagandeep},
	month = jul,
	year = {2021},
	pages = {298},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\RMXWJ3X3\\Singh and Jagdev - 2021 - Execution of Structured and Unstructured Mining in.pdf:application/pdf},
}

@article{lalejini_tag-based_2021,
	title = {Tag-based regulation of modules in genetic programming improves context-dependent problem solving},
	volume = {22},
	issn = {1389-2576, 1573-7632},
	url = {https://link.springer.com/10.1007/s10710-021-09406-8},
	doi = {10.1007/s10710-021-09406-8},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {Genetic Programming and Evolvable Machines},
	author = {Lalejini, Alexander and Moreno, Matthew Andres and Ofria, Charles},
	month = sep,
	year = {2021},
	pages = {325--355},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\SBYGR66W\\Lalejini et al. - 2021 - Tag-based regulation of modules in genetic program.pdf:application/pdf},
}

@article{bhaskarwar_cross-layer_2021,
	title = {Cross-{Layer} {Design} {Approaches} in {Underwater} {Wireless} {Sensor} {Networks}: {A} {Survey}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Cross-{Layer} {Design} {Approaches} in {Underwater} {Wireless} {Sensor} {Networks}},
	url = {https://link.springer.com/10.1007/s42979-021-00754-x},
	doi = {10.1007/s42979-021-00754-x},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Bhaskarwar, Roshani V. and Pete, Dnyandeo J.},
	month = sep,
	year = {2021},
	pages = {362},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\ANWQ23Y4\\Bhaskarwar and Pete - 2021 - Cross-Layer Design Approaches in Underwater Wirele.pdf:application/pdf},
}

@article{ali_discriminating_2021,
	title = {Discriminating features-based cost-sensitive approach for software defect prediction},
	volume = {28},
	issn = {0928-8910, 1573-7535},
	url = {https://link.springer.com/10.1007/s10515-021-00289-8},
	doi = {10.1007/s10515-021-00289-8},
	abstract = {Abstract
            Correlated quality metrics extracted from a source code repository can be utilized to design a model to automatically predict defects in a software system. It is obvious that the extracted metrics will result in a highly unbalanced data, since the number of defects in a good quality software system should be far less than the number of normal instances. It is also a fact that the selection of the best discriminating features significantly improves the robustness and accuracy of a prediction model. Therefore, the contribution of this paper is twofold, first it selects the best discriminating features that help in accurately predicting a defect in a software component. Secondly, a cost-sensitive logistic regression and decision tree ensemble-based prediction models are applied to the best discriminating features for precisely predicting a defect in a software component. The proposed models are compared with the most recent schemes in the literature in terms of accuracy, area under the curve, and recall. The models are evaluated using 11 datasets and it is evident from the results and analysis that the performance of the proposed prediction models outperforms the schemes in the literature.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Automated Software Engineering},
	author = {Ali, Aftab and Khan, Naveed and Abu-Tair, Mamun and Noppen, Joost and McClean, Sally and McChesney, Ian},
	month = nov,
	year = {2021},
	pages = {11},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\XSHUXI5I\\Ali et al. - 2021 - Discriminating features-based cost-sensitive appro.pdf:application/pdf},
}

@article{panahandeh_muppit_2021,
	title = {{MUPPIT}: a method for using proper patterns in model transformations},
	volume = {20},
	issn = {1619-1366, 1619-1374},
	shorttitle = {{MUPPIT}},
	url = {https://link.springer.com/10.1007/s10270-020-00853-y},
	doi = {10.1007/s10270-020-00853-y},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Panahandeh, Mahsa and Hamdaqa, Mohammad and Zamani, Bahman and Hamou-Lhadj, Abdelwahab},
	month = oct,
	year = {2021},
	pages = {1491--1523},
}

@article{farshidi_model-driven_2021,
	title = {Model-driven development platform selection: four industry case studies},
	volume = {20},
	issn = {1619-1366, 1619-1374},
	shorttitle = {Model-driven development platform selection},
	url = {https://link.springer.com/10.1007/s10270-020-00855-w},
	doi = {10.1007/s10270-020-00855-w},
	abstract = {Abstract
            Model-driven development platforms shift the focus of software development activity from coding to modeling for enterprises. A significant number of such platforms are available in the market. Selecting the best fitting platform is challenging, as domain experts are not typically model-driven deployment platform experts and have limited time for acquiring the needed knowledge. We model the problem as a multi-criteria decision-making problem and capture knowledge systematically about the features and qualities of 30 alternative platforms. Through four industry case studies, we confirm that the model supports decision-makers with the selection problem by reducing the time and cost of the decision-making process and by providing a richer list of options than the enterprises considered initially. We show that having decision knowledge readily available supports decision-makers in making more rational, efficient, and effective decisions. The study’s theoretical contribution is the observation that the decision framework provides a reliable approach for creating decision models in software production.},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Farshidi, Siamak and Jansen, Slinger and Fortuin, Sven},
	month = oct,
	year = {2021},
	pages = {1525--1551},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\T3FS4KTQ\\Farshidi et al. - 2021 - Model-driven development platform selection four .pdf:application/pdf},
}

@article{buzaaba_question_2021,
	title = {Question {Answering} {Over} {Knowledge} {Base}: {A} {Scheme} for {Integrating} {Subject} and the {Identified} {Relation} to {Answer} {Simple} {Questions}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Question {Answering} {Over} {Knowledge} {Base}},
	url = {http://link.springer.com/10.1007/s42979-020-00421-7},
	doi = {10.1007/s42979-020-00421-7},
	abstract = {Abstract
            Answering natural language question over a knowledge base is an important and challenging task with a wide range of application in natural language processing and information retrieval. Several existing knowledge-based question answering systems exploit complex end-to-end neural network approaches that are computationally expensive and take long to execute when training the neural network. More importantly, such an end-to-end approach makes it difficult to examine the process of query processing. In this study, we decompose the question answering problem in a three-step pipeline of entity detection, entity linking, and relation prediction, and solve each component separately. We explore basic neural network and non-neural network methods for entity detection and relation prediction plus a few heuristics for entity linking. We also introduce a method to identify ambiguity in the data and show that ambiguity in the data bounds the performance of the question answering system. The experiment on the SimpleQuestions benchmark data set shows that a combination of basic LSTMs, GRUs, and non-neural network techniques achieve reasonable performance while providing an opportunity to understand the question answering problem structure.},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Buzaaba, Happy and Amagasa, Toshiyuki},
	month = feb,
	year = {2021},
	pages = {25},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\MI7ZY3E4\\Buzaaba and Amagasa - 2021 - Question Answering Over Knowledge Base A Scheme f.pdf:application/pdf},
}

@article{gorrieri_team_2021,
	title = {Team bisimilarity, and its associated modal logic, for {BPP} nets},
	volume = {58},
	issn = {0001-5903, 1432-0525},
	url = {https://link.springer.com/10.1007/s00236-020-00377-4},
	doi = {10.1007/s00236-020-00377-4},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Acta Informatica},
	author = {Gorrieri, Roberto},
	month = oct,
	year = {2021},
	pages = {529--569},
}

@article{arul_supervised_2021,
	title = {Supervised {Deep} {Learning} {Vector} {Quantization} to {Detect} {MemCached} {DDOS} {Malware} {Attack} on {Cloud}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-021-00477-z},
	doi = {10.1007/s42979-021-00477-z},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Arul, E. and Punidha, A.},
	month = apr,
	year = {2021},
	pages = {85},
}

@article{goren_optimistically_2021,
	title = {Optimistically tuning synchronous byzantine consensus: another win for null messages},
	volume = {34},
	issn = {0178-2770, 1432-0452},
	shorttitle = {Optimistically tuning synchronous byzantine consensus},
	url = {https://link.springer.com/10.1007/s00446-021-00393-8},
	doi = {10.1007/s00446-021-00393-8},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Distributed Computing},
	author = {Goren, Guy and Moses, Yoram},
	month = oct,
	year = {2021},
	pages = {395--410},
}

@article{phan_theoretical_2021,
	title = {A {Theoretical} and {Experimental} {Comparison} of {Large}-{Scale} {Join} {Algorithms} in {Spark}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00738-x},
	doi = {10.1007/s42979-021-00738-x},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Phan, Anh-Cang and Phan, Thuong-Cang and Trieu, Thanh-Ngoan and Tran, Thi-To-Quyen},
	month = sep,
	year = {2021},
	pages = {352},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\YUDM2FEE\\Phan et al. - 2021 - A Theoretical and Experimental Comparison of Large.pdf:application/pdf},
}

@article{rong_edge-cloud_2021,
	title = {An edge-cloud collaborative computing platform for building {AIoT} applications efficiently},
	volume = {10},
	issn = {2192-113X},
	url = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-021-00250-w},
	doi = {10.1186/s13677-021-00250-w},
	abstract = {Abstract
            
              The convergence of Artificial Intelligence (AI) and the Internet of Things (IoT), or AIoT, has breathed a new life into IoT operations and human-machine interactions. Currently, resource-constrained IoT devices usually cannot provide sufficient capability for data storage and processing so as to support building modern AI models. An intuitive solution is to integrate cloud computing technology into AIoT and exploit the powerful and elastic computing as well as the storage capacity of the servers on the cloud end. Nevertheless, the network bandwidth and communication latency increasingly become serious bottlenecks. The emerging edge computing can complement the cloud-based AIoT in terms of communication latency, and hence attracts more and more attention from the AIoT area. In this paper, we present an industrial edge-cloud collaborative computing platform, namely
              Sophon Edge
              , that helps to build and deploy AIoT applications efficiently. As an enterprise-level solution for the AIoT computing paradigm,
              Sophon Edge
              adopts a pipeline-based computing model for streaming data from IoT devices. Besides, this platform supports an iterative way for model evolution and updating so as to enable the AIoT applications agile and data-driven. Through a real-world example, we demonstrate the effectiveness and efficiency of building an AIoT application based on the
              Sophon Edge
              platform.},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Journal of Cloud Computing},
	author = {Rong, Guoping and Xu, Yangchen and Tong, Xinxin and Fan, Haojun},
	month = dec,
	year = {2021},
	pages = {36},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\K2ASL7GE\\Rong et al. - 2021 - An edge-cloud collaborative computing platform for.pdf:application/pdf},
}

@article{goyal_predicting_2021,
	title = {Predicting the {Defects} using {Stacked} {Ensemble} {Learner} with {Filtered} {Dataset}},
	volume = {28},
	issn = {0928-8910, 1573-7535},
	url = {https://link.springer.com/10.1007/s10515-021-00285-y},
	doi = {10.1007/s10515-021-00285-y},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Automated Software Engineering},
	author = {Goyal, Somya},
	month = nov,
	year = {2021},
	pages = {14},
}

@article{liu_how_2021,
	title = {How to cherry pick the bug report for better summarization?},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-10008-2},
	doi = {10.1007/s10664-021-10008-2},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Liu, Haoran and Yu, Yue and Li, Shanshan and Geng, Mingyang and Mao, Xiaoguang and Liao, Xiangke},
	month = nov,
	year = {2021},
	pages = {119},
}

@article{safdar_framework_2021,
	title = {A framework for automated multi-stage and multi-step product configuration of cyber-physical systems},
	volume = {20},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-020-00803-8},
	doi = {10.1007/s10270-020-00803-8},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Safdar, Safdar Aqeel and Lu, Hong and Yue, Tao and Ali, Shaukat and Nie, Kunming},
	month = feb,
	year = {2021},
	pages = {211--265},
}

@article{bulla_improved_2021,
	title = {Improved data-driven root cause analysis in fog computing environment},
	issn = {2199-4668, 2199-4676},
	url = {https://link.springer.com/10.1007/s40860-021-00158-x},
	doi = {10.1007/s40860-021-00158-x},
	language = {en},
	urldate = {2021-10-24},
	journal = {Journal of Reliable Intelligent Environments},
	author = {Bulla, Chetan and Birje, Mahantesh N.},
	month = oct,
	year = {2021},
}

@article{bredereck_coalitional_2021,
	title = {On coalitional manipulation for multiwinner elections: shortlisting},
	volume = {35},
	issn = {1387-2532, 1573-7454},
	shorttitle = {On coalitional manipulation for multiwinner elections},
	url = {https://link.springer.com/10.1007/s10458-021-09507-9},
	doi = {10.1007/s10458-021-09507-9},
	abstract = {Abstract
            
              Shortlisting of candidates—selecting a group of “best” candidates—is a special case of multiwinner elections. We provide the first in-depth study of the computational complexity of strategic voting for shortlisting based on the perhaps most basic voting rule in this scenario,
              
                
                  \$\${\textbackslash}ell \$\$
                  
                    ℓ
                  
                
              
              -Bloc (every voter approves
              
                
                  \$\${\textbackslash}ell \$\$
                  
                    ℓ
                  
                
              
               candidates). In particular, we investigate the influence of several different group evaluation functions (e.g., egalitarian versus utilitarian) and tie-breaking mechanisms modeling pessimistic and optimistic manipulators. Among other things, we conclude that in an egalitarian setting strategic voting may indeed be computationally intractable regardless of the tie-breaking rule. Altogether, we provide a fairly comprehensive picture of the computational complexity landscape of this scenario.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Autonomous Agents and Multi-Agent Systems},
	author = {Bredereck, Robert and Kaczmarczyk, Andrzej and Niedermeier, Rolf},
	month = oct,
	year = {2021},
	pages = {38},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\ACXCFK5N\\Bredereck et al. - 2021 - On coalitional manipulation for multiwinner electi.pdf:application/pdf},
}

@article{sullivan_understanding_2021,
	title = {Understanding the {Impact} of the {Alphabetical} {Ordering} of {Names} in {User} {Interfaces}: {A} {Potential} {Approach} for {Gender} {Bias} {Identification}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Understanding the {Impact} of the {Alphabetical} {Ordering} of {Names} in {User} {Interfaces}},
	url = {https://link.springer.com/10.1007/s42979-021-00877-1},
	doi = {10.1007/s42979-021-00877-1},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Sullivan, Daniel and Caminha, Carlos and Dantas, Victor and Furtado, Elizabeth and Furtado, Vasco and Almeida, Virgílio},
	month = nov,
	year = {2021},
	pages = {472},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\6AC93ZBQ\\Sullivan et al. - 2021 - Understanding the Impact of the Alphabetical Order.pdf:application/pdf},
}

@article{vinutha_budget_2021,
	title = {Budget {Constraint} {Scheduler} for {Big} {Data} {Using} {Hadoop} {MapReduce}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00638-0},
	doi = {10.1007/s42979-021-00638-0},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Vinutha, D. C. and Raju, G. T.},
	month = jul,
	year = {2021},
	pages = {250},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\Q3KVK3U5\\Vinutha and Raju - 2021 - Budget Constraint Scheduler for Big Data Using Had.pdf:application/pdf},
}

@article{han_model-based_2021,
	title = {Model-based optimization of {ARINC}-653 partition scheduling},
	issn = {1433-2779, 1433-2787},
	url = {http://link.springer.com/10.1007/s10009-020-00597-6},
	doi = {10.1007/s10009-020-00597-6},
	abstract = {Abstract
            The architecture of ARINC-653 partitioned scheduling has been widely applied to avionics systems owing to its robust temporal isolation among applications. However, this partitioning mechanism causes the problem of how to optimize the partition scheduling of a complex system while guaranteeing its schedulability. In this paper, a model-based optimization approach is proposed. We formulate the problem as a parameter sweep application, which searches for the optimal partition scheduling parameters with respect to minimum processor occupancy via an evolutionary algorithm. An ARINC-653 partitioned scheduling system is modeled as a set of timed automata in the model checker UPPAAL. The optimizer tentatively assigns parameter settings to the models and subsequently invokes UPPAAL to verify schedulability as well as evaluate promising solutions. The parameter space is explored with an evolutionary algorithm that combines refined genetic operators and the self-adaptation of evolution strategies. The experimental results show the applicability of our optimization method.},
	language = {en},
	urldate = {2021-10-24},
	journal = {International Journal on Software Tools for Technology Transfer},
	author = {Han, Pujie and Zhai, Zhengjun and Nielsen, Brian and Nyman, Ulrik},
	month = feb,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\YBQHGTA8\\Han et al. - 2021 - Model-based optimization of ARINC-653 partition sc.pdf:application/pdf},
}

@article{sipper_neural_2021,
	title = {Neural {Networks} with À {La} {Carte} {Selection} of {Activation} {Functions}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00885-1},
	doi = {10.1007/s42979-021-00885-1},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Sipper, Moshe},
	month = nov,
	year = {2021},
	pages = {470},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\GW53FKE4\\Sipper - 2021 - Neural Networks with À La Carte Selection of Activ.pdf:application/pdf},
}

@article{mahadi_conclusion_2022,
	title = {Conclusion stability for natural language based mining of design discussions},
	volume = {27},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-10009-1},
	doi = {10.1007/s10664-021-10009-1},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Mahadi, Alvi and Ernst, Neil A. and Tongay, Karan},
	month = jan,
	year = {2022},
	pages = {9},
}

@article{esparza_complexity_2021,
	title = {The complexity of verifying population protocols},
	volume = {34},
	issn = {0178-2770, 1432-0452},
	url = {http://link.springer.com/10.1007/s00446-021-00390-x},
	doi = {10.1007/s00446-021-00390-x},
	abstract = {Abstract
            
              Population protocols (Angluin et al. in PODC, 2004) are a model of distributed computation in which indistinguishable, finite-state agents interact in pairs to decide if their initial configuration, i.e., the initial number of agents in each state, satisfies a given property. In a seminal paper Angluin et al. classified population protocols according to their communication mechanism, and conducted an exhaustive study of the expressive power of each class, that is, of the properties they can decide (Angluin et al. in Distrib Comput 20(4):279–304, 2007). In this paper we study the correctness problem for population protocols, i.e., whether a given protocol decides a given property. A previous paper (Esparza et al. in Acta Inform 54(2):191–215, 2017) has shown that the problem is decidable for the main population protocol model, but at least as hard as the reachability problem for Petri nets, which has recently been proved to have non-elementary complexity. Motivated by this result, we study the computational complexity of the correctness problem for all other classes introduced by Angluin et al., some of which are less powerful than the main model. Our main results show that for the class of observation models the complexity of the problem is much lower, ranging from
              
                
                  \$\${\textbackslash}varPi \_2{\textasciicircum}p\$\$
                  
                    
                      Π
                      2
                      p
                    
                  
                
              
              to .},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Distributed Computing},
	author = {Esparza, Javier and Jaax, Stefan and Raskin, Mikhail and Weil-Kennedy, Chana},
	month = apr,
	year = {2021},
	pages = {133--177},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\66GT6SSY\\Esparza et al. - 2021 - The complexity of verifying population protocols.pdf:application/pdf},
}

@article{sharma_security_2021,
	title = {Security {Analysis} of {Group} {Key} {Management} {Schemes} in {Wireless} {Sensor} {Networks} {Against} {IND}-{SAOA} {Game}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00645-1},
	doi = {10.1007/s42979-021-00645-1},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Sharma, Payal and Purushothama, B. R.},
	month = jul,
	year = {2021},
	pages = {261},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\XF4LKZGC\\Sharma and Purushothama - 2021 - Security Analysis of Group Key Management Schemes .pdf:application/pdf},
}

@article{jain_characterizing_2021,
	title = {Characterizing {WDT} {Subsystem} of a {Wi}-{Fi} {Controller} in an {Automobile} {Based} on {MIPS32} {CPU} {Platform} {Across} {PVT}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00590-z},
	doi = {10.1007/s42979-021-00590-z},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Jain, Sukrutha A. and Bharadwaj, Avinash and Bisalavadi Nanjappa, Chandrashekar Murthy},
	month = jul,
	year = {2021},
	pages = {303},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\TRWPBEI4\\Jain et al. - 2021 - Characterizing WDT Subsystem of a Wi-Fi Controller.pdf:application/pdf},
}

@article{olsson_validated_2021,
	title = {A validated model for the scoping process of quality requirements: a multi-case study},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	shorttitle = {A validated model for the scoping process of quality requirements},
	url = {http://link.springer.com/10.1007/s10664-020-09896-7},
	doi = {10.1007/s10664-020-09896-7},
	abstract = {Abstract
            Quality requirements are vital to developing successful software products. However, there exist evidence that quality requirements are managed mostly in an “ad hoc” manner and down-prioritized. This may result in insecure, unstable, slow products, and unhappy customers. We have developed a conceptual model for the scoping process of quality requirements – QREME – and an assessment model – Q-REPM – for companies to benchmark when evaluating and improving their quality requirements practices. Our model balances an upfront forward-loop with a data-driven feedback-loop. Furthermore, it addresses both strategic and operational decisions. We have evaluated the model in a multi-case study at two companies in Sweden and three companies in The Netherlands. We assessed the scoping process practices for quality requirements and provided improvement recommendations for which practices to improve. The study confirms the existence of the constructs underlying QREME. The companies perform, in the median, 24\% of the suggested actions in Q-REPM. None of the companies work data-driven with their quality requirements, even though four out of five companies could technically do so. Furthermore, on the strategic level, quality requirements practices are not systematically performed by any of the companies. The conceptual model and assessment model capture a relevant view of the quality requirements practices and offer relevant improvement proposals. However, we believe there is a need for coupling quality requirements practices to internal and external success factors to motive companies to change their ways of working. We also see improvement potential in the area of business intelligence for QREME in selecting data sources and relevant stakeholders.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Empirical Software Engineering},
	author = {Olsson, Thomas and Wnuk, Krzysztof and Jansen, Slinger},
	month = mar,
	year = {2021},
	pages = {26},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\88Z86WC4\\Olsson et al. - 2021 - A validated model for the scoping process of quali.pdf:application/pdf},
}

@article{su_comprehensive_2021,
	title = {Comprehensive review and classification of game analytics},
	volume = {15},
	issn = {1863-2386, 1863-2394},
	url = {https://link.springer.com/10.1007/s11761-020-00303-z},
	doi = {10.1007/s11761-020-00303-z},
	abstract = {Abstract
            As a business model, the essence of games is to provide a service to satisfy the player experience. From a business perspective, development in the game industry has led to the application of Business Intelligence (BI) becoming more and more extensive. However, related research lacks systematic examination and precise classification. This paper provides a comprehensive literature review of BI used in the game industry, focusing primarily on game analytics. This research mainly studies and discusses five aspects. First, we explore game analytics aspects in the available literature based on the traditional game value chain. Second, we find out the main purposes of using analytics in the game industry. Third, we present the problems or challenges in the game area, which can be addressed by using game analytics. Fourth, we also list different algorithms that have been used in game analytics for prediction. Finally, we summarize the research areas that have already been covered in literature but need further development. Based on the categories established after the mapping and the review findings, we also discuss the limitations of game analytics and propose potential research points for future research.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Service Oriented Computing and Applications},
	author = {Su, Yanhui and Backlund, Per and Engström, Henrik},
	month = jun,
	year = {2021},
	pages = {141--156},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\EP7FITPB\\Su et al. - 2021 - Comprehensive review and classification of game an.pdf:application/pdf},
}

@article{farrugia_real-time_2021,
	title = {A {Real}-{Time} {Prescriptive} {Solution} for {Explainable} {Cyber}-{Fraud} {Detection} {Within} the {iGaming} {Industry}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00623-7},
	doi = {10.1007/s42979-021-00623-7},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Farrugia, David and Zerafa, Christopher and Cini, Tony and Kuasney, Bruno and Livori, Karen},
	month = may,
	year = {2021},
	pages = {215},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\PG4LSHC7\\Farrugia et al. - 2021 - A Real-Time Prescriptive Solution for Explainable .pdf:application/pdf},
}

@article{dong_profiling_2021,
	title = {Profiling users via their reviews: an extended systematic mapping study},
	volume = {20},
	issn = {1619-1366, 1619-1374},
	shorttitle = {Profiling users via their reviews},
	url = {http://link.springer.com/10.1007/s10270-020-00790-w},
	doi = {10.1007/s10270-020-00790-w},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Dong, Xin and Li, Tong and Song, Rui and Ding, Zhiming},
	month = feb,
	year = {2021},
	pages = {49--69},
}

@article{herzog_probabilistic_2021,
	title = {A {Probabilistic} {Particle} {Tracking} {Framework} for {Guided} and {Brownian} {Motion} {Systems} with {High} {Particle} {Densities}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00879-z},
	doi = {10.1007/s42979-021-00879-z},
	abstract = {Abstract
            This paper presents a new framework for particle tracking based on a Gaussian Mixture Model (GMM). It is an extension of the state-of-the-art iterative reconstruction of individual particles by a continuous modeling of the particle trajectories considering the position and velocity as coupled quantities. The proposed approach includes an initialization and a processing step. In the first step, the velocities at the initial points are determined after iterative reconstruction of individual particles of the first four images to be able to generate the tracks between these initial points. From there on, the tracks are extended in the processing step by searching for and including new points obtained from consecutive images based on continuous modeling of the particle trajectories with a Gaussian Mixture Model. The presented tracking procedure allows to extend existing trajectories interactively with low computing effort and to store them in a compact representation using little memory space. To demonstrate the performance and the functionality of this new particle tracking approach, it is successfully applied to a synthetic turbulent pipe flow, to the problem of observing particles corresponding to a Brownian motion (e.g., motion of cells), as well as to problems where the motion is guided by boundary forces, e.g., in the case of particle tracking velocimetry of turbulent Rayleigh–Bénard convection.},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Herzog, Sebastian and Schiepel, Daniel and Guido, Isabella and Barta, Robin and Wagner, Claus},
	month = nov,
	year = {2021},
	pages = {485},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\JAMNC7UD\\Herzog et al. - 2021 - A Probabilistic Particle Tracking Framework for Gu.pdf:application/pdf},
}

@article{tsou_kvarepsilon_2021,
	title = {(\$\$k,{\textbackslash}varepsilon ,{\textbackslash}delta \$\$)-{Anonymization}: privacy-preserving data release based on k-anonymity and differential privacy},
	volume = {15},
	issn = {1863-2386, 1863-2394},
	shorttitle = {(\$\$k,{\textbackslash}varepsilon ,{\textbackslash}delta \$\$)-{Anonymization}},
	url = {https://link.springer.com/10.1007/s11761-021-00324-2},
	doi = {10.1007/s11761-021-00324-2},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {Service Oriented Computing and Applications},
	author = {Tsou, Yao-Tung and Alraja, Mansour Naser and Chen, Li-Sheng and Chang, Yu-Hsiang and Hu, Yung-Li and Huang, Yennun and Yu, Chia-Mu and Tsai, Pei-Yuan},
	month = sep,
	year = {2021},
	pages = {175--185},
}

@article{lahami_survey_2021,
	title = {A survey on runtime testing of dynamically adaptable and distributed systems},
	volume = {29},
	issn = {0963-9314, 1573-1367},
	url = {https://link.springer.com/10.1007/s11219-021-09558-x},
	doi = {10.1007/s11219-021-09558-x},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Software Quality Journal},
	author = {Lahami, Mariam and Krichen, Moez},
	month = jun,
	year = {2021},
	pages = {555--593},
}

@article{cai_specification_2021,
	title = {Specification and automated verification of atomic concurrent real-time transactions},
	volume = {20},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-020-00819-0},
	doi = {10.1007/s10270-020-00819-0},
	abstract = {Abstract
            Many database management systems (DBMS) need to ensure atomicity and isolation of transactions for logical data consistency, as well as to guarantee temporal correctness of the executed transactions. Since the mechanisms for atomicity and isolation may lead to breaching temporal correctness, trade-offs between these properties are often required during the DBMS design. To be able to address this concern, we have previously proposed the pattern-based UPPCART framework, which models the transactions and the DBMS mechanisms as timed automata, and verifies the trade-offs with provable guarantee. However, the manual construction of UPPCART models can require considerable effort and is prone to errors. In this paper, we advance the formal analysis of atomic concurrent real-time transactions with tool-automated construction of UPPCART models. The latter are generated automatically from our previously proposed UTRAN specifications, which are high-level UML-based specifications familiar to designers. To achieve this, we first propose formal definitions for the modeling patterns in UPPCART, as well as for the pattern-based construction of DBMS models, respectively. Based on this, we establish a translational semantics from UTRAN specifications to UPPCART models, to provide the former with a formal semantics relying on timed automata, and develop a tool that implements the automated transformation. We also extend the expressiveness of UTRAN and UPPCART, to incorporate transaction sequences and their timing properties. We demonstrate the specification in UTRAN, automated transformation to UPPCART, and verification of the traded-off properties, via an industrial use case.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Cai, Simin and Gallina, Barbara and Nyström, Dag and Seceleanu, Cristina},
	month = apr,
	year = {2021},
	pages = {557--589},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\IP473WZK\\Cai et al. - 2021 - Specification and automated verification of atomic.pdf:application/pdf},
}

@article{zhang_recent_2021,
	title = {Recent advances in leveraging human guidance for sequential decision-making tasks},
	volume = {35},
	issn = {1387-2532, 1573-7454},
	url = {https://link.springer.com/10.1007/s10458-021-09514-w},
	doi = {10.1007/s10458-021-09514-w},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Autonomous Agents and Multi-Agent Systems},
	author = {Zhang, Ruohan and Torabi, Faraz and Warnell, Garrett and Stone, Peter},
	month = oct,
	year = {2021},
	pages = {31},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\NL7XKRDM\\Zhang et al. - 2021 - Recent advances in leveraging human guidance for s.pdf:application/pdf},
}

@article{mohtasham_khani_deep_2021,
	title = {A {Deep} {Learning}-{Based} {Method} for {Forecasting} {Gold} {Price} with {Respect} to {Pandemics}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00724-3},
	doi = {10.1007/s42979-021-00724-3},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Mohtasham Khani, Mahtab and Vahidnia, Sahand and Abbasi, Alireza},
	month = jul,
	year = {2021},
	pages = {335},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\G8RBLPXR\\Mohtasham Khani et al. - 2021 - A Deep Learning-Based Method for Forecasting Gold .pdf:application/pdf},
}

@article{bocharnikov_p-adic_2021,
	title = {p-{Adic} {Representation} of {Subsets} of a {Bounded} {Number} {Set}},
	volume = {47},
	issn = {0361-7688, 1608-3261},
	url = {https://link.springer.com/10.1134/S0361768821040022},
	doi = {10.1134/S0361768821040022},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Programming and Computer Software},
	author = {Bocharnikov, V. P. and Sveshnikov, S. V.},
	month = jul,
	year = {2021},
	pages = {225--234},
}

@article{kuebert_daily_2021,
	title = {Daily {Routine} {Recognition} for {Hearing} {Aid} {Personalization}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00538-3},
	doi = {10.1007/s42979-021-00538-3},
	abstract = {Abstract
            This work focuses on daily routine recognition to personalize the hearing aid (HA) configuration for each user. So far, there is only one public data set containing the data of two acceleration sensors taken under unconstrained real-life conditions of one person. Therefore, we create a realistic and extensive data set with seven subjects and a total length of 63449 min. For the recordings, the HA streams the acceleration and audio data to a mobile phone, where the user simultaneously annotates it. This builds the grounds for our comprehensive simulations, where we train a set of classifiers in an offline and online manner to analyze the model generalization abilities across subjects for high-level activities. To achieve this, we build a feature representation, which describes the recurring daily situations and environments well. For the offline classification, the deep neural network, multi-layer perceptron (MLP), and random forest (RF) trained in a person-dependent manner show the significantly best F-measure performance of 86.6\%, 87.1\%, and 87.3\%, respectively. We confirm that for high-level activities the person-dependent model outperforms the independent one. In our online experiments, we personalize a model that was pretrained in a person-independent manner by daily updates. Thereby, multiple incremental learners and an online RF are tested. We demonstrate that MLP and RF improve the F-measure compared to the offline baselines.},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Kuebert, Thomas and Puder, Henning and Koeppl, Heinz},
	month = may,
	year = {2021},
	pages = {133},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\QW4N5YJL\\Kuebert et al. - 2021 - Daily Routine Recognition for Hearing Aid Personal.pdf:application/pdf},
}

@article{mukherjee_igridedgedrone_2021,
	title = {{iGridEdgeDrone}: {Hybrid} {Mobility} {Aware} {Intelligent} {Load} {Forecasting} by {Edge} {Enabled} {Internet} of {Drone} {Things} for {Smart} {Grid} {Networks}},
	volume = {49},
	issn = {0885-7458, 1573-7640},
	shorttitle = {{iGridEdgeDrone}},
	url = {https://link.springer.com/10.1007/s10766-020-00675-x},
	doi = {10.1007/s10766-020-00675-x},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {International Journal of Parallel Programming},
	author = {Mukherjee, Amartya and Mukherjee, Prateeti and De, Debashis and Dey, Nilanjan},
	month = jun,
	year = {2021},
	pages = {285--325},
}

@article{anikeev_efficient_2021,
	title = {Efficient {Implementation} of {Fast} {Hough} {Transform} {Using} {CPCA} {Coprocessor}},
	volume = {47},
	issn = {0361-7688, 1608-3261},
	url = {https://link.springer.com/10.1134/S0361768821050029},
	doi = {10.1134/S0361768821050029},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {Programming and Computer Software},
	author = {Anikeev, F. A. and Raiko, G. O. and Limonova, E. E. and Aliev, M. A. and Nikolaev, D. P.},
	month = sep,
	year = {2021},
	pages = {335--343},
}

@article{deng_utility_2021,
	title = {Utility distribution matters: enabling fast belief propagation for multi-agent optimization with dense local utility function},
	volume = {35},
	issn = {1387-2532, 1573-7454},
	shorttitle = {Utility distribution matters},
	url = {https://link.springer.com/10.1007/s10458-021-09511-z},
	doi = {10.1007/s10458-021-09511-z},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Autonomous Agents and Multi-Agent Systems},
	author = {Deng, Yanchen and An, Bo},
	month = oct,
	year = {2021},
	pages = {24},
}

@article{cornelio_voting_2021,
	title = {Voting with random classifiers ({VORACE}): theoretical and experimental analysis},
	volume = {35},
	issn = {1387-2532, 1573-7454},
	shorttitle = {Voting with random classifiers ({VORACE})},
	url = {https://link.springer.com/10.1007/s10458-021-09504-y},
	doi = {10.1007/s10458-021-09504-y},
	abstract = {Abstract
            In many machine learning scenarios, looking for the best classifier that fits a particular dataset can be very costly in terms of time and resources. Moreover, it can require deep knowledge of the specific domain. We propose a new technique which does not require profound expertise in the domain and avoids the commonly used strategy of hyper-parameter tuning and model selection. Our method is an innovative ensemble technique that uses voting rules over a set of randomly-generated classifiers. Given a new input sample, we interpret the output of each classifier as a ranking over the set of possible classes. We then aggregate these output rankings using a voting rule, which treats them as preferences over the classes. We show that our approach obtains good results compared to the state-of-the-art, both providing a theoretical analysis and an empirical evaluation of the approach on several datasets.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Autonomous Agents and Multi-Agent Systems},
	author = {Cornelio, Cristina and Donini, Michele and Loreggia, Andrea and Pini, Maria Silvia and Rossi, Francesca},
	month = oct,
	year = {2021},
	pages = {22},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\SEK3TUYH\\Cornelio et al. - 2021 - Voting with random classifiers (VORACE) theoretic.pdf:application/pdf},
}

@article{bjorklund_aggregation-based_2021,
	title = {Aggregation-based minimization of finite state automata},
	volume = {58},
	issn = {0001-5903, 1432-0525},
	url = {https://link.springer.com/10.1007/s00236-019-00363-5},
	doi = {10.1007/s00236-019-00363-5},
	abstract = {Abstract
            
              We present a minimization algorithm for non-deterministic finite state automata that finds and merges bisimulation-equivalent states. The bisimulation relation is computed through partition aggregation, in contrast to existing algorithms that use partition refinement. The algorithm simultaneously generalises and simplifies an earlier one by Watson and Daciuk for deterministic devices. We show the algorithm to be correct and run in time
              
                
                  \$\$ O {\textbackslash}left( n{\textasciicircum}2 r{\textasciicircum}2 {\textbackslash}left{\textbar} {\textbackslash}varSigma {\textbackslash}right{\textbar} {\textbackslash}right) \$\$
                  
                    
                      O
                      
                        
                          n
                          2
                        
                        
                          r
                          2
                        
                        
                          Σ
                        
                      
                    
                  
                
              
              , where
              n
              is the number of states of the input automaton
              
                
                  \$\$M\$\$
                  
                    M
                  
                
              
              ,
              r
              is the maximal out-degree in the transition graph for any combination of state and input symbol, and
              
                
                  \$\${\textbackslash}left{\textbar} {\textbackslash}varSigma {\textbackslash}right{\textbar} \$\$
                  
                    
                      Σ
                    
                  
                
              
              is the size of the input alphabet. The algorithm has a higher time complexity than derivatives of Hopcroft’s partition-refinement algorithm, but represents a promising new solution approach that preserves language equivalence throughout the computation process. Furthermore, since the algorithm essentially computes the maximal model of a logical formula derived from 
              
                
                  \$\$M\$\$
                  
                    M
                  
                
              
              , optimisation techniques from the field of model checking become applicable.},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {Acta Informatica},
	author = {Björklund, Johanna and Cleophas, Loek},
	month = jun,
	year = {2021},
	pages = {177--194},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\ZRW8T43U\\Björklund and Cleophas - 2021 - Aggregation-based minimization of finite state aut.pdf:application/pdf},
}

@article{nguyen_evaluation_2021,
	title = {Evaluation of a machine learning classifier for metamodels},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-021-00913-x},
	doi = {10.1007/s10270-021-00913-x},
	abstract = {Abstract
            Modeling is a ubiquitous activity in the process of software development. In recent years, such an activity has reached a high degree of intricacy, guided by the heterogeneity of the components, data sources, and tasks. The democratized use of models has led to the necessity for suitable machinery for mining modeling repositories. Among others, the classification of metamodels into independent categories facilitates personalized searches by boosting the visibility of metamodels. Nevertheless, the manual classification of metamodels is not only a tedious but also an error-prone task. According to our observation, misclassification is the norm which leads to a reduction in reachability as well as reusability of metamodels. Handling such complexity requires suitable tooling to leverage raw data into practical knowledge that can help modelers with their daily tasks. In our previous work, we proposed AURORA as a machine learning classifier for metamodel repositories. In this paper, we present a thorough evaluation of the system by taking into consideration different settings as well as evaluation metrics. More importantly, we improve the original AURORA tool by changing its internal design. Experimental results demonstrate that the proposed amendment is beneficial to the classification of metamodels. We also compared our approach with two baseline algorithms, namely gradient boosted decision tree and support vector machines. Eventually, we see that AURORA outperforms the baselines with respect to various quality metrics.},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Nguyen, Phuong T. and Di Rocco, Juri and Iovino, Ludovico and Di Ruscio, Davide and Pierantonio, Alfonso},
	month = sep,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\CAXI6CF2\\Nguyen et al. - 2021 - Evaluation of a machine learning classifier for me.pdf:application/pdf},
}

@article{gupta_design_2021,
	title = {Design of a {Structured} {Hypercube} {Network} {Chip} {Topology} {Model} for {Energy} {Efficiency} in {Wireless} {Sensor} {Network} {Using} {Machine} {Learning}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00766-7},
	doi = {10.1007/s42979-021-00766-7},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Gupta, Namit and Vaisla, Kunwar Singh and Kumar, Rajeev},
	month = sep,
	year = {2021},
	pages = {376},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\8W38QS2R\\Gupta et al. - 2021 - Design of a Structured Hypercube Network Chip Topo.pdf:application/pdf},
}

@article{shashikiran_minimal_2021,
	title = {Minimal {Block} {Knight}’s {Tour} and {Edge} with {LSB} {Pixel} {Replacement} {Based} {Encrypted} {Image} {Steganography}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00542-7},
	doi = {10.1007/s42979-021-00542-7},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Shashikiran, B. S. and Shaila, K. and Venugopal, K. R.},
	month = may,
	year = {2021},
	pages = {139},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\BM97T32P\\Shashikiran et al. - 2021 - Minimal Block Knight’s Tour and Edge with LSB Pixe.pdf:application/pdf},
}

@article{engelfriet_linear-bounded_2021,
	title = {Linear-bounded composition of tree-walking tree transducers: linear size increase and complexity},
	volume = {58},
	issn = {0001-5903, 1432-0525},
	shorttitle = {Linear-bounded composition of tree-walking tree transducers},
	url = {http://link.springer.com/10.1007/s00236-019-00360-8},
	doi = {10.1007/s00236-019-00360-8},
	language = {en},
	number = {1-2},
	urldate = {2021-10-24},
	journal = {Acta Informatica},
	author = {Engelfriet, Joost and Inaba, Kazuhiro and Maneth, Sebastian},
	month = apr,
	year = {2021},
	pages = {95--152},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\CNBLMVDU\\Engelfriet et al. - 2021 - Linear-bounded composition of tree-walking tree tr.pdf:application/pdf},
}

@article{highnam_real-time_2021,
	title = {Real-{Time} {Detection} of {Dictionary} {DGA} {Network} {Traffic} {Using} {Deep} {Learning}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-021-00507-w},
	doi = {10.1007/s42979-021-00507-w},
	abstract = {Abstract
            
              Botnets and malware continue to avoid detection by static rule engines when using domain generation algorithms (DGAs) for callouts to unique, dynamically generated web addresses. Common DGA detection techniques fail to reliably detect DGA variants that combine random dictionary words to create domain names that closely mirror legitimate domains. To combat this, we created a novel hybrid neural network, Bilbo the “bagging” model, that analyses domains and scores the likelihood they are generated by such algorithms and therefore are potentially malicious. Bilbo is the first parallel usage of a convolutional neural network (CNN) and a long short-term memory (LSTM) network for DGA detection. Our unique architecture is found to be the most consistent in performance in terms of AUC,
              
                
                  \$\$F\_1\$\$
                  
                    
                      F
                      1
                    
                  
                
              
              score, and accuracy when generalising across different dictionary DGA classification tasks compared to current state-of-the-art deep learning architectures. We validate using reverse-engineered dictionary DGA domains and detail our real-time implementation strategy for scoring real-world network logs within a large enterprise. In 4 h of actual network traffic, the model discovered at least five potential command-and-control networks that commercial vendor tools did not flag.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Highnam, Kate and Puzio, Domenic and Luo, Song and Jennings, Nicholas R.},
	month = apr,
	year = {2021},
	pages = {110},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\XY7I8JQZ\\Highnam et al. - 2021 - Real-Time Detection of Dictionary DGA Network Traf.pdf:application/pdf},
}

@article{jha_security_2021,
	title = {Security {Threat} {Analysis} and {Countermeasures} on {Consensus}-{Based} {Time} {Synchronization} {Algorithms} for {Wireless} {Sensor} {Network}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00796-1},
	doi = {10.1007/s42979-021-00796-1},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Jha, Suresh Kumar and Gupta, Anil and Panigrahi, Niranjan},
	month = sep,
	year = {2021},
	pages = {409},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\FLXDXQVQ\\Jha et al. - 2021 - Security Threat Analysis and Countermeasures on Co.pdf:application/pdf},
}

@article{hintzen_third-party_2021,
	title = {A third-party replication service for dynamic hidden databases},
	issn = {1863-2386, 1863-2394},
	url = {http://link.springer.com/10.1007/s11761-020-00313-x},
	doi = {10.1007/s11761-020-00313-x},
	abstract = {Abstract
            Much data on the web is available in hidden databases. Users browse their contents by sending search queries to form-based interfaces or APIs. Yet, hidden databases just return the top-k result entries and limit the number of queries per time interval. Such access restrictions constrict those tasks that require many/specific queries or need to access many/all data entries. For a temporary solution, an unrestricted local snapshot can be created by crawling the hidden database. Yet, keeping the snapshot permanently consistent is challenging due to the access restrictions of its origin. In this paper, we propose a replication approach providing permanent unrestricted access to the local copy of a hidden database with dynamic changes. To this end, we present an algorithm to effectively crawl hidden databases that outperforms the state of the art. Furthermore, we propose a new way to continuously control the consistency of the replicated database in an efficient manner. We also introduce the cloud-based architecture of a replication service for hidden databases. We show the effectiveness of the approach through a variety of reproducible experimental evaluations.},
	language = {en},
	urldate = {2021-10-24},
	journal = {Service Oriented Computing and Applications},
	author = {Hintzen, Stefan and Liesy, Yves and Zirpins, Christian},
	month = jan,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\MUIGXIEL\\Hintzen et al. - 2021 - A third-party replication service for dynamic hidd.pdf:application/pdf},
}

@article{de_almeida_farzat_automatic_2021,
	title = {Automatic generation of regular expressions for the {Regex} {Golf} challenge using a local search algorithm},
	issn = {1389-2576, 1573-7632},
	url = {https://link.springer.com/10.1007/s10710-021-09411-x},
	doi = {10.1007/s10710-021-09411-x},
	language = {en},
	urldate = {2021-10-24},
	journal = {Genetic Programming and Evolvable Machines},
	author = {de Almeida Farzat, André and de Oliveira Barros, Márcio},
	month = oct,
	year = {2021},
}

@article{mastriani_analysis_2021,
	title = {Analysis of {Five} {Techniques} for the {Internal} {Representation} of a {Digital} {Image} {Inside} a {Quantum} {Processor}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00847-7},
	doi = {10.1007/s42979-021-00847-7},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Mastriani, Mario and Iyengar, Sundaraja Sitharama and Kumar, Latesh},
	month = nov,
	year = {2021},
	pages = {450},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\4RAGA2VC\\Mastriani et al. - 2021 - Analysis of Five Techniques for the Internal Repre.pdf:application/pdf},
}

@article{sun_differentially_2021,
	title = {A differentially private distributed data mining scheme with high efficiency for edge computing},
	volume = {10},
	issn = {2192-113X},
	url = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-020-00225-3},
	doi = {10.1186/s13677-020-00225-3},
	abstract = {Abstract
            A wide range of data mining applications benefit from the low latency offered by edge computing. However, edge computing suffers from limited computing resources, which inhibits the applications of the computationally expensive data mining methods. In the edge-cloud environment, usually, the participants turn to collaboratively train machine-learning models that yield more accurate prediction results. However, data owners may not be willing to sharing the own data for the privacy concerns. To handle such disparate goals, we focus on tree-based distributed data mining scheme with differential privacy, which is computationally friendly. The basic idea of our approach is based on a distributed ensemble strategy. Each participant builds an elegant decision model based on their own data, which has a good tradeoff between the computation and the accuracy of the data distribution, and shares it with other participants after being injected with the elaborate noise. Then the useful knowledge transferred from the decision models is acquired by other participants in an adaptive ensemble strategy. Both the theoretical analysis and the experiments show that our scheme provides an efficient data mining manner that can achieve a good prediction accuracy while providing rigorous privacy guarantee over the distributed data.},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Journal of Cloud Computing},
	author = {Sun, Xianwen and Xu, Ruzhi and Wu, Longfei and Guan, Zhitao},
	month = dec,
	year = {2021},
	pages = {7},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\V5C8UYND\\Sun et al. - 2021 - A differentially private distributed data mining s.pdf:application/pdf},
}

@article{vasavi_age_2021,
	title = {Age {Detection} in a {Surveillance} {Video} {Using} {Deep} {Learning} {Technique}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00620-w},
	doi = {10.1007/s42979-021-00620-w},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Vasavi, S. and Vineela, P. and Raman, S. Venkat},
	month = jul,
	year = {2021},
	pages = {249},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\UXEV4HRC\\Vasavi et al. - 2021 - Age Detection in a Surveillance Video Using Deep L.pdf:application/pdf},
}

@article{aragao_testdcat_2021,
	title = {{TestDCat} 3.0: catalog of test debt subtypes and management activities},
	issn = {0963-9314, 1573-1367},
	shorttitle = {{TestDCat} 3.0},
	url = {http://link.springer.com/10.1007/s11219-020-09533-y},
	doi = {10.1007/s11219-020-09533-y},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software Quality Journal},
	author = {Aragão, Bruno S. and Andrade, Rossana M. C. and Santos, Ismayle S. and Castro, Rute N. S. and Lelli, Valéria and Darin, Ticianne G. R.},
	month = jan,
	year = {2021},
}

@article{ahmad_topics_2021,
	title = {Topics, {Sentiments}, and {Emotions} {Triggered} by {COVID}-19-{Related} {Tweets} from {IRAN} and {Turkey} {Official} {News} {Agencies}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00789-0},
	doi = {10.1007/s42979-021-00789-0},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Ahmad, Waseem and Wang, Bang and Xu, Han and Xu, Minghua and Zeng, Zeng},
	month = sep,
	year = {2021},
	pages = {394},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\M8UCVFYL\\Ahmad et al. - 2021 - Topics, Sentiments, and Emotions Triggered by COVI.pdf:application/pdf},
}

@article{mitra_machine_2021,
	title = {A {Machine} {Learning} {Based} {Approach} for {Deepfake} {Detection} in {Social} {Media} {Through} {Key} {Video} {Frame} {Extraction}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-021-00495-x},
	doi = {10.1007/s42979-021-00495-x},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Mitra, Alakananda and Mohanty, Saraju P. and Corcoran, Peter and Kougianos, Elias},
	month = apr,
	year = {2021},
	pages = {98},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\T45F3TCP\\Mitra et al. - 2021 - A Machine Learning Based Approach for Deepfake Det.pdf:application/pdf},
}

@article{guo_100_2021,
	title = {100 {Mbps} {Reconciliation} for {Quantum} {Key} {Distribution} {Using} a {Single} {Graphics} {Processing} {Unit}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-021-00543-6},
	doi = {10.1007/s42979-021-00543-6},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Guo, Yu and Gao, Chaohui and Jiang, Dong and Chen, Lijun},
	month = apr,
	year = {2021},
	pages = {125},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\6MVE369M\\Guo et al. - 2021 - 100 Mbps Reconciliation for Quantum Key Distributi.pdf:application/pdf},
}

@article{kumar_exploration_2021,
	title = {An exploration of semi-supervised and language-adversarial transfer learning using hybrid acoustic model for hindi speech recognition},
	issn = {2199-4668, 2199-4676},
	url = {http://link.springer.com/10.1007/s40860-021-00140-7},
	doi = {10.1007/s40860-021-00140-7},
	language = {en},
	urldate = {2021-10-24},
	journal = {Journal of Reliable Intelligent Environments},
	author = {Kumar, Ankit and Aggarwal, Rajesh Kumar},
	month = apr,
	year = {2021},
}

@article{bannikova_reaching_2021,
	title = {Reaching consensus under a deadline},
	volume = {35},
	issn = {1387-2532, 1573-7454},
	url = {https://link.springer.com/10.1007/s10458-020-09490-7},
	doi = {10.1007/s10458-020-09490-7},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Autonomous Agents and Multi-Agent Systems},
	author = {Bannikova, Marina and Dery, Lihi and Obraztsova, Svetlana and Rabinovich, Zinovi and Rosenschein, Jeffrey S.},
	month = apr,
	year = {2021},
	pages = {9},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\M3ZC79DU\\Bannikova et al. - 2021 - Reaching consensus under a deadline.pdf:application/pdf},
}

@article{kretschmer_consistent_2021,
	title = {Consistent change propagation within models},
	volume = {20},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-020-00823-4},
	doi = {10.1007/s10270-020-00823-4},
	abstract = {Abstract
            Developers change models with clear intentions—e.g., for refactoring, defects removal, or evolution. However, in doing so, developers are often unaware of the consequences of their changes. Changes to one part of a model may affect other parts of the same model and/or even other models, possibly created and maintained by other developers. The consequences are incomplete changes and with it inconsistencies within or across models. Extensive works exist on detecting and repairing inconsistencies. However, the literature tends to focus on inconsistencies as errors in need of repairs rather than on incomplete changes in need of further propagation. Many changes are non-trivial and require a series of coordinated model changes. As developers start changing the model, intermittent inconsistencies arise with other parts of the model that developers have not yet changed. These inconsistencies are cues for incomplete change propagation. Resolving these inconsistencies should be done in a manner that is consistent with the original changes. We speak of consistent change propagation. This paper leverages classical inconsistency repair mechanisms to explore the vast search space of change propagation. Our approach not only suggests changes to repair a given inconsistency but also changes to repair inconsistencies caused by the aforementioned repair. In doing so, our approach follows the developer’s intent where subsequent changes may not contradict or backtrack earlier changes. We argue that consistent change propagation is essential for effective model-driven engineering. Our approach and its tool implementation were empirically assessed on 18 case studies from industry, academia, and GitHub to demonstrate its feasibility and scalability. A comparison with two versioned models shows that our approach identifies actual repair sequences that developers had chosen. Furthermore, an experiment involving 22 participants shows that our change propagation approach meets the workflow of how developers handle changes by always computing the sequence of repairs resulting from the change propagation.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Kretschmer, Roland and Khelladi, Djamel Eddine and Lopez-Herrejon, Roberto Erick and Egyed, Alexander},
	month = apr,
	year = {2021},
	pages = {539--555},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\H9NASN64\\Kretschmer et al. - 2021 - Consistent change propagation within models.pdf:application/pdf},
}

@article{massing_clustering_2021,
	title = {Clustering {Using} {Student} t {Mixture} {Copulas}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00503-0},
	doi = {10.1007/s42979-021-00503-0},
	abstract = {Abstract
            
              Tewari et al. (Parametric characterization of multimodal distributions with non-Gaussian modes, pp 286–292, 2011) introduced Gaussian mixture copula models (GMCM) for clustering problems which do not assume normality of the mixture components as Gaussian mixture models (GMM) do. In this paper, we propose Student
              t
              mixture copula models (SMCM) as an extension of GMCMs. GMCMs require weak assumptions, yielding a flexible fit and a powerful cluster tool. Our SMCM extension offers, in a natural way, even more flexibility than the GMCM approach. We discuss estimation issues and compare Expectation-Maximization (EM)-based with numerical simplex optimization methods. We illustrate the SMCM as a tool for image segmentation.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Massing, Till},
	month = apr,
	year = {2021},
	pages = {97},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\LQWDIGJ8\\Massing - 2021 - Clustering Using Student t Mixture Copulas.pdf:application/pdf},
}

@article{prasetya_test_2021,
	title = {Test model coverage analysis under uncertainty: extended version},
	volume = {20},
	issn = {1619-1366, 1619-1374},
	shorttitle = {Test model coverage analysis under uncertainty},
	url = {https://link.springer.com/10.1007/s10270-020-00848-9},
	doi = {10.1007/s10270-020-00848-9},
	abstract = {Abstract
            
              In model-based testing, we may have to deal with a non-deterministic model, e.g. because abstraction was applied, or because the software under test itself is non-deterministic. The same test case may then trigger multiple possible execution paths, depending on some internal decisions made by the software. Consequently, performing precise test analyses, e.g. to calculate the test coverage, are not possible.. This can be mitigated if developers can annotate the model with estimated probabilities for taking each transition. A probabilistic model checking algorithm can subsequently be used to do simple probabilistic coverage analysis. However, in practice developers often want to know what the achieved aggregate coverage is, which unfortunately cannot be re-expressed as a standard model checking problem. This paper presents an extension to allow efficient calculation of probabilistic aggregate coverage, and also of probabilistic aggregate coverage in combination with
              k
              -wise coverage.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Prasetya, I. S. W. B. and Klomp, Rick},
	month = apr,
	year = {2021},
	pages = {383--403},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\8PV2W2IS\\Prasetya and Klomp - 2021 - Test model coverage analysis under uncertainty ex.pdf:application/pdf},
}

@article{coleman_fault_2021,
	title = {Fault {Recovery} {Methods} for {Asynchronous} {Linear} {Solvers}},
	volume = {49},
	issn = {0885-7458, 1573-7640},
	url = {https://link.springer.com/10.1007/s10766-020-00676-w},
	doi = {10.1007/s10766-020-00676-w},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {International Journal of Parallel Programming},
	author = {Coleman, Evan and Jensen, Erik J. and Sosonkina, Masha},
	month = feb,
	year = {2021},
	pages = {51--80},
}

@article{puindi_structural_2021,
	title = {Structural {Models}: {A} {Computational} {Look} for {Signal} {Extraction} and {Forecasting} {Seasonal} {Time} {Series}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Structural {Models}},
	url = {http://link.springer.com/10.1007/s42979-021-00474-2},
	doi = {10.1007/s42979-021-00474-2},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Puindi, António Casimiro},
	month = apr,
	year = {2021},
	pages = {96},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\9K8GDP55\\Puindi - 2021 - Structural Models A Computational Look for Signal.pdf:application/pdf},
}

@article{sharma_enhanced_2021,
	title = {An enhanced {Huffman}-{PSO} based image optimization algorithm for image steganography},
	volume = {22},
	issn = {1389-2576, 1573-7632},
	url = {https://link.springer.com/10.1007/s10710-020-09396-z},
	doi = {10.1007/s10710-020-09396-z},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Genetic Programming and Evolvable Machines},
	author = {Sharma, Neha and Batra, Usha},
	month = jun,
	year = {2021},
	pages = {189--205},
}

@article{roy_efficient_2021,
	title = {An {Efficient} {Sign} {Language} {Recognition} ({SLR}) {System} {Using} {Camshift} {Tracker} and {Hidden} {Markov} {Model} ({HMM})},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-021-00485-z},
	doi = {10.1007/s42979-021-00485-z},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Roy, Partha Pratim and Kumar, Pradeep and Kim, Byung-Gyu},
	month = apr,
	year = {2021},
	pages = {79},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\ZMPD35D8\\Roy et al. - 2021 - An Efficient Sign Language Recognition (SLR) Syste.pdf:application/pdf},
}

@article{gupta_determining_2021,
	title = {Determining {Sequence} of {Image} {Processing} {Technique} ({IPT}) to {Detect} {Adversarial} {Attacks}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00773-8},
	doi = {10.1007/s42979-021-00773-8},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Gupta, Kishor Datta and Dasgupta, Dipankar and Akhtar, Zahid},
	month = sep,
	year = {2021},
	pages = {383},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\BZHXMZDN\\Gupta et al. - 2021 - Determining Sequence of Image Processing Technique.pdf:application/pdf},
}

@article{sus_pure_2021,
	title = {Pure {Functions} in {C}: {A} {Small} {Keyword} for {Automatic} {Parallelization}},
	volume = {49},
	issn = {0885-7458, 1573-7640},
	shorttitle = {Pure {Functions} in {C}},
	url = {https://link.springer.com/10.1007/s10766-020-00660-4},
	doi = {10.1007/s10766-020-00660-4},
	abstract = {Abstract
            
              The need for parallel task execution has been steadily growing in recent years since manufacturers mainly improve processor performance by increasing the number of installed cores instead of scaling the processor’s frequency. To make use of this potential, an essential technique to increase the parallelism of a program is to parallelize loops. Several
              automatic loop nest parallelizers
              have been developed in the past such as PluTo. The main restriction of these tools is that the loops must be statically analyzable which, among other things, disallows function calls within the loops. In this article, we present a seemingly simple extension to the C programming language which marks functions without side-effects. These functions can then basically be ignored when the automatic parallelizer checks the parallelizability of loops. We integrated the approach into the GCC compiler toolchain and evaluated it by running several real-world applications. Our experiments show that the C extension helps to identify additional parallelization opportunities and, thus, to significantly increase the performance of applications.},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {International Journal of Parallel Programming},
	author = {Süß, Tim and Nagel, Lars and Vef, Marc-André and Brinkmann, André and Feld, Dustin and Soddemann, Thomas},
	month = feb,
	year = {2021},
	pages = {1--24},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\RY745PD4\\Süß et al. - 2021 - Pure Functions in C A Small Keyword for Automatic.pdf:application/pdf},
}

@article{karkera_autonomous_2021,
	title = {Autonomous {Bot} {Using} {Machine} {Learning} and {Computer} {Vision}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00640-6},
	doi = {10.1007/s42979-021-00640-6},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Karkera, Thejas and Singh, Chandra},
	month = jul,
	year = {2021},
	pages = {251},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\IPGXEQH9\\Karkera and Singh - 2021 - Autonomous Bot Using Machine Learning and Computer.pdf:application/pdf},
}

@article{beamonte_automated_2021,
	title = {Automated {Generation} of {Model}-{Based} {Constraints} for {Common} {Multi}-core and {Real}-{Time} {Applications} {Using} {Execution} {Tracing}},
	volume = {49},
	issn = {0885-7458, 1573-7640},
	url = {http://link.springer.com/10.1007/s10766-020-00689-5},
	doi = {10.1007/s10766-020-00689-5},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {International Journal of Parallel Programming},
	author = {Beamonte, Raphael and Ezzati-Jivan, Naser and Dagenais, Michel R.},
	month = feb,
	year = {2021},
	pages = {104--134},
}

@article{ramya_smart_2021,
	title = {Smart {Simon} {Bot} with {Public} {Sentiment} {Analysis} for {Novel} {Covid}-19 {Tweets} {Stratification}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00625-5},
	doi = {10.1007/s42979-021-00625-5},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Ramya, B. N. and Shetty, Shyleshwari M. and Amaresh, A. M. and Rakshitha, R.},
	month = may,
	year = {2021},
	pages = {227},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\BKRJ6X8I\\Ramya et al. - 2021 - Smart Simon Bot with Public Sentiment Analysis for.pdf:application/pdf},
}

@article{mohbey_parallel_2021,
	title = {A parallel approach for high utility-based frequent pattern mining in a big data environment},
	volume = {4},
	issn = {2520-8438, 2520-8446},
	url = {https://link.springer.com/10.1007/s42044-021-00083-5},
	doi = {10.1007/s42044-021-00083-5},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {Iran Journal of Computer Science},
	author = {Mohbey, Krishna Kumar and Kumar, Sunil},
	month = sep,
	year = {2021},
	pages = {195--200},
}

@article{sujata_modular_2021,
	title = {Modular {FER}: {A} {Modular} {Facial} {Expression} {Recognition} from {Image} {Sequence} {Based} on {Two} {Dimensional} ({2D}) {Taylor} {Expansion}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Modular {FER}},
	url = {https://link.springer.com/10.1007/s42979-021-00610-y},
	doi = {10.1007/s42979-021-00610-y},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {{Sujata} and Mitra, Suman K.},
	month = may,
	year = {2021},
	pages = {181},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\BYU22IVP\\Sujata and Mitra - 2021 - Modular FER A Modular Facial Expression Recogniti.pdf:application/pdf},
}

@article{fichtenberger_testing_2021,
	title = {Testing stability prop erties in graphical hedonic games},
	volume = {35},
	issn = {1387-2532, 1573-7454},
	url = {https://link.springer.com/10.1007/s10458-021-09505-x},
	doi = {10.1007/s10458-021-09505-x},
	abstract = {Abstract
            
              In hedonic games, players form coalitions based on individual preferences over the group of players they could belong to. Several concepts to describe the stability of coalition structures in a game have been proposed and analysed in the literature. However, prior research focuses on algorithms with time complexity that is at least linear in the input size. In the light of very large games that arise from, e.g., social networks and advertising, we initiate the study of sublinear time property testing algorithms for existence and verification problems under several notions of coalition stability in a model of hedonic games represented by graphs with bounded degree. In graph property testing, one shall decide whether a given input has a property (e.g., a game admits a stable coalition structure) or is far from it, i.e., one has to modify at least an
              
                
                  \$\${\textbackslash}epsilon\$\$
                  
                    ϵ
                  
                
              
              -fraction of the input (e.g., the game’s preferences) to make it have the property. In particular, we consider verification of perfection, individual rationality, Nash stability, (contractual) individual stability, and core stability. While there is always a Nash-stable coalition structure (which also implies individually stable coalitions), we show that the existence of a perfect coalition structure is not tautological but can be tested. All our testers have one-sided error and time complexity that is independent of the input size.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Autonomous Agents and Multi-Agent Systems},
	author = {Fichtenberger, Hendrik and Rey, Anja},
	month = oct,
	year = {2021},
	pages = {26},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\PPCC2N5P\\Fichtenberger and Rey - 2021 - Testing stability prop erties in graphical hedonic.pdf:application/pdf},
}

@article{kuznetsov_full_2021,
	title = {Full {Non}-{Binary} {Constant}-{Weight} {Codes}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00739-w},
	doi = {10.1007/s42979-021-00739-w},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Kuznetsov, Alexandr and Kryvinska, Natalia and Kiian, Anastasiia and Smirnov, Oleksii and Kuznetsova, Kateryna},
	month = jul,
	year = {2021},
	pages = {337},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\GQAHMIIT\\Kuznetsov et al. - 2021 - Full Non-Binary Constant-Weight Codes.pdf:application/pdf},
}

@article{somogyi_playground_2021,
	title = {Playground for multi-level modeling constructs},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-021-00900-2},
	doi = {10.1007/s10270-021-00900-2},
	abstract = {Abstract
            In recent years, multi-level modeling has become more and more popular. It is mainly due to the fact that multi-level modeling aims to reduce or even totally eliminate any accidental complexity inadvertently created as by-product in traditional model design. Moreover, besides reducing model complexity, multi-level modeling also improves on general comprehension of models. The key enablers of multi-level modeling are the concepts of clabjects and deep instantiation. The latter is often governed by the potency notion, of which many different interpretations and variations emerged over the years. However, there exist also some approaches that disregard the potency notion. Thus, multi-level modeling approaches tend to take advantage of different theoretical and practical backgrounds. In this paper, we propose a unifying framework, the Multi-Level Modeling Playground (MLMP), which is a validating modeling environment for multi-level modeling research. The MLMP environment is based on our multi-layer modeling framework (the Dynamic Multi-Layer Algebra), which provides useful mechanisms to validate different multi-level modeling constructs. Since beyond the structure also the well-formedness rules of the modeling constructs can be specified, our proposed MLMP environment delivers several practical benefits: i) well-formedness is always verified, ii) multi-level constructs can be experimented with independently of any concrete tool chains, and iii) relationships (i.e., correlations or exclusions) between different multi-level constructs can be easily investigated in practice. Also, the capability of the environment is demonstrated via complete examples inspired by state-of-the-art research literature.},
	language = {en},
	urldate = {2021-10-24},
	journal = {Software and Systems Modeling},
	author = {Somogyi, Ferenc A. and Mezei, Gergely and Theisz, Zoltán and Bácsi, Sándor and Palatinszky, Dániel},
	month = aug,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\6CM3PAWT\\Somogyi et al. - 2021 - Playground for multi-level modeling constructs.pdf:application/pdf},
}

@article{nachazel_fuzzy_2021,
	title = {Fuzzy cognitive maps for decision-making in dynamic environments},
	volume = {22},
	issn = {1389-2576, 1573-7632},
	url = {https://link.springer.com/10.1007/s10710-020-09393-2},
	doi = {10.1007/s10710-020-09393-2},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Genetic Programming and Evolvable Machines},
	author = {Nachazel, Tomas},
	month = mar,
	year = {2021},
	pages = {101--135},
}

@article{lartigue_mixture_2021,
	title = {Mixture of {Conditional} {Gaussian} {Graphical} {Models} for {Unlabelled} {Heterogeneous} {Populations} in the {Presence} of {Co}-factors},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00865-5},
	doi = {10.1007/s42979-021-00865-5},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Lartigue, Thomas and Durrleman, Stanley and Allassonnière, Stéphanie},
	month = nov,
	year = {2021},
	pages = {466},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\KD7DEKWM\\Lartigue et al. - 2021 - Mixture of Conditional Gaussian Graphical Models f.pdf:application/pdf},
}

@article{singh_iot-based_2021,
	title = {{IoT}-based collection vendor machine ({CVM}) for {E}-waste management},
	volume = {7},
	issn = {2199-4668, 2199-4676},
	url = {http://link.springer.com/10.1007/s40860-020-00124-z},
	doi = {10.1007/s40860-020-00124-z},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Journal of Reliable Intelligent Environments},
	author = {Singh, Kuldeep and Arora, Gayatri and Singh, Pushpa and Gupta, Ankit},
	month = mar,
	year = {2021},
	pages = {35--47},
}

@article{hegade_po-miner_2021,
	title = {Po-{Miner}: {A} {Web} {Mining} {Poem} {Generator} and its {Security} {Model}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Po-{Miner}},
	url = {https://link.springer.com/10.1007/s42979-021-00802-6},
	doi = {10.1007/s42979-021-00802-6},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Hegade, Prakash and Joshi, Rajaram M. and Hegde, Vibha G. and Kale, Tejaswini and Basavaraddi, Srushti},
	month = sep,
	year = {2021},
	pages = {401},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\PJIWIX4P\\Hegade et al. - 2021 - Po-Miner A Web Mining Poem Generator and its Secu.pdf:application/pdf},
}

@article{jakobi_descriptional_2021,
	title = {The descriptional power of queue automata of constant length},
	volume = {58},
	issn = {0001-5903, 1432-0525},
	url = {https://link.springer.com/10.1007/s00236-021-00398-7},
	doi = {10.1007/s00236-021-00398-7},
	abstract = {Abstract
            
              We consider the notion of a
              constant length queue automaton
              —i.e., a traditional queue automaton with a built-in constant limit on the length of its queue—as a formalism for representing regular languages. We show that the descriptional power of constant length queue automata greatly outperforms that of traditional finite state automata, of constant height pushdown automata, and of straight line programs for regular expressions, by providing optimal exponential and double-exponential size gaps. Moreover, we prove that constant height pushdown automata can be simulated by constant length queue automata paying only by a linear size increase, and that removing nondeterminism in constant length queue automata requires an optimal exponential size blow-up, against the optimal double-exponential cost for determinizing constant height pushdown automata. Finally, we investigate the size cost of implementing Boolean language operations on deterministic and nondeterministic constant length queue automata.},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {Acta Informatica},
	author = {Jakobi, Sebastian and Meckel, Katja and Mereghetti, Carlo and Palano, Beatrice},
	month = aug,
	year = {2021},
	pages = {335--356},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\LXEUCP5F\\Jakobi et al. - 2021 - The descriptional power of queue automata of const.pdf:application/pdf},
}

@article{kim_automatic_2021,
	title = {Automatic calibration of dynamic and heterogeneous parameters in agent-based models},
	volume = {35},
	issn = {1387-2532, 1573-7454},
	url = {https://link.springer.com/10.1007/s10458-021-09528-4},
	doi = {10.1007/s10458-021-09528-4},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Autonomous Agents and Multi-Agent Systems},
	author = {Kim, Dongjun and Yun, Tae-Sub and Moon, Il-Chul and Bae, Jang Won},
	month = oct,
	year = {2021},
	pages = {46},
}

@article{humm_machine_2021,
	title = {Machine intelligence today: applications, methodology, and technology: {Selected} results of the 1st online {Dagstuhl} workshop on applied machine intelligence},
	volume = {44},
	issn = {0170-6012, 1432-122X},
	shorttitle = {Machine intelligence today},
	url = {https://link.springer.com/10.1007/s00287-021-01343-1},
	doi = {10.1007/s00287-021-01343-1},
	abstract = {Abstract
            Machine intelligence, a.k.a. artificial intelligence (AI) is one of the most prominent and relevant technologies today. It is in everyday use in the form of AI applications and has a strong impact on society. This article presents selected results of the 2020 Dagstuhl workshop on applied machine intelligence. Selected AI applications in various domains, namely culture, education, and industrial manufacturing are presented. Current trends, best practices, and recommendations regarding AI methodology and technology are explained. The focus is on ontologies (knowledge-based AI) and machine learning.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Informatik Spektrum},
	author = {Humm, Bernhard G. and Bense, Hermann and Fuchs, Michael and Gernhardt, Benjamin and Hemmje, Matthias and Hoppe, Thomas and Kaupp, Lukas and Lothary, Sebastian and Schäfer, Kai-Uwe and Thull, Bernhard and Vogel, Tobias and Wenning, Rigo},
	month = apr,
	year = {2021},
	pages = {104--114},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\MVVACDCS\\Humm et al. - 2021 - Machine intelligence today applications, methodol.pdf:application/pdf},
}

@article{ravikiran_pyramid_2021,
	title = {Pyramid based {Progressive} {Transmission} {System} with {Hybrid} {Compression} {Scheme} for {Medical} {Images}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00534-7},
	doi = {10.1007/s42979-021-00534-7},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Ravikiran, H. K. and Jayanth, J.},
	month = may,
	year = {2021},
	pages = {155},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\V6AZJSPA\\Ravikiran and Jayanth - 2021 - Pyramid based Progressive Transmission System with.pdf:application/pdf},
}

@article{yadav_hybrid_2021,
	title = {Hybrid {Machine} {Learning} {Classifier} and {Ensemble} {Techniques} to {Detect} {Parkinson}’s {Disease} {Patients}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00587-8},
	doi = {10.1007/s42979-021-00587-8},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Yadav, Sunil and Singh, Munindra Kumar},
	month = may,
	year = {2021},
	pages = {189},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\EBNS2JSN\\Yadav and Singh - 2021 - Hybrid Machine Learning Classifier and Ensemble Te.pdf:application/pdf},
}

@article{zegklitz_benchmarking_2021,
	title = {Benchmarking state-of-the-art symbolic regression algorithms},
	volume = {22},
	issn = {1389-2576, 1573-7632},
	url = {http://link.springer.com/10.1007/s10710-020-09387-0},
	doi = {10.1007/s10710-020-09387-0},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Genetic Programming and Evolvable Machines},
	author = {Žegklitz, Jan and Pošík, Petr},
	month = mar,
	year = {2021},
	pages = {5--33},
}

@article{shiravale_text_2021,
	title = {Text {Region} {Identification} in {Indian} {Street} {Scene} {Images} {Using} {Stroke} {Width} {Transform} and {Support} {Vector} {Machine}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00745-y},
	doi = {10.1007/s42979-021-00745-y},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Shiravale, S. S. and Sannakki, S. S. and Jayadevan, R.},
	month = sep,
	year = {2021},
	pages = {357},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\SMNYQFHM\\Shiravale et al. - 2021 - Text Region Identification in Indian Street Scene .pdf:application/pdf},
}

@article{schmitt_evostencils_2021,
	title = {{EvoStencils}: a grammar-based genetic programming approach for constructing efficient geometric multigrid methods},
	issn = {1389-2576, 1573-7632},
	shorttitle = {{EvoStencils}},
	url = {https://link.springer.com/10.1007/s10710-021-09412-w},
	doi = {10.1007/s10710-021-09412-w},
	abstract = {Abstract
            For many systems of linear equations that arise from the discretization of partial differential equations, the construction of an efficient multigrid solver is challenging. Here we present EvoStencils, a novel approach for optimizing geometric multigrid methods with grammar-guided genetic programming, a stochastic program optimization technique inspired by the principle of natural evolution. A multigrid solver is represented as a tree of mathematical expressions that we generate based on a formal grammar. The quality of each solver is evaluated in terms of convergence and compute performance by automatically generating an optimized implementation using code generation that is then executed on the target platform to measure all relevant performance metrics. Based on this, a multi-objective optimization is performed using a non-dominated sorting-based selection. To evaluate a large number of solvers in parallel, they are distributed to multiple compute nodes. We demonstrate the effectiveness of our implementation by constructing geometric multigrid solvers that are able to outperform hand-crafted methods for Poisson’s equation and a linear elastic boundary value problem with up to 16 million unknowns on multi-core processors with Ivy Bridge and Broadwell microarchitecture.},
	language = {en},
	urldate = {2021-10-24},
	journal = {Genetic Programming and Evolvable Machines},
	author = {Schmitt, Jonas and Kuckuk, Sebastian and Köstler, Harald},
	month = sep,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\WQTCLQPN\\Schmitt et al. - 2021 - EvoStencils a grammar-based genetic programming a.pdf:application/pdf},
}

@article{tkach_towards_2021,
	title = {Towards addressing dynamic multi-agent task allocation in law enforcement},
	volume = {35},
	issn = {1387-2532, 1573-7454},
	url = {https://link.springer.com/10.1007/s10458-021-09494-x},
	doi = {10.1007/s10458-021-09494-x},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Autonomous Agents and Multi-Agent Systems},
	author = {Tkach, Itshak and Amador, Sofia},
	month = apr,
	year = {2021},
	pages = {11},
}

@article{coulibaly_explainability_2021,
	title = {Explainability with {Association} {Rule} {Learning} for {Weather} {Forecast}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-021-00525-8},
	doi = {10.1007/s42979-021-00525-8},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Coulibaly, Lassana and Kamsu-Foguem, Bernard and Tangara, Fana},
	month = apr,
	year = {2021},
	pages = {116},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\BTIW8TYN\\Coulibaly et al. - 2021 - Explainability with Association Rule Learning for .pdf:application/pdf},
}

@article{devezas_review_2021,
	title = {A {Review} of {Graph}-{Based} {Models} for {Entity}-{Oriented} {Search}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00828-w},
	doi = {10.1007/s42979-021-00828-w},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Devezas, José and Nunes, Sérgio},
	month = nov,
	year = {2021},
	pages = {437},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\MRA94FD9\\Devezas and Nunes - 2021 - A Review of Graph-Based Models for Entity-Oriented.pdf:application/pdf},
}

@article{hornung_diversity_2022,
	title = {Diversity {Forests}: {Using} {Split} {Sampling} to {Enable} {Innovative} {Complex} {Split} {Procedures} in {Random} {Forests}},
	volume = {3},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Diversity {Forests}},
	url = {https://link.springer.com/10.1007/s42979-021-00920-1},
	doi = {10.1007/s42979-021-00920-1},
	abstract = {Abstract
            
              The diversity forest algorithm is an alternative candidate node split sampling scheme that makes innovative complex split procedures in random forests possible. While conventional univariable, binary splitting suffices for obtaining strong predictive performance, new complex split procedures can help tackling practically important issues. For example, interactions between features can be exploited effectively by bivariable splitting. With diversity forests, each split is selected from a candidate split set that is sampled in the following way: for
              
                
                  \$\$l = 1, {\textbackslash}dots , \{nsplits\}\$\$
                  
                    
                      l
                      =
                      1
                      ,
                      ⋯
                      ,
                      
                        nsplits
                      
                    
                  
                
              
              : (1) sample one split problem; (2) sample a single or few splits from the split problem sampled in (1) and add this or these splits to the candidate split set. The split problems are specifically structured collections of splits that depend on the respective split procedure considered. This sampling scheme makes innovative complex split procedures computationally tangible while avoiding overfitting. Important general properties of the diversity forest algorithm are evaluated empirically using univariable, binary splitting. Based on 220 data sets with binary outcomes, diversity forests are compared with conventional random forests and random forests using extremely randomized trees. It is seen that the split sampling scheme of diversity forests does not impair the predictive performance of random forests and that the performance is quite robust with regard to the specified
              nsplits
              value. The recently developed interaction forests are the first diversity forest method that uses a complex split procedure. Interaction forests allow modeling and detecting interactions between features effectively. Further potential complex split procedures are discussed as an outlook.},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Hornung, Roman},
	month = jan,
	year = {2022},
	pages = {1},
}

@article{kamaruddin_egrnn_2021,
	title = {{EGRNN}++ and {PNN}++ : {Parallel} and {Distributed} {Neural} {Networks} for {Big} {Data} {Regression} and {Classification}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {{EGRNN}++ and {PNN}++},
	url = {http://link.springer.com/10.1007/s42979-021-00504-z},
	doi = {10.1007/s42979-021-00504-z},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Kamaruddin, Sk and Ravi, Vadlamani},
	month = apr,
	year = {2021},
	pages = {109},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\JUZ86TVM\\Kamaruddin and Ravi - 2021 - EGRNN++ and PNN++  Parallel and Distributed Neura.pdf:application/pdf},
}

@article{salami_ce-ske_2021,
	title = {{CE}-{SKE}: cost-effective secure key exchange scheme in {Fog} {Federation}},
	issn = {2520-8438, 2520-8446},
	shorttitle = {{CE}-{SKE}},
	url = {http://link.springer.com/10.1007/s42044-021-00086-2},
	doi = {10.1007/s42044-021-00086-2},
	language = {en},
	urldate = {2021-10-24},
	journal = {Iran Journal of Computer Science},
	author = {salami, Yashar and Ebazadeh, Yaser and Khajehvand, Vahid},
	month = apr,
	year = {2021},
}

@article{mouawad_robust_2021,
	title = {Robust {Detection} of {COVID}-19 in {Cough} {Sounds}: {Using} {Recurrence} {Dynamics} and {Variable} {Markov} {Model}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Robust {Detection} of {COVID}-19 in {Cough} {Sounds}},
	url = {http://link.springer.com/10.1007/s42979-020-00422-6},
	doi = {10.1007/s42979-020-00422-6},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Mouawad, Pauline and Dubnov, Tammuz and Dubnov, Shlomo},
	month = feb,
	year = {2021},
	pages = {34},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\XEB558YP\\Mouawad et al. - 2021 - Robust Detection of COVID-19 in Cough Sounds Usin.pdf:application/pdf},
}

@article{hallappanavar_prediction_2021,
	title = {Prediction of quality of service of fog nodes for service recommendation in fog computing based on trustworthiness of users},
	issn = {2199-4668, 2199-4676},
	url = {https://link.springer.com/10.1007/s40860-021-00149-y},
	doi = {10.1007/s40860-021-00149-y},
	language = {en},
	urldate = {2021-10-24},
	journal = {Journal of Reliable Intelligent Environments},
	author = {Hallappanavar, Vijay L. and Birje, Mahantesh N.},
	month = jul,
	year = {2021},
}

@article{patel_energy_2021,
	title = {Energy {Consumption} and {Price} {Forecasting} {Through} {Data}-{Driven} {Analysis} {Methods}: {A} {Review}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Energy {Consumption} and {Price} {Forecasting} {Through} {Data}-{Driven} {Analysis} {Methods}},
	url = {https://link.springer.com/10.1007/s42979-021-00698-2},
	doi = {10.1007/s42979-021-00698-2},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Patel, Harsh and Shah, Manan},
	month = jul,
	year = {2021},
	pages = {315},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\FMILQTV9\\Patel and Shah - 2021 - Energy Consumption and Price Forecasting Through D.pdf:application/pdf},
}

@article{kim_min-max_2021,
	title = {Min-max exclusive virtual machine placement in cloud computing for scientific data environment},
	volume = {10},
	issn = {2192-113X},
	url = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-020-00221-7},
	doi = {10.1186/s13677-020-00221-7},
	abstract = {Abstract
            In cloud computing, there is a trade-off between SLAV (Service Level Agreement Violation) and system operating cost. Violation rates can be decreased when using more hosts, which increases system operating costs. Therefore, to manage the resources of those hosts efficiently, finding an optimal balancing point between SLAV and system operating cost is critical. In addition, a cost-effective load balancing approach based on the proper migration of VMs (Virtual Machines) in the hosts is needed. For this purpose, some indicators are also necessary to identify the abnormal hosts that violate SLA. One of the primary indicators, CPU usage, is closely related to energy consumption and can be used to reduce SLAV and energy consumption effectively. Our approach focuses on the special environment such as the cloud environment for the scientific data. Here, most of the jobs are data-intensive and a large amount of disk operations is required. Owing to disk operations are likely to affect the performance degradation of the host, disk bandwidth usage as well as CPU usage should be also considered. In this study, we propose the Min-Max Exclusive VM Placement (MMEVMP) strategy to minimize both SLAV and energy consumption. The current working system called KIAF (KISTI Analysis Facility), the CERN ALICE experimental cloud environment for scientific data analysis, is used to analyze the characteristics of data-intensive jobs within it. In this experiment, a lightweight version of the CloudSim simulator was developed and the results were compared to the other methods of different policies. Our evaluation showed that our proposed strategy can reduce SLA violation reasonably as well as the system operating cost-effectively.},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Journal of Cloud Computing},
	author = {Kim, Moon-Hyun and Lee, Jun-Yeong and Raza Shah, Syed Asif and Kim, Tae-Hyung and Noh, Seo-Young},
	month = dec,
	year = {2021},
	pages = {2},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\76AT9EMJ\\Kim et al. - 2021 - Min-max exclusive virtual machine placement in clo.pdf:application/pdf},
}

@article{jagdhuber_implications_2021,
	title = {Implications on {Feature} {Detection} {When} {Using} the {Benefit}–{Cost} {Ratio}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00705-6},
	doi = {10.1007/s42979-021-00705-6},
	abstract = {Abstract
            In many practical machine learning applications, there are two objectives: one is to maximize predictive accuracy and the other is to minimize costs of the resulting model. These costs of individual features may be financial costs, but can also refer to other aspects, for example, evaluation time. Feature selection addresses both objectives, as it reduces the number of features and can improve the generalization ability of the model. If costs differ between features, the feature selection needs to trade-off the individual benefit and cost of each feature. A popular trade-off choice is the ratio of both, the benefit–cost ratio (BCR). In this paper, we analyze implications of using this measure with special focus to the ability to distinguish relevant features from noise. We perform simulation studies for different cost and data settings and obtain detection rates of relevant features and empirical distributions of the trade-off ratio. Our simulation studies exposed a clear impact of the cost setting on the detection rate. In situations with large cost differences and small effect sizes, the BCR missed relevant features and preferred cheap noise features. We conclude that a trade-off between predictive performance and costs without a controlling hyperparameter can easily overemphasize very cheap noise features. While the simple benefit–cost ratio offers an easy solution to incorporate costs, it is important to be aware of its risks. Avoiding costs close to 0, rescaling large cost differences, or using a hyperparameter trade-off are ways to counteract the adverse effects exposed in this paper.},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Jagdhuber, Rudolf and Rahnenführer, Jörg},
	month = jul,
	year = {2021},
	pages = {316},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\YANJ3K6M\\Jagdhuber and Rahnenführer - 2021 - Implications on Feature Detection When Using the B.pdf:application/pdf},
}

@article{verma_breast_2021,
	title = {Breast {Cancer} {Management} {System} {Using} {Decision} {Tree} and {Neural} {Network}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00644-2},
	doi = {10.1007/s42979-021-00644-2},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Verma, Amrit Kumar and Chakraborty, Manomita and Biswas, Saroj Kr.},
	month = may,
	year = {2021},
	pages = {234},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\ES92JFZF\\Verma et al. - 2021 - Breast Cancer Management System Using Decision Tre.pdf:application/pdf},
}

@article{bortolussi_neural_2021,
	title = {Neural predictive monitoring and a comparison of frequentist and {Bayesian} approaches},
	volume = {23},
	issn = {1433-2779, 1433-2787},
	url = {https://link.springer.com/10.1007/s10009-021-00623-1},
	doi = {10.1007/s10009-021-00623-1},
	abstract = {Abstract
            
              Neural state classification (NSC) is a recently proposed method for runtime predictive monitoring of hybrid automata (HA) using deep neural networks (DNNs). NSC trains a DNN as an approximate
              reachability predictor
              that labels an HA state
              x
              as
              positive
              if an unsafe state is reachable from
              x
              within a given time bound, and labels
              x
              as
              negative
              otherwise. NSC predictors have very high accuracy, yet are prone to prediction errors that can negatively impact reliability. To overcome this limitation, we present
              neural predictive monitoring
              (NPM), a technique that complements NSC predictions with estimates of the predictive uncertainty. These measures yield principled criteria for the rejection of predictions likely to be incorrect, without knowing the true reachability values. We also present an active learning method that significantly reduces the NSC predictor’s error rate and the percentage of rejected predictions. We develop two versions of NPM based, respectively, on the use of frequentist and Bayesian techniques to learn the predictor and the rejection rule. Both versions are highly efficient, with computation times on the order of milliseconds, and effective, managing in our experimental evaluation to successfully reject almost all incorrect predictions. In our experiments on a benchmark suite of six hybrid systems, we found that the frequentist approach consistently outperforms the Bayesian one. We also observed that the Bayesian approach is less practical, requiring a careful and problem-specific choice of hyperparameters.},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {International Journal on Software Tools for Technology Transfer},
	author = {Bortolussi, Luca and Cairoli, Francesca and Paoletti, Nicola and Smolka, Scott A. and Stoller, Scott D.},
	month = aug,
	year = {2021},
	pages = {615--640},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\7ABIB6SW\\Bortolussi et al. - 2021 - Neural predictive monitoring and a comparison of f.pdf:application/pdf},
}

@article{benifa_modified_2021,
	title = {Modified {Chebyshev} polynomial-based access control mechanism for secured data access in cloud computing environment},
	volume = {15},
	issn = {1863-2386, 1863-2394},
	url = {https://link.springer.com/10.1007/s11761-020-00307-9},
	doi = {10.1007/s11761-020-00307-9},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {Service Oriented Computing and Applications},
	author = {Benifa, J. V. Bibal and Mini, G. Venifa},
	month = sep,
	year = {2021},
	pages = {187--203},
}

@article{dizdarevic_advanced_2021,
	title = {Advanced consistency management of highly-distributed transactional database in a hybrid cloud environment using novel {R}-{TBC}/{RTA} approach},
	volume = {10},
	issn = {2192-113X},
	url = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-021-00230-0},
	doi = {10.1186/s13677-021-00230-0},
	abstract = {Abstract
            This paper examines possibilities for improving the existing strategies of consistency management for highly-distributed transactional database in a hybrid cloud environment. With a detailed analysis of the existing consistency models for distributed database and standard strategies including Classic, Quorum and Tree Based Consistency (TBC), it is concluded that an improved advanced model of so-called visible adaptive consistency needs to be applied in a highly-distributed cloud environment, as necessary and sufficient degree of synchronization of all replicas. Along with the proposed model, research and development of an advanced novel strategy for consistency management Rose TBC (R-TBC) approach has been conducted, by improving standard TBC approach. Regarding implementation, a specific agglomerative Rose Tree Algorithm (RTA) has been developed, based on Bayesian hierarchical clustering and Graph Partitioning Algorithm - Multidimensional Data Clustering (GPA-MDC) intelligent partitioning of transactional Cloud Database Management System (CDBMS). The final result is constructed R-TBC model that changes in accordance with dynamic changes of entire heterogeneous CDBMS environment.},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Journal of Cloud Computing},
	author = {Dizdarevic, Jasmina and Avdagic, Zikrija and Orucevic, Fahrudin and Omanovic, Samir},
	month = dec,
	year = {2021},
	pages = {27},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\T9MQ73XU\\Dizdarevic et al. - 2021 - Advanced consistency management of highly-distribu.pdf:application/pdf},
}

@article{kundu_change_2021,
	title = {Change {Detection} and {Patch} {Analysis} of {Sundarban} {Forest} {During} 1975–2018 {Using} {Remote} {Sensing} and {GIS} {Data}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00749-8},
	doi = {10.1007/s42979-021-00749-8},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Kundu, Krishan and Halder, Prasun and Mandal, Jyotsna Kumar},
	month = sep,
	year = {2021},
	pages = {364},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\X4LYG9TC\\Kundu et al. - 2021 - Change Detection and Patch Analysis of Sundarban F.pdf:application/pdf},
}

@article{segal_evaluating_2021,
	title = {Evaluating the {Clinical} {Realism} of {Synthetic} {Chest} {X}-{Rays} {Generated} {Using} {Progressively} {Growing} {GANs}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00720-7},
	doi = {10.1007/s42979-021-00720-7},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Segal, Bradley and Rubin, David M. and Rubin, Grace and Pantanowitz, Adam},
	month = jul,
	year = {2021},
	pages = {321},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\2M3TTYC3\\Segal et al. - 2021 - Evaluating the Clinical Realism of Synthetic Chest.pdf:application/pdf},
}

@article{badr_security_2021,
	title = {Security and privacy in the {Internet} of {Things}: threats and challenges},
	issn = {1863-2386, 1863-2394},
	shorttitle = {Security and privacy in the {Internet} of {Things}},
	url = {https://link.springer.com/10.1007/s11761-021-00327-z},
	doi = {10.1007/s11761-021-00327-z},
	language = {en},
	urldate = {2021-10-24},
	journal = {Service Oriented Computing and Applications},
	author = {Badr, Youakim and Zhu, Xiaoyang and Alraja, Mansour Naser},
	month = oct,
	year = {2021},
}

@article{benhammada_agent-based_2021,
	title = {An {Agent}-{Based} {Model} to {Study} {Informational} {Cascades} in {Financial} {Markets}},
	volume = {39},
	issn = {0288-3635, 1882-7055},
	url = {https://link.springer.com/10.1007/s00354-021-00133-3},
	doi = {10.1007/s00354-021-00133-3},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {New Generation Computing},
	author = {Benhammada, Sadek and Amblard, Frédéric and Chikhi, Salim},
	month = aug,
	year = {2021},
	pages = {409--436},
}

@article{sengupta_ljst_2021,
	title = {{LJST}: {A} {Semi}-supervised {Joint} {Sentiment}-{Topic} {Model} for {Short} {Texts}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {{LJST}},
	url = {https://link.springer.com/10.1007/s42979-021-00649-x},
	doi = {10.1007/s42979-021-00649-x},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Sengupta, Ayan and Roy, Suman and Ranjan, Gaurav},
	month = jul,
	year = {2021},
	pages = {256},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\FPXUWJWB\\Sengupta et al. - 2021 - LJST A Semi-supervised Joint Sentiment-Topic Mode.pdf:application/pdf},
}

@article{giani_quantum_2021,
	title = {Quantum {Computing} {Opportunities} in {Renewable} {Energy}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00786-3},
	doi = {10.1007/s42979-021-00786-3},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Giani, Annarita and Eldredge, Zachary},
	month = sep,
	year = {2021},
	pages = {393},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\TFFDM4AB\\Giani and Eldredge - 2021 - Quantum Computing Opportunities in Renewable Energ.pdf:application/pdf},
}

@article{sultana_deep_2021,
	title = {Deep {Regularized} {Discriminative} {Network}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00647-z},
	doi = {10.1007/s42979-021-00647-z},
	abstract = {Abstract
            Traditional linear discriminant analysis (LDA) approach discards the eigenvalues which are very small or equivalent to zero, but quite often eigenvectors corresponding to zero eigenvalues are the important dimensions for discriminant analysis. We propose an objective function which would utilize both the principal as well as nullspace eigenvalues and simultaneously inherit the class separability information onto its latent space representation. The idea is to build a convolutional neural network (CNN) and perform the regularized discriminant analysis on top of this and train it in an end-to-end fashion. The backpropagation is performed with a suitable optimizer to update the parameters so that the whole CNN approach minimizes the within class variance and maximizes the total class variance information suitable for both multi-class and binary class classification problems. Experimental results on four databases for multiple computer vision classification tasks show the efficacy of our proposed approach as compared to other popular methods.},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Sultana, Nazneen N. and Mandal, Bappaditya and Puhan, N. B.},
	month = jul,
	year = {2021},
	pages = {235},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\GEAZQKEN\\Sultana et al. - 2021 - Deep Regularized Discriminative Network.pdf:application/pdf},
}

@article{wang_imputation_2021,
	title = {Imputation {Method} for {Fetal} {Heart} {Rate} {Signal} {Evaluation} {Based} on {Optimal} {Transport} {Theory}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00805-3},
	doi = {10.1007/s42979-021-00805-3},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Wang, Chuan and Long, Shun and Zeng, Rongdan and Lu, Yaosheng},
	month = nov,
	year = {2021},
	pages = {454},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\S44E2ZNI\\Wang et al. - 2021 - Imputation Method for Fetal Heart Rate Signal Eval.pdf:application/pdf},
}

@article{verma_implicit_2021,
	title = {Implicit {Aspect}-{Based} {Opinion} {Mining} and {Analysis} of {Airline} {Industry} {Based} on {User}-{Generated} {Reviews}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00669-7},
	doi = {10.1007/s42979-021-00669-7},
	abstract = {Abstract
            
              Mining opinions from reviews has been a field of ever-growing research. These include mining opinions on document level, sentence level and even aspect level. While explicitly mentioned aspects from user-generated texts have been widely researched, very little work has been done in gathering opinions on aspects that are
              implied
              and not explicitly mentioned. Previous work to identify implicit aspects and opinion was limited to syntactic-based classifiers or other machine learning methods trained on restaurant dataset. In this paper, the present is a novel study for extracting and analysing implicit aspects and opinions from airline reviews in English. Through this study, an airline domain-specific aspect-based annotated corpus, and a novel two-way technique that first augments pre-trained word embeddings for sequential with stochastic gradient descent optimized
              conditional random fields (CRF)
              and second using machine and ensemble learning algorithms to classify the implied aspects is devised and developed. This two-way technique resolves double-implicit problem, most encountered by previous work in implicit aspect and opinion text mining. Experiments with a hold-out test set on the first level i.e., entity extraction by optimized CRF yield a result of ROC-AUC score of 96\% and
              F
              1
              score of 94\% outperforming few baseline systems. Further experiments with a range of machine and ensemble learning classifier algorithms to classify implied aspects and opinions for each entity yields a result of ROC-AUC score ranging from 71 to 94.8\% for all implied entities. This two-level technique for implicit aspect extraction and classification outperforms many baseline systems in this domain.},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Verma, Kanishk and Davis, Brian},
	month = jul,
	year = {2021},
	pages = {286},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\TIMU35XB\\Verma and Davis - 2021 - Implicit Aspect-Based Opinion Mining and Analysis .pdf:application/pdf},
}

@article{song_visibility_2021,
	title = {Visibility estimation via deep label distribution learning in cloud environment},
	volume = {10},
	issn = {2192-113X},
	url = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-021-00261-7},
	doi = {10.1186/s13677-021-00261-7},
	abstract = {Abstract
            The visibility estimation of the environment has great research and application value in the fields of production. To estimate the visibility, we can utilize the camera to obtain some images as evidence. However, the camera only solves the image acquisition problem, and the analysis of image visibility requires strong computational power. To realize effective and efficient visibility estimation, we employ the cloud computing technique to realize high-through image analysis. Our method combines cloud computing and image-based visibility estimation into a powerful and efficient monitoring framework. To train an accurate model for visibility estimation, it is important to obtain the precise ground truth for every image. However, the ground-truth visibility is difficult to be labeled due to its high ambiguity. To solve this problem, we associate a label distribution to each image. The label distribution contains all the possible visibilities with their probabilities. To learn from such annotation, we employ a CNN-RNN model for visibility-aware feature extraction and a conditional probability neural network for distribution prediction. The estimation result can be improved by fusing the predicting results of multiple images from different views. Our experiment shows that labeling the image with visibility distribution can boost the learning performance, and our method can obtain the visibility from the image efficiently.},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Journal of Cloud Computing},
	author = {Song, Mofei and Han, Xu and Liu, Xiao Fan and Li, Qian},
	month = dec,
	year = {2021},
	pages = {46},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\B3BZI6CE\\Song et al. - 2021 - Visibility estimation via deep label distribution .pdf:application/pdf},
}

@article{kutrib_finite_2021,
	title = {Finite automata with undirected state graphs},
	issn = {0001-5903, 1432-0525},
	url = {https://link.springer.com/10.1007/s00236-021-00402-0},
	doi = {10.1007/s00236-021-00402-0},
	abstract = {Abstract
            
              We investigate finite automata whose state graphs are undirected. This means that for any transition from state
              p
              to
              q
              consuming some letter
              a
              from the input there exists a symmetric transition from state
              q
              to
              p
              consuming a letter
              a
              as well. So, the corresponding language families are subregular, and in particular in the deterministic case, subreversible. In detail, we study the operational descriptional complexity of deterministic and nondeterministic undirected finite automata. To this end, the different types of automata on alphabets with few letters are characterized. Then, the operational state complexity of the Boolean operations as well as the operations concatenation and iteration is investigated, where tight upper and lower bounds are derived for unary as well as arbitrary alphabets under the condition that the corresponding language classes are closed under the operation considered.},
	language = {en},
	urldate = {2021-10-24},
	journal = {Acta Informatica},
	author = {Kutrib, Martin and Malcher, Andreas and Schneider, Christian},
	month = may,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\CSQCTDX9\\Kutrib et al. - 2021 - Finite automata with undirected state graphs.pdf:application/pdf},
}

@article{loginov_stock_2021,
	title = {Stock selection heuristics for performing frequent intraday trading with genetic programming},
	volume = {22},
	issn = {1389-2576, 1573-7632},
	url = {https://link.springer.com/10.1007/s10710-020-09390-5},
	doi = {10.1007/s10710-020-09390-5},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Genetic Programming and Evolvable Machines},
	author = {Loginov, Alexander and Heywood, Malcolm and Wilson, Garnett},
	month = mar,
	year = {2021},
	pages = {35--72},
}

@article{raveendran_behavior_2021,
	title = {Behavior science led technology for financial wellness},
	volume = {9},
	issn = {2277-9078, 2277-9086},
	url = {https://link.springer.com/10.1007/s40012-021-00331-w},
	doi = {10.1007/s40012-021-00331-w},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {CSI Transactions on ICT},
	author = {Raveendran, Jayasree and Soren, John and Ramanathan, V. and Sudharshan, R. and Mahalanabis, Suman and Suresh, A. K. and Balaraman, Vivek},
	month = jun,
	year = {2021},
	pages = {115--125},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\MZ8JQXVJ\\Raveendran et al. - 2021 - Behavior science led technology for financial well.pdf:application/pdf},
}

@article{iooss_monoparametric_2021,
	title = {Monoparametric {Tiling} of {Polyhedral} {Programs}},
	volume = {49},
	issn = {0885-7458, 1573-7640},
	url = {https://link.springer.com/10.1007/s10766-021-00694-2},
	doi = {10.1007/s10766-021-00694-2},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {International Journal of Parallel Programming},
	author = {Iooss, Guillaume and Alias, Christophe and Rajopadhye, Sanjay},
	month = jun,
	year = {2021},
	pages = {376--409},
	file = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\B3TUX8T6\\Iooss et al. - 2021 - Monoparametric Tiling of Polyhedral Programs.pdf:application/pdf},
}

@article{hegade_crawler_2021,
	title = {Crawler by {Contextual} {Inference}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00574-z},
	doi = {10.1007/s42979-021-00574-z},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Hegade, Prakash and Lingadhal, Nikhil and Jain, Sourabh and Khan, Usman and Vijeth, K. L.},
	month = may,
	year = {2021},
	pages = {216},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\JP9XCXAL\\Hegade et al. - 2021 - Crawler by Contextual Inference.pdf:application/pdf},
}

@article{wu_learning_2021,
	title = {Learning {Accurate} {Integer} {Transformer} {Machine}-{Translation} {Models}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00688-4},
	doi = {10.1007/s42979-021-00688-4},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Wu, Ephrem},
	month = jul,
	year = {2021},
	pages = {291},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\6ITL7FUJ\\Wu - 2021 - Learning Accurate Integer Transformer Machine-Tran.pdf:application/pdf},
}

@article{iwasokun_discrete_2021,
	title = {Discrete transformation technique for video compression},
	issn = {2520-8438, 2520-8446},
	url = {http://link.springer.com/10.1007/s42044-021-00085-3},
	doi = {10.1007/s42044-021-00085-3},
	language = {en},
	urldate = {2021-10-24},
	journal = {Iran Journal of Computer Science},
	author = {Iwasokun, Gabriel Babatunde and Olaoye, Monday Olutayo},
	month = mar,
	year = {2021},
}

@article{guellil_semi-supervised_2021,
	title = {A {Semi}-supervised {Approach} for {Sentiment} {Analysis} of {Arab}(ic+izi) {Messages}: {Application} to the {Algerian} {Dialect}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {A {Semi}-supervised {Approach} for {Sentiment} {Analysis} of {Arab}(ic+izi) {Messages}},
	url = {http://link.springer.com/10.1007/s42979-021-00510-1},
	doi = {10.1007/s42979-021-00510-1},
	abstract = {Abstract
            In this paper, we propose a semi-supervised approach for sentiment analysis of Arabic and its dialects. This approach is based on a sentiment corpus, constructed automatically and reviewed manually by Algerian dialect native speakers. This approach consists of constructing and applying a set of deep learning algorithms to classify the sentiment of Arabic messages as positive or negative. It was applied on Facebook messages written in Modern Standard Arabic (MSA) as well as in Algerian dialect (DALG, which is a low resourced-dialect, spoken by more than 40 million people) with both scripts Arabic and Arabizi. To handle Arabizi, we consider both options: transliteration (largely used in the research literature for handling Arabizi) and translation (never used in the research literature for handling Arabizi). For highlighting the effectiveness of a semi-supervised approach, we carried out different experiments using both corpora for the training (i.e. the corpus constructed automatically and the one that was reviewed manually). The experiments were done on many test corpora dedicated to MSA/DALG, which were proposed and evaluated in the research literature. Both classifiers are used, shallow and deep learning classifiers such as Random Forest (RF), Logistic Regression(LR) Convolutional Neural Network (CNN) and Long short-term memory (LSTM). These classifiers are combined with word embedding models such as Word2vec and fastText that were used for sentiment classification. Experimental results (F1 score up to 95\% for intrinsic experiments and up to 89\% for extrinsic experiments) showed that the proposed system outperforms the existing state-of-the-art methodologies (the best improvement is up to 25\%).},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Guellil, Imane and Adeel, Ahsan and Azouaou, Faical and Benali, Fodil and Hachani, Ala-Eddine and Dashtipour, Kia and Gogate, Mandar and Ieracitano, Cosimo and Kashani, Reza and Hussain, Amir},
	month = apr,
	year = {2021},
	pages = {118},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\ELT4US6K\\Guellil et al. - 2021 - A Semi-supervised Approach for Sentiment Analysis .pdf:application/pdf},
}

@article{noack_empirical_2021,
	title = {An {Empirical} {Study} on the {Relation} {Between} {Network} {Interpretability} and {Adversarial} {Robustness}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-020-00390-x},
	doi = {10.1007/s42979-020-00390-x},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Noack, Adam and Ahern, Isaac and Dou, Dejing and Li, Boyang},
	month = feb,
	year = {2021},
	pages = {32},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\H3IGBLT7\\Noack et al. - 2021 - An Empirical Study on the Relation Between Network.pdf:application/pdf},
}

@article{katsura_candidate-label_2021,
	title = {Candidate-{Label} {Learning}: {A} {Generalization} of {Ordinary}-{Label} {Learning} and {Complementary}-{Label} {Learning}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Candidate-{Label} {Learning}},
	url = {https://link.springer.com/10.1007/s42979-021-00681-x},
	doi = {10.1007/s42979-021-00681-x},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Katsura, Yasuhiro and Uchida, Masato},
	month = jul,
	year = {2021},
	pages = {288},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\P9KKR6RW\\Katsura and Uchida - 2021 - Candidate-Label Learning A Generalization of Ordi.pdf:application/pdf},
}

@article{mehanna_effect_2021,
	title = {The {Effect} of {Pre}-processing {Techniques} on the {Accuracy} of {Sentiment} {Analysis} {Using} {Bag}-of-{Concepts} {Text} {Representation}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00453-7},
	doi = {10.1007/s42979-021-00453-7},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Mehanna, Yassin S. and Mahmuddin, M.},
	month = jul,
	year = {2021},
	pages = {237},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\XBEFCY3J\\Mehanna and Mahmuddin - 2021 - The Effect of Pre-processing Techniques on the Acc.pdf:application/pdf},
}

@article{lones_evolving_2021,
	title = {Evolving continuous optimisers from scratch},
	issn = {1389-2576, 1573-7632},
	url = {https://link.springer.com/10.1007/s10710-021-09414-8},
	doi = {10.1007/s10710-021-09414-8},
	abstract = {Abstract
            This work uses genetic programming to explore the space of continuous optimisers, with the goal of discovering novel ways of doing optimisation. In order to keep the search space broad, the optimisers are evolved from scratch using Push, a Turing-complete, general-purpose, language. The resulting optimisers are found to be diverse, and explore their optimisation landscapes using a variety of interesting, and sometimes unusual, strategies. Significantly, when applied to problems that were not seen during training, many of the evolved optimisers generalise well, and often outperform existing optimisers. This supports the idea that novel and effective forms of optimisation can be discovered in an automated manner. This paper also shows that pools of evolved optimisers can be hybridised to further increase their generality, leading to optimisers that perform robustly over a broad variety of problem types and sizes.},
	language = {en},
	urldate = {2021-10-24},
	journal = {Genetic Programming and Evolvable Machines},
	author = {Lones, Michael A.},
	month = oct,
	year = {2021},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\LSUFHY6A\\Lones - 2021 - Evolving continuous optimisers from scratch.pdf:application/pdf},
}

@article{movahedi_efficient_2021,
	title = {An efficient population-based multi-objective task scheduling approach in fog computing systems},
	volume = {10},
	issn = {2192-113X},
	url = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-021-00264-4},
	doi = {10.1186/s13677-021-00264-4},
	abstract = {Abstract
            With the rapid development of Internet of Things (IoT) technologies, fog computing has emerged as an extension to the cloud computing that relies on fog nodes with distributed resources at the edge of network. Fog nodes offer computing and storage resources opportunities to resource-less IoT devices which are not capable to support IoT applications with computation-intensive requirements. Furthermore, the closeness of fog nodes to IoT devices satisfies the low-latency requirements of IoT applications. However, due to the high IoT task offloading requests and fog resource limitations, providing an optimal task scheduling solution that considers a number of quality metrics is essential. In this paper, we address the task scheduling problem with the aim of optimizing the time and energy consumption as two QoS parameters in the fog context. First, we present a fog-based architecture for handling the task scheduling requests to provide the optimal solutions. Second, we formulate the task scheduling problem as an Integer Linear Programming (ILP) optimization model considering both time and fog energy consumption. Finally, we propose an advanced approach called Opposition-based Chaotic Whale Optimization Algorithm (OppoCWOA) to enhance the performance of the original WOA for solving the modelled task scheduling problem in a timely manner. The efficiency of the proposed OppoCWOA is shown by providing extensive simulations and comparisons with the original WOA and some existing meta-heuristic algorithms such as Artificial Bee Colony (ABC), Particle Swarm Optimization (PSO), and Genetic Algorithm (GA).},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Journal of Cloud Computing},
	author = {Movahedi, Zahra and Defude, Bruno and Hosseininia, Amir mohammad},
	month = dec,
	year = {2021},
	pages = {53},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\FEA33FHR\\Movahedi et al. - 2021 - An efficient population-based multi-objective task.pdf:application/pdf},
}

@article{cruz_selection_2021,
	title = {Selection of {Characteristics} by {Hybrid} {Method}: {RFE}, {Ridge}, {Lasso}, and {Bayesian} for the {Power} {Forecast} for a {Photovoltaic} {System}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Selection of {Characteristics} by {Hybrid} {Method}},
	url = {https://link.springer.com/10.1007/s42979-021-00584-x},
	doi = {10.1007/s42979-021-00584-x},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Cruz, Jose and Mamani, Wilson and Romero, Christian and Pineda, Ferdinand},
	month = may,
	year = {2021},
	pages = {202},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\VCCYGNDP\\Cruz et al. - 2021 - Selection of Characteristics by Hybrid Method RFE.pdf:application/pdf},
}

@article{lima_dermadl_2021,
	title = {{DermaDL}: {Advanced} {Convolutional} {Neural} {Networks} for {Computer}-{Aided} {Skin}-{Lesion} {Classification}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {{DermaDL}},
	url = {https://link.springer.com/10.1007/s42979-021-00641-5},
	doi = {10.1007/s42979-021-00641-5},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Lima, Daniel M. and Rodrigues-Jr, Jose F. and Brandoli, Bruno and Goeuriot, Lorraine and Amer-Yahia, Sihem},
	month = jul,
	year = {2021},
	pages = {253},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\44JEBFHQ\\Lima et al. - 2021 - DermaDL Advanced Convolutional Neural Networks fo.pdf:application/pdf},
}

@article{serramia_dominant_2021,
	title = {On the dominant set selection problem and its application to value alignment},
	volume = {35},
	issn = {1387-2532, 1573-7454},
	url = {https://link.springer.com/10.1007/s10458-021-09519-5},
	doi = {10.1007/s10458-021-09519-5},
	abstract = {Abstract
            
              Decision makers can often be confronted with the need to select a subset of objects from a set of candidate objects by just counting on preferences regarding the objects’ features. Here we formalise this problem as the
              dominant set selection problem
              . Solving this problem amounts to finding the preferences over all possible sets of objects. We accomplish so by: (i) grounding the preferences over features to preferences over the objects themselves; and (ii) lifting these preferences to preferences over all possible sets of objects. This is achieved by combining lex-cel –a method from the literature—with our novel anti-lex-cel method, which we formally (and thoroughly) study. Furthermore, we provide a binary integer program encoding to solve the problem. Finally, we illustrate our overall approach by applying it to the selection of value-aligned norm systems.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {Autonomous Agents and Multi-Agent Systems},
	author = {Serramia, Marc and López-Sánchez, Maite and Moretti, Stefano and Rodríguez-Aguilar, Juan Antonio},
	month = oct,
	year = {2021},
	pages = {42},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\YF7NWW7X\\Serramia et al. - 2021 - On the dominant set selection problem and its appl.pdf:application/pdf},
}

@article{dai_fast-reactive_2021,
	title = {Fast-{Reactive} {Probabilistic} {Motion} {Planning} for {High}-{Dimensional} {Robots}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00878-0},
	doi = {10.1007/s42979-021-00878-0},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Dai, Siyu and Hofmann, Andreas and Williams, Brian},
	month = nov,
	year = {2021},
	pages = {484},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\VWF8EKQZ\\Dai et al. - 2021 - Fast-Reactive Probabilistic Motion Planning for Hi.pdf:application/pdf},
}

@article{sipper_symbolic-regression_2021,
	title = {Symbolic-regression boosting},
	volume = {22},
	issn = {1389-2576, 1573-7632},
	url = {https://link.springer.com/10.1007/s10710-021-09400-0},
	doi = {10.1007/s10710-021-09400-0},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {Genetic Programming and Evolvable Machines},
	author = {Sipper, Moshe and Moore, Jason H.},
	month = sep,
	year = {2021},
	pages = {357--381},
}

@article{cecillon_graph_2021,
	title = {Graph {Embeddings} for {Abusive} {Language} {Detection}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-020-00413-7},
	doi = {10.1007/s42979-020-00413-7},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Cécillon, Noé and Labatut, Vincent and Dufour, Richard and Linarès, Georges},
	month = feb,
	year = {2021},
	pages = {37},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\V75HUU9C\\Cécillon et al. - 2021 - Graph Embeddings for Abusive Language Detection.pdf:application/pdf},
}

@article{ohno_analysis_2021,
	title = {Analysis of {Multi}-objective {Bayesian} {Optimization} {Using} {Random} {Scalarizations} for {Correlated} {Observations}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00505-y},
	doi = {10.1007/s42979-021-00505-y},
	language = {en},
	number = {3},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Ohno, Hiroshi},
	month = may,
	year = {2021},
	pages = {214},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\SX5XNXUL\\Ohno - 2021 - Analysis of Multi-objective Bayesian Optimization .pdf:application/pdf},
}

@article{chen_m-drl_2021,
	title = {M-{DRL}: {Deep} {Reinforcement} {Learning} {Based} {Coflow} {Traffic} {Scheduler} with {MLFQ} {Threshold} {Adaption}},
	volume = {49},
	issn = {0885-7458, 1573-7640},
	shorttitle = {M-{DRL}},
	url = {https://link.springer.com/10.1007/s10766-021-00711-4},
	doi = {10.1007/s10766-021-00711-4},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {International Journal of Parallel Programming},
	author = {Chen, Tianba and Li, Wei and Sun, YuKang and Li, Yunchun},
	month = oct,
	year = {2021},
	pages = {646--657},
}

@article{dong_exploration_2021,
	title = {An {Exploration} of {Online} {Missing} {Value} {Imputation} in {Non}-stationary {Data} {Stream}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-021-00459-1},
	doi = {10.1007/s42979-021-00459-1},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Dong, Wenlu and Gao, Shang and Yang, Xibei and Yu, Hualong},
	month = apr,
	year = {2021},
	pages = {57},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\4C6WS8XR\\Dong et al. - 2021 - An Exploration of Online Missing Value Imputation .pdf:application/pdf},
}

@article{baishya_safer_2021,
	title = {{SAFER}: {Sentiment} {Analysis}-{Based} {FakE} {Review} {Detection} in {E}-{Commerce} {Using} {Deep} {Learning}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {{SAFER}},
	url = {https://link.springer.com/10.1007/s42979-021-00918-9},
	doi = {10.1007/s42979-021-00918-9},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Baishya, Dibyajyoti and Deka, Joon Jyoti and Dey, Gaurav and Singh, Pranav Kumar},
	month = nov,
	year = {2021},
	pages = {479},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\F88VM7S3\\Baishya et al. - 2021 - SAFER Sentiment Analysis-Based FakE Review Detect.pdf:application/pdf},
}

@article{kumar_benchmarks_2021,
	title = {Benchmarks for {Designing} a {Secure} {Devanagari} {CAPTCHA}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-020-00445-z},
	doi = {10.1007/s42979-020-00445-z},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Kumar, Mohinder and Jindal, Manish Kumar},
	month = feb,
	year = {2021},
	pages = {45},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\GLB5VKM7\\Kumar and Jindal - 2021 - Benchmarks for Designing a Secure Devanagari CAPTC.pdf:application/pdf},
}

@article{goutham_analytical_2021,
	title = {Analytical {Modelling} and {Performance} {Enhancement} of {Cooperative} {HARQ} {Scheme} for {Underwater} {Acoustic} {Sensor} {Networks}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-021-00470-6},
	doi = {10.1007/s42979-021-00470-6},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Goutham, Veerapu and Harigovindan, V. P.},
	month = apr,
	year = {2021},
	pages = {108},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\VZIYPZHC\\Goutham and Harigovindan - 2021 - Analytical Modelling and Performance Enhancement o.pdf:application/pdf},
}

@article{pu_power_2021,
	title = {Power flow adjustment for smart microgrid based on edge computing and multi-agent deep reinforcement learning},
	volume = {10},
	issn = {2192-113X},
	url = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-021-00259-1},
	doi = {10.1186/s13677-021-00259-1},
	abstract = {Abstract
            In current power grids, a massive amount of power equipment raises various emerging requirements, e.g., data perception, information transmission, and real-time control. The existing cloud computing paradigm is stubborn to address issues and challenges such as rapid response and local autonomy. Microgrids contain diverse and adjustable power components, making the power system complex and difficult to optimize. The existing traditional adjusting methods are manual and centralized, which requires many human resources with expert experience. The adjustment method based on edge intelligence can effectively leverage ubiquitous computing capacities to provide distributed intelligent solutions with lots of research issues to be reckoned with. To address this challenge, we consider a power control framework combining edge computing and reinforcement learning, which makes full use of edge nodes to sense network state and control power equipment to achieve the goal of fast response and local autonomy. Additionally, we focus on the non-convergence problem of power flow calculation, and combine deep reinforcement learning and multi-agent methods to realize intelligent decisions, with designing the model such as state, action, and reward. Our method improves the efficiency and scalability compared with baseline methods. The simulation results demonstrate the effectiveness of our method with intelligent adjusting and stable operation under various conditions.},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {Journal of Cloud Computing},
	author = {Pu, Tianjiao and Wang, Xinying and Cao, Yifan and Liu, Zhicheng and Qiu, Chao and Qiao, Ji and Zhang, Shuhua},
	month = dec,
	year = {2021},
	pages = {48},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\J9ILY95Q\\Pu et al. - 2021 - Power flow adjustment for smart microgrid based on.pdf:application/pdf},
}

@article{philippsen_goal-directed_2021,
	title = {Goal-{Directed} {Exploration} for {Learning} {Vowels} and {Syllables}: {A} {Computational} {Model} of {Speech} {Acquisition}},
	volume = {35},
	issn = {0933-1875, 1610-1987},
	shorttitle = {Goal-{Directed} {Exploration} for {Learning} {Vowels} and {Syllables}},
	url = {http://link.springer.com/10.1007/s13218-021-00704-y},
	doi = {10.1007/s13218-021-00704-y},
	abstract = {Abstract
            Infants learn to speak rapidly during their first years of life, gradually improving from simple vowel-like sounds to larger consonant-vowel complexes. Learning to control their vocal tract in order to produce meaningful speech sounds is a complex process which requires to learn the relationship between motor and sensory processes. In this paper, a computational framework is proposed that models the problem of learning articulatory control for a physiologically plausible 3-D vocal tract model using a developmentally-inspired approach. The system babbles and explores efficiently in a low-dimensional space of goals that are relevant to the learner in its synthetic environment. The learning process is goal-directed and self-organized, and yields an inverse model of the mapping between sensory space and motor commands. This study provides a unified framework that can be used for learning static as well as dynamic motor representations. The successful learning of vowel and syllable sounds as well as the benefit of active and adaptive learning strategies are demonstrated. Categorical perception is found in the acquired models, suggesting that the framework has the potential to replicate phenomena of human speech acquisition.},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {KI - Künstliche Intelligenz},
	author = {Philippsen, Anja},
	month = mar,
	year = {2021},
	pages = {53--70},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\QWWT53HY\\Philippsen - 2021 - Goal-Directed Exploration for Learning Vowels and .pdf:application/pdf},
}

@article{swapnarekha_multiplicative_2021,
	title = {Multiplicative {Holts} {Winter} {Model} for {Trend} {Analysis} and {Forecasting} of {COVID}-19 {Spread} in {India}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00808-0},
	doi = {10.1007/s42979-021-00808-0},
	language = {en},
	number = {5},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Swapnarekha, H. and Behera, Himansu Sekhar and Nayak, Janmenjoy and Naik, Bighnaraj and Kumar, P. Suresh},
	month = sep,
	year = {2021},
	pages = {416},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\FRTSZBHW\\Swapnarekha et al. - 2021 - Multiplicative Holts Winter Model for Trend Analys.pdf:application/pdf},
}

@article{alornyo_id-based_2021,
	title = {{ID}-{Based} {Plaintext} {Checkable} {Signcryption} with {Equality} {Test} in {Healthcare} {Systems}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-020-00436-0},
	doi = {10.1007/s42979-020-00436-0},
	language = {en},
	number = {1},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Alornyo, Seth and Mohammed, Mustapha Adamu and Anibrika, Bright Selorm and Asante, Michael},
	month = feb,
	year = {2021},
	pages = {52},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\3E9ZC45Q\\Alornyo et al. - 2021 - ID-Based Plaintext Checkable Signcryption with Equ.pdf:application/pdf},
}

@article{kumar_analysis_2021,
	title = {Analysis of {Deep} {Learning} {Techniques} for {Tuberculosis} {Disease}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00680-y},
	doi = {10.1007/s42979-021-00680-y},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Kumar, J. Senthil and Balamurugan, S. Appavu alias and Sasikala, S.},
	month = jul,
	year = {2021},
	pages = {302},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\STXJI94K\\Kumar et al. - 2021 - Analysis of Deep Learning Techniques for Tuberculo.pdf:application/pdf},
}

@article{kahn_learning_2021,
	title = {Learning by {Enhancing} {Half}-{Baked} {AI} {Projects}},
	volume = {35},
	issn = {0933-1875, 1610-1987},
	url = {https://link.springer.com/10.1007/s13218-021-00732-8},
	doi = {10.1007/s13218-021-00732-8},
	abstract = {Abstract
            We have developed thirty sample artificial intelligence (AI) programs in a form suitable for enhancement by non-expert programmers. The projects are implemented in the Snap! blocks language and can be run in modern web browsers. These projects have been designed to be modifiable by school students and have been iteratively developed with over 100 students. The projects involve speech synthesis, speech and image recognition, natural language processing, and deep machine learning. They illustrate a variety of AI capabilities, concepts, and techniques. The intent is to provide students with hands-on experience with AI programming so they come to understand the possibilities, problems, strengths, and weaknesses of AI today.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {KI - Künstliche Intelligenz},
	author = {Kahn, Ken and Winters, Niall},
	month = jun,
	year = {2021},
	pages = {201--205},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\XV84M9QN\\Kahn and Winters - 2021 - Learning by Enhancing Half-Baked AI Projects.pdf:application/pdf},
}

@article{stahl_using_2021,
	title = {Using {Reinforcement} {Learning} for {Generating} {Polynomial} {Models} to {Explain} {Complex} {Data}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-021-00488-w},
	doi = {10.1007/s42979-021-00488-w},
	abstract = {Abstract
            
              Basic oxygen steel making is a complex chemical and physical industrial process that reduces a mix of pig iron and recycled scrap into low-carbon steel. Good understanding of the process and the ability to predict how it will evolve requires long operator experience, but this can be augmented with process target prediction systems. Such systems may use machine learning to learn a model of the process based on a long process history, and have an advantage in that they can make use of vastly more process parameters than operators can comprehend. While it has become less of a challenge to build such prediction systems using machine learning algorithms, actual production implementations are rare. The hidden reasoning of complex prediction model and lack of transparency prevents operator trust, even for models that show high accuracy predictions. To express model behaviour and thereby increasing transparency we develop a reinforcement learning (RL) based agent approach, which task is to generate short polynomials that can explain the model of the process from what it has learnt from process data. The RL agent is rewarded on how well it generates polynomials that can predict the process from a smaller subset of the process parameters. Agent training is done with the REINFORCE algorithm, which enables the sampling of multiple concurrently plausible polynomials. Having multiple polynomials, process developers can evaluate several alternative and plausible explanations, as observed in the historic process data. The presented approach gives both a trained generative model and a set of polynomials that can explain the process. The performance of the polynomials is as good as or better than more complex and less interpretable models. Further, the relative simplicity of the resulting polynomials allows good generalisation to fit new instances of data. The best of the resulting polynomials in our evaluation achieves a better
              
                
                  \$\$R{\textasciicircum}2\$\$
                  
                    
                      R
                      2
                    
                  
                
              
              score on the test set in comparison to the other machine learning models evaluated.},
	language = {en},
	number = {2},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Ståhl, Niclas and Mathiason, Gunnar and Alcacoas, Dellainey},
	month = apr,
	year = {2021},
	pages = {103},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\SQC93ZJN\\Ståhl et al. - 2021 - Using Reinforcement Learning for Generating Polyno.pdf:application/pdf},
}

@article{bakshi_improving_2021,
	title = {Improving {Indian} {Spoken}-{Language} {Identification} by {Feature} {Selection} in {Duration} {Mismatch} {Framework}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00750-1},
	doi = {10.1007/s42979-021-00750-1},
	language = {en},
	number = {6},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Bakshi, Aarti and Kopparapu, Sunil Kumar},
	month = nov,
	year = {2021},
	pages = {442},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\FL3MYIPH\\Bakshi and Kopparapu - 2021 - Improving Indian Spoken-Language Identification by.pdf:application/pdf},
}

@article{sahu_diagnosis-steganography-transmission_2021,
	title = {Diagnosis-{Steganography}-{Transmission}: {An} {Innovative} {Integrated} {Paradigm} for {ECG} {Healthcare}},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	shorttitle = {Diagnosis-{Steganography}-{Transmission}},
	url = {https://link.springer.com/10.1007/s42979-021-00721-6},
	doi = {10.1007/s42979-021-00721-6},
	language = {en},
	number = {4},
	urldate = {2021-10-24},
	journal = {SN Computer Science},
	author = {Sahu, Neerja and Peng, Dongming and Sharif, Hamid},
	month = jul,
	year = {2021},
	pages = {332},
	file = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\LLUVZ6DF\\Sahu et al. - 2021 - Diagnosis-Steganography-Transmission An Innovativ.pdf:application/pdf},
}

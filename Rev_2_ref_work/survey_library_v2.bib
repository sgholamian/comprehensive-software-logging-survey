% Encoding: UTF-8

@Article{He2021,
  author     = {He, Shilin and He, Pinjia and Chen, Zhuangbin and Yang, Tianyi and Su, Yuxin and Lyu, Michael R.},
  journal    = {ACM Comput. Surv.},
  title      = {A Survey on Automated Log Analysis for Reliability Engineering},
  year       = {2021},
  issn       = {0360-0300},
  month      = jul,
  number     = {6},
  volume     = {54},
  abstract   = {Logs are semi-structured text generated by logging statements in software source code.
In recent decades, software logs have become imperative in the reliability assurance
mechanism of many software systems, because they are often the only data available
that record software runtime information. As modern software is evolving into a large
scale, the volume of logs has increased rapidly. To enable effective and efficient
usage of modern software logs in reliability engineering, a number of studies have
been conducted on automated log analysis. This survey presents a detailed overview
of automated log analysis research, including how to automate and assist the writing
of logging statements, how to compress logs, how to parse logs into structured event
templates, and how to employ logs to detect anomalies, predict failures, and facilitate
diagnosis. Additionally, we survey work that releases open-source toolkits and datasets.
Based on the discussion of the recent advances, we present several promising future
directions toward real-world and next-generation automated log analysis.},
  address    = {New York, NY, USA},
  articleno  = {130},
  doi        = {10.1145/3460345},
  issue_date = {July 2022},
  keywords   = {log compression, log analysis, Log, logging, log parsing, log mining},
  numpages   = {37},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/3460345},
}

@InProceedings{Eckel2021,
  author    = {Eckel, Michael and Riemann, Tim},
  booktitle = {The 16th International Conference on Availability, Reliability and Security},
  title     = {Userspace Software Integrity Measurement},
  year      = {2021},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  series    = {ARES 2021},
  abstract  = {Todays computing systems are more interconnected and sophisticated than ever before.
Especially in healthcare 4.0, services and infrastructures rely on cyber-physical
systemss (CPSess) and Internet of Things (IoT) devices. This adds to the complexity
of these highly connected systems and their manageability. Even worse, the variety
of emerging cyber attacks is becoming more severe and sophisticated, making healthcare
one of the most important sectors with major security risks. The development of appropriate
countermeasures constitutes one of the most complex and difficult challenges in cyber
security research. Research areas include, among others, anomaly detection, network
security, multi-layer event detection, cyber resiliency, and integrity protection.
Securing the integrity of software running on a device is a desirable protection goal
in the context of systems security. With a Trusted Platform Module (TPM), measured
boot, and remote attestation there exist technologies to ensure that a system has
booted up correctly and runs only authentic software. The Linux Integrity Measurement
Architecture (IMA) extends these principles into the operating systems (OSes), measuring
native binaries before they are loaded. However, interpreted language files, such
as Java classes and Python scripts, are not considered executables and are not measured
as such. Contemporary OSess ship with many of these and it is vital to consider them
as security-critical as native binaries. In this paper, we introduce Userspace Software
Integrity Measurement (USIM) for the Linux OSes. Userspace Software Integrity Measurement
(USIM) enables interpreters to measure, log, and irrevocably anchor critical events
in the TPM. We develop a software library in C which provides TPM-based measurement
functionality as well as the USIM service, which provides concurrent access handling
to the TPM based event logging. Further, we develop and implement a concept to realize
highly frequent event logging on the slow TPM. We integrate this library into the
Java Virtual Machine (JVM) to measure Java classes and show that it can be easily
integrated into other interpreters. With performance measurements we demonstrate that
our contribution is feasible and that overhead is negligible.},
  articleno = {138},
  doi       = {10.1145/3465481.3470018},
  isbn      = {9781450390514},
  keywords  = {integrity verification, Trusted Computing, Systems security},
  location  = {Vienna, Austria},
  numpages  = {11},
  url       = {https://doi.org/10.1145/3465481.3470018},
}

@InProceedings{Liu2021,
  author    = {Liu, Shengmei and Claypool, Mark},
  booktitle = {Proceedings of the 12th ACM Multimedia Systems Conference},
  title     = {EvLag: A Tool for Monitoring and Lagging Linux Input Devices},
  year      = {2021},
  address   = {New York, NY, USA},
  pages     = {281–286},
  publisher = {Association for Computing Machinery},
  series    = {MMSys '21},
  abstract  = {Understanding the effects of latency on interaction is important for building software,
such as computer games, that perform well over a range of system configurations. Unfortunately,
user studies evaluating latency must each write their own code to add latency to user
input and, even worse, must limit themselves to open source applications. To address
these shortcomings, this paper presents EvLag, a tool for adding latency to user input
devices in Linux. EvLag provides a custom amount of latency for each device regardless
of the application being run, enabling user studies for systems and software that
cannot be modified (e.g., commercial games). Evaluation shows EvLag has low overhead
and accurately adds the expected amount of latency to user input. In addition, EvLag
can log user input events for post study analysis with several utilities provided
to facilitate output event parsing.},
  doi       = {10.1145/3458305.3478449},
  isbn      = {9781450384346},
  keywords  = {delay, lag, latency, game},
  location  = {Istanbul, Turkey},
  numpages  = {6},
  url       = {https://doi.org/10.1145/3458305.3478449},
}

@InProceedings{Wang2021,
  author    = {Wang, Zehao and Zhang, Haoxiang and Chen, Tse-Hsun (Peter) and Wang, Shaowei},
  booktitle = {Proceedings of the 29th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
  title     = {Would You like a Quick Peek? Providing Logging Support to Monitor Data Processing in Big Data Applications},
  year      = {2021},
  address   = {New York, NY, USA},
  pages     = {516–526},
  publisher = {Association for Computing Machinery},
  series    = {ESEC/FSE 2021},
  abstract  = {To analyze large-scale data efficiently, developers have created various big data
processing frameworks (e.g., Apache Spark). These big data processing frameworks provide
abstractions to developers so that they can focus on implementing the data analysis
logic. In traditional software systems, developers leverage logging to monitor applications
and record intermediate states to assist workload understanding and issue diagnosis.
However, due to the abstraction and the peculiarity of big data frameworks, there
is currently no effective monitoring approach for big data applications. In this paper,
we first manually study 1,000 randomly sampled Spark-related questions on Stack Overflow
to study their root causes and the type of information, if recorded, that can assist
developers with motioning and diagnosis. Then, we design an approach, DPLOG, which
assists developers with monitoring Spark applications. DPLOG leverages statistical
sampling to minimize performance overhead and provides intermediate information and
hint/warning messages for each data processing step of a chained method pipeline.
We evaluate DPLOG on six benchmarking programs and find that DPLOG has a relatively
small overhead (i.e., less than 10% increase in response time when processing 5GB
data) compared to without using DPLOG, and reduce the overhead by over 500% compared
to the baseline. Our user study with 20 developers shows that DPLOG can reduce the
needed time to debug big data applications by 63% and the participants give DPLOG
an average of 4.85/5 for its usefulness. The idea of DPLOG may be applied to other
big data processing frameworks, and our study sheds light on future research opportunities
in assisting developers with monitoring big data applications.},
  doi       = {10.1145/3468264.3468613},
  isbn      = {9781450385626},
  keywords  = {Apache Spark, Logging, Monitoring},
  location  = {Athens, Greece},
  numpages  = {11},
  url       = {https://doi.org/10.1145/3468264.3468613},
}

@InProceedings{Zeng2021,
  author    = {Zeng, Jianping and Choi, Jongouk and Fu, Xinwei and Shreepathi, Ajay Paddayuru and Lee, Dongyoon and Min, Changwoo and Jung, Changhee},
  booktitle = {MICRO-54: 54th Annual IEEE/ACM International Symposium on Microarchitecture},
  title     = {ReplayCache: Enabling Volatile Cachesfor Energy Harvesting Systems},
  year      = {2021},
  address   = {New York, NY, USA},
  pages     = {170–182},
  publisher = {Association for Computing Machinery},
  series    = {MICRO '21},
  abstract  = {Energy harvesting systems have shown their unique benefit of ultra-long operation
time without maintenance and are expected to be more prevalent in the era of Internet
of Things. However, due to the batteryless nature, they suffer unpredictable frequent
power outages. They thus require a lightweight mechanism for crash consistency since
saving/restoring checkpoints across the outages can limit forward progress by consuming
hard-won energy. For the reason, energy harvesting systems have been designed with
a non-volatile memory (NVM) only. The use of a volatile data cache has been assumed
to be not viable or at least challenging due to the difficulty to ensure cacheline
persistence. In this paper, we propose ReplayCache, a software-only crash consistency
scheme that enables commodity energy harvesting systems to exploit a volatile data
cache. ReplayCache does not have to ensure the persistence of dirty cachelines or
record their logs at run time. Instead, ReplayCache recovery runtime re-executes the
potentially unpersisted stores in the wake of power failure to restore the consistent
NVM state, from which interrupted program can safely resume. To support store replay
during recovery, ReplayCache partitions program into a series of regions in a way
that store operand registers remain intact within each region, and checkpoints all
registers just before power failure using the crash consistency mechanism of the commodity
systems. For performance, ReplayCache enables region-level persistence that allows
the stores in a region to be asynchronously persisted until the region ends, exploiting
ILP. The evaluation with 23 benchmark applications show that compared to the baseline
with no caches, ReplayCache can achieve about 10.72x and 8.5x-8.9x speedup (on geometric
mean) for the scenarios without and with power outages, respectively.},
  doi       = {10.1145/3466752.3480102},
  isbn      = {9781450385572},
  location  = {Virtual Event, Greece},
  numpages  = {13},
  url       = {https://doi.org/10.1145/3466752.3480102},
}

@InProceedings{Ludwig2021,
  author    = {Ludwig, Sabrina and Rausch, Andreas and Deutscher, Viola and Seifried, J\"{u}rgen},
  booktitle = {Proceedings of the Eighth ACM Conference on Learning @ Scale},
  title     = {Problem Solving Analytics (PSA) in the Web-Based Office Simulation LUCA},
  year      = {2021},
  address   = {New York, NY, USA},
  pages     = {363–364},
  publisher = {Association for Computing Machinery},
  series    = {L@S '21},
  abstract  = {Open-ended e-learning environments allow for explorative behaviour in challenging
scenarios and hence, foster problem-solving competences. The web-based office simulation
LUCA (funded by the German Federal Ministry of Education and Research) addresses the
domain-specific competences of students in commercial vocational education and training
(VET). The office simulation provides authentic office tools such as a spreadsheet
application and an ERP software to solve complex work scenarios. These scenarios are
implemented via the "LUCA Editor" and can contain automated assistance based on evidence
rules of certain behaviours ("scaffolding"). The real-time analysis of the resulting
log files enables the analysis of individual problem-solving behaviour ("Problem Solving
Analytics", PSA). Teachers and trainers can monitor their students' problem-solving
efforts in the "LUCA Dashboard", where they can also provide individual assistance
via a chat tool. In our contribution, the scientific foundations of PSA will be outlined,
followed by a demonstration of the latest prototype of LUCA and visitors' interaction
with the software. LUCA's alpha version will be released in September of this year
and will be available for practitioners in vocational schools and companies.},
  doi       = {10.1145/3430895.3460877},
  isbn      = {9781450382151},
  keywords  = {automated feedback, log data analysis, computer-based office simulation, open-ended learning environment, vocational education, learning analytics},
  location  = {Virtual Event, Germany},
  numpages  = {2},
  url       = {https://doi.org/10.1145/3430895.3460877},
}

@InProceedings{Zieglmeier2021,
  author    = {Zieglmeier, Valentin and Daiqui, Gabriel Loyola},
  booktitle = {Evaluation and Assessment in Software Engineering},
  title     = {GDPR-Compliant Use of Blockchain for Secure Usage Logs},
  year      = {2021},
  address   = {New York, NY, USA},
  pages     = {313–320},
  publisher = {Association for Computing Machinery},
  series    = {EASE 2021},
  abstract  = {The unique properties of blockchain enable central requirements of distributed secure
logging: Immutability, integrity, and availability. Especially when providing transparency
about data usages, a blockchain-based secure log can be beneficial, as no trusted
third party is required. Yet, with data governed by privacy legislation such as the
GDPR or CCPA, the core advantage of immutability becomes a liability. After a rightful
request, an individual’s personal data need to be rectified or deleted, which is impossible
in an immutable blockchain. To solve this issue, we exploit a legal property of pseudonymized
data: They are only regarded personal data if they can be associated with an individual’s
identity. We make use of this fact by presenting P3, a pseudonym provisioning system
for secure usage logs including a protocol for recording new usages. For each new
block, a one-time transaction pseudonym is generated. The pseudonym generation algorithm
guarantees unlinkability and enables proof of ownership. These properties enable GDPR-compliant
use of blockchain, as data subjects can exercise their legal rights with regards to
their personal data. The new-usage protocol ensures non-repudiation, and therefore
accountability and liability. Most importantly, our approach does not require a trusted
third party and is independent of the utilized blockchain software.},
  doi       = {10.1145/3463274.3463349},
  isbn      = {9781450390538},
  keywords  = {GDPR, Blockchain, Logging, Privacy, Anonymity},
  location  = {Trondheim, Norway},
  numpages  = {8},
  url       = {https://doi.org/10.1145/3463274.3463349},
}

@Article{Hoshino2021,
  author     = {Hoshino, Shinji and Arahori, Yoshitaka and Gondow, Katsuhiko},
  journal    = {SIGAPP Appl. Comput. Rev.},
  title      = {Postmortem Accurate IR-Level State Recovery for Deployed Concurrent Programs},
  year       = {2021},
  issn       = {1559-6915},
  month      = oct,
  number     = {3},
  pages      = {33–48},
  volume     = {21},
  abstract   = {Debugging failures of deployed concurrent software is important for quality assurance.
However, such failures are difficult to debug because their behavior is non-deterministic
and limited information can be obtained with conventional means. Reverse debuggers
such as REPT [11] assists with debugging by recovering data values before the failure.
This is achieved by using a hardware-tracer to log control-flow information, then
using the information and a conventional coredump to recover data values via reverse-execution
at machine-level. REPT's algorithm for data value recovery is reliable and fast. But
the implementation cost is high because of its dependence on architecture. Applying
REPT to more abstract IR (Intermediate Representation) level instructions to counter
this yielded limited results with low accuracy compared to the original x86_64 implementation.
The main reason for this is that the stack layout is abstracted at IR-level.In this
paper, we present STRAB (State Recovery at Abstract-level), a collection of our proposed
methods to solve these problems. STRAB works in two phases. First, the data values
in the coredump are lifted from machine-level to IR-level using rich debug information
(DWARF3) and a novel technique we call mid-recovery lifting, the latter helping to
recover more heap data values at IR-level. Second, our novel hybrid memory location
resolution reduces the accuracy loss due to the abstracted stack layout at IR-level.Experimental
results on a variety of real-world concurrent programs show that STRAB has significantly
higher accuracy compared to REPT at IR-level (+40% on average) with only minor slowdowns
(x2.7 on average), while also achieving architecture-independence.},
  address    = {New York, NY, USA},
  doi        = {10.1145/3493499.3493502},
  issue_date = {September 2021},
  keywords   = {concurrent programming, reverse debugging, state recovery, intermediate representation, data value inference},
  numpages   = {16},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/3493499.3493502},
}

@InProceedings{Fortz2021,
  author    = {Fortz, Sophie},
  booktitle = {Proceedings of the 25th ACM International Systems and Software Product Line Conference - Volume B},
  title     = {LIFTS: Learning Featured Transition Systems},
  year      = {2021},
  address   = {New York, NY, USA},
  pages     = {1–6},
  publisher = {Association for Computing Machinery},
  series    = {SPLC '21},
  abstract  = {This PhD project aims to automatically learn transition systems capturing the behaviour
of a whole family of software-based systems. Reasoning at the family level yields
important economies of scale and quality improvements for a broad range of systems
such as software product lines, adaptive and configurable systems. Yet, to fully benefit
from the above advantages, a model of the system family's behaviour is necessary.
Such a model is often prohibitively expensive to create manually due to the number
of variants. For large long-lived systems with outdated specifications or for systems
that continuously adapt, the modelling cost is even higher. Therefore, this PhD proposes
to automate the learning of such models from existing artefacts. To advance research
at a fundamental level, our learning target are Featured Transition Systems (FTS),
an abstract formalism that can be used to provide a pivot semantics to a range of
variability-aware state-based modelling languages. The main research questions addressed
by this PhD project are: (1) Can we learn variability-aware models efficiently? (2)
Can we learn FTS in a black-box fashion? (i.e., with access to execution logs but
not to source code); (3) Can we learn FTS in a white/grey-box testing fashion? (i.e.,
with access to source code); and (4) How do the proposed techniques scale in practice?},
  doi       = {10.1145/3461002.3473066},
  isbn      = {9781450384704},
  keywords  = {software product lines, model learning, active automata learning, featured transition systems, variability mining},
  location  = {Leicester, United Kindom},
  numpages  = {6},
  url       = {https://doi.org/10.1145/3461002.3473066},
}

@Article{Yao2021,
  author   = {Yao, Kundi and Sayagh, Mohammed and Shang, Weiyi and Hassan, Ahmed E.},
  journal  = {IEEE Transactions on Software Engineering},
  title    = {Improving State-of-the-art Compression Techniques for Log Management Tools},
  year     = {2021},
  issn     = {1939-3520},
  pages    = {1-1},
  abstract = {Log data records important runtime information about the running of a software system for different purposes including performance assurance, capacity planning, and anomaly detection. Log management tools such as ELK Stack and Splunk are widely adopted to manage and leverage log data in order to assist DevOps in real-time log analytics and decision making. To enable fast queries and to save storage space, such tools split log data into small blocks (e.g., 16KB), then index and compress each block separately. Previous log compression studies focus on improving the compression of either large-sized log files or log streams, without considering improving the compression of small log blocks (the actual compression need by modern log management tools). The evaluation of four state-of-the-art compression approaches (e.g., Logzip, a variation of Logzip by pre-extracting log templates named Logzip-E, LogArchive and Cowic) indicates that these approaches do not perform well on small log blocks. In fact, the compressed blocks that are preprocessed using Logzip, Logzip-E, LogArchive or Cowic are even larger (on median 1.3 times, 1.5 times, 0.2 times or 6.6 times) than the compressed blocks without any preprocessing. Hence, we propose an approach named LogBlock to preprocess small log blocks before compressing them with a general compressor such as gzip, deflate and lz4, which are widely adopted by log management tools. Logblock reduces the repetitiveness of logs by preprocessing the log headers and rearranging the log content leading to an improved compression ratio for a log file. Our evaluation on 16 log files shows that, for 16KB to 128KB block sizes, the compressed blocks by LogBlock are on median 5% to 21% smaller than the same compressed blocks without preprocessing (outperforming the state-of-the-art compression approaches). LogBlock achieves both a higher compression ratio (a median of 1.7 to 8.4 times, 1.9 to 10.0 times, 1.3 to 1.9 times and 6.2 to 11.4 times) and a faster compression speed (a median of 30.8 to 49.7 times, 42.6 to 53.8 times, 4.5 to 6.0 times and 2.5 to 4.0 times) than Logzip, Logzip-E, LogArchive and Cowic. LogBlock can help improve the storage efficiency of log management tools.},
  doi      = {10.1109/TSE.2021.3069958},
  keywords = {Tools;Indexes;IP networks;Software systems;Runtime;Monitoring;Message systems;Software log compression;Software logging;Log management tools F},
}

@InProceedings{Gholamian2021,
  author    = {Gholamian, Sina and Ward, Paul A. S.},
  booktitle = {2021 IEEE/ACM 18th International Conference on Mining Software Repositories (MSR)},
  title     = {On the Naturalness and Localness of Software Logs},
  year      = {2021},
  month     = {May},
  pages     = {155-166},
  abstract  = {Logs are an essential part of the development and maintenance of large and complex software systems as they contain rich information pertaining to the dynamic content and state of the system. As such, developers and practitioners rely heavily on the logs to monitor their systems. In parallel, the increasing volume and scale of the logs, due to the growing complexity of modern software systems, renders the traditional way of manual log inspection insurmountable. Consequently, to handle large volumes of logs efficiently and effectively, various prior research aims to automate the analysis of log files. Thus, in this paper, we begin with the hypothesis that log files are natural and local and these attributes can be applied for automating log analysis tasks. We guide our research with six research questions with regards to the naturalness and localness of the log files, and present a case study on anomaly detection and introduce a tool for anomaly detection, called ANALOG, to demonstrate how our new findings facilitate the automated analysis of logs.},
  doi       = {10.1109/MSR52588.2021.00028},
  issn      = {2574-3864},
  keywords  = {Manuals;Tools;Maintenance engineering;Inspection;Software systems;Complexity theory;Task analysis;software systems;logging statements;log files;entropy;natural language processing;naturalness;localness;natural language processing (NLP);anomaly detection},
}

@InProceedings{Li2021,
  author    = {Li, Zhenhao and Li, Heng and Chen, Tse-Hsun and Shang, Weiyi},
  booktitle = {2021 IEEE/ACM 43rd International Conference on Software Engineering (ICSE)},
  title     = {DeepLV: Suggesting Log Levels Using Ordinal Based Neural Networks},
  year      = {2021},
  month     = {May},
  pages     = {1461-1472},
  abstract  = {Developers write logging statements to generate logs that provide valuable runtime information for debugging and maintenance of software systems. Log level is an important component of a logging statement, which enables developers to control the information to be generated at system runtime. However, due to the complexity of software systems and their runtime behaviors, deciding a proper log level for a logging statement is a challenging task. For example, choosing a higher level (e.g., error) for a trivial event may confuse end users and increase system maintenance overhead, while choosing a lower level (e.g., trace) for a critical event may prevent the important execution information to be conveyed opportunely. In this paper, we tackle the challenge by first conducting a preliminary manual study on the characteristics of log levels. We find that the syntactic context of the logging statement and the message to be logged might be related to the decision of log levels, and log levels that are further apart in order (e.g., trace and error) tend to have more differences in their characteristics. Based on this, we then propose a deep-learning based approach that can leverage the ordinal nature of log levels to make suggestions on choosing log levels, by using the syntactic context and message features of the logging statements extracted from the source code. Through an evaluation on nine large-scale open source projects, we find that: 1) our approach outperforms the state-of-the-art baseline approaches; 2) we can further improve the performance of our approach by enlarging the training data obtained from other systems; 3) our approach also achieves promising results on cross-system suggestions that are even better than the baseline approaches on within-system suggestions. Our study highlights the potentials in suggesting log levels to help developers make informed logging decisions.},
  doi       = {10.1109/ICSE43902.2021.00131},
  issn      = {1558-1225},
  keywords  = {Runtime;Manuals;Syntactics;Maintenance engineering;Software systems;Feature extraction;Task analysis;logs;deep learning;log level;empirical study},
}

@InProceedings{Candido2021,
  author    = {Cândido, Jeanderson and Haesen, Jan and Aniche, Maurício and van Deursen, Arie},
  booktitle = {2021 IEEE/ACM 18th International Conference on Mining Software Repositories (MSR)},
  title     = {An Exploratory Study of Log Placement Recommendation in an Enterprise System},
  year      = {2021},
  month     = {May},
  pages     = {143-154},
  abstract  = {Logging is a development practice that plays an important role in the operations and monitoring of complex systems. Developers place log statements in the source code and use log data to understand how the system behaves in production. Unfortunately, anticipating where to log during development is challenging. Previous studies show the feasibility of leveraging machine learning to recommend log placement despite the data imbalance since logging is a fraction of the overall code base. However, it remains unknown how those techniques apply to an industry setting, and little is known about the effect of imbalanced data and sampling techniques. In this paper, we study the log placement problem in the code base of Adyen, a large-scale payment company. We analyze 34,526 Java files and 309,527 methods that sum up +2M SLOC. We systematically measure the effectiveness of five models based on code metrics, explore the effect of sampling techniques, understand which features models consider to be relevant for the prediction, and evaluate whether we can exploit 388,086 methods from 29 Apache projects to learn where to log in an industry setting. Our best performing model achieves 79% of balanced accuracy, 81% of precision, 60% of recall. While sampling techniques improve recall, they penalize precision at a prohibitive cost. Experiments with open-source data yield under-performing models over Adyen's test set; nevertheless, they are useful due to their low rate of false positives. Our supporting scripts and tools are available to the community.},
  doi       = {10.1109/MSR52588.2021.00027},
  issn      = {2574-3864},
  keywords  = {Industries;Measurement;Training;Biological system modeling;Training data;Machine learning;Production;Log Placement;Log Recommendation;Logging Practices;Supervised Learning},
}

@InProceedings{Vervaet2021,
  author    = {Vervaet, Arthur},
  booktitle = {2021 IEEE 37th International Conference on Data Engineering (ICDE)},
  title     = {MoniLog: An Automated Log-Based Anomaly Detection System for Cloud Computing Infrastructures},
  year      = {2021},
  month     = {April},
  pages     = {2739-2743},
  abstract  = {Within today's large-scale systems, one anomaly can impact millions of users. Detecting such events in real-time is essential to maintain the quality of services. It allows the monitoring team to prevent or diminish the impact of a failure. Logs are a core part of software development and maintenance, by recording detailed information at runtime. Such log data are universally available in nearly all computer systems. They enable developers as well as system maintainers to monitor and dissect anomalous events. For Cloud computing companies and large online platforms in general, growth is linked to the scaling potential. Automatizing the anomaly detection process is a promising way to ensure the scalability of monitoring capacities regarding the increasing volume of logs generated by modern systems. In this paper, we will introduce MoniLog, a distributed approach to detect real-time anomalies within large-scale environments. It aims to detect sequential and quantitative anomalies within a multi-source log stream. MoniLog is designed to structure a log stream and perform the monitoring of anomalous sequences. Its output classifier learns from the administrator's actions to label and evaluate the criticality level of anomalies.},
  doi       = {10.1109/ICDE51399.2021.00317},
  issn      = {2375-026X},
  keywords  = {Cloud computing;Three-dimensional displays;Runtime;Scalability;Quality of service;Maintenance engineering;Real-time systems;Anomaly Detection;Log Analysis;Log Instability;Log Parsing},
}

@Article{Liu2021a,
  author   = {Liu, Zhongxin and Xia, Xin and Lo, David and Xing, Zhenchang and Hassan, Ahmed E. and Li, Shanping},
  journal  = {IEEE Transactions on Software Engineering},
  title    = {Which Variables Should I Log?},
  year     = {2021},
  issn     = {1939-3520},
  month    = {Sep.},
  number   = {9},
  pages    = {2012-2031},
  volume   = {47},
  abstract = {Developers usually depend on inserting logging statements into the source code to collect system runtime information. Such logged information is valuable for software maintenance. A logging statement usually prints one or more variables to record vital system status. However, due to the lack of rigorous logging guidance and the requirement of domain-specific knowledge, it is not easy for developers to make proper decisions about which variables to log. To address this need, in this work, we propose an approach to recommend logging variables for developers during development by learning from existing logging statements. Different from other prediction tasks in software engineering, this task has two challenges: 1) Dynamic labels – different logging statements have different sets of accessible variables, which means in this task, the set of possible labels of each sample is not the same. 2) Out-of-vocabulary words – identifiers’ names are not limited to natural language words and the test set usually contains a number of program tokens which are out of the vocabulary built from the training set and cannot be appropriately mapped to word embeddings. To deal with the first challenge, we convert this task into a representation learning problem instead of a multi-label classification problem. Given a code snippet which lacks a logging statement, our approach first leverages a neural network with an RNN (recurrent neural network) layer and a self-attention layer to learn the proper representation of each program token, and then predicts whether each token should be logged through a unified binary classifier based on the learned representation. To handle the second challenge, we propose a novel method to map program tokens into word embeddings by making use of the pre-trained word embeddings of natural language tokens. We evaluate our approach on 9 large and high-quality Java projects. Our evaluation results show that the average MAP of our approach is over 0.84, outperforming random guess and an information-retrieval-based method by large margins.},
  doi      = {10.1109/TSE.2019.2941943},
  keywords = {Task analysis;Recurrent neural networks;Tools;Compounds;Vocabulary;Software maintenance;Log;logging variable;word embedding;representation learning},
}

@Article{Li2021a,
  author   = {Li, Zhenhao and Chen, Tse-Hsun Peter and Yang, Jinqiu and Shang, Weiyi},
  journal  = {IEEE Transactions on Software Engineering},
  title    = {Studying Duplicate Logging Statements and Their Relationships with Code Clones},
  year     = {2021},
  issn     = {1939-3520},
  pages    = {1-1},
  abstract = {Developers rely on software logs for a variety of tasks, such as debugging, testing, program comprehension, verification, and performance analysis. Despite the importance of logs, prior studies show that there is no industrial standard on how to write logging statements. In this paper, we focus on studying duplicate logging statements, which are logging statements that have the same static text message. Such duplications in the text message are potential indications of logging code smells, which may affect developers understanding of the dynamic view of the system. We manually studied over 4K duplicate logging statements and their surrounding code in five large-scale open source systems: Hadoop, CloudStack, Elasticsearch, Cassandra, and Flink. We uncovered five patterns of duplicate logging code smells. For each instance of the duplicate logging code smell, we further manually identify the potentially problematic (i.e., require fixes) and justifiable (i.e., do not require fixes) cases. Then, we contact developers to verify our manual study result. We integrated our manual study result and developers feedback into our automated static analysis tool, DLFinder, which automatically detects problematic duplicate logging code smells. We evaluated DLFinder on the five manually studied systems and three additional systems: Camel, Kafka and Wicket. In total, combining the results of DLFinder and our manual analysis, we reported 91 problematic duplicate logging code smell instances to developers and all of them have been fixed. We further study the relationship between duplicate logging statements, including the problematic instances of duplicate logging code smells, and code clones. We find that 83% of the duplicate logging code smell instances reside in cloned code, but 17% of them reside in micro-clones that are difficult to detect using automated clone detection tools. We also find that more than half of the duplicate logging statements reside in cloned code snippets, and a large portion of them reside in very short code blocks which may not be effectively detected by existing code clone detection tools. Our study shows that, in addition to general source code that implements the business logic, code clones may also result in bad logging practices that could increase maintenance difficulties.},
  doi      = {10.1109/TSE.2021.3060918},
  keywords = {Cloning;Manuals;Tools;Static analysis;Maintenance engineering;Java;Cloud computing;log;code smell;duplicate log;code clone;static analysis;empirical study},
}

@InProceedings{Abbasli2021,
  author    = {Abbasli, Nazrin and Ganiz, Murat Can},
  booktitle = {2021 International Conference on INnovations in Intelligent SysTems and Applications (INISTA)},
  title     = {Log and Execution Trace Analytics System},
  year      = {2021},
  month     = {Aug},
  pages     = {1-7},
  abstract  = {Log files are available on every computer system. They automatically record important run time events of operating systems or software applications. They are mainly used to find the root cause of failures. Analyzing such log files allows us to detect anomalies, problems and improve the system. Since the log files are usually unstructured or semi-structured, the important task of log analysis is to parse usually immense amount of log message strings into the human readable and actionable reports. In this paper, we propose an implementation of a machine learning based log parsing system using Named Entity Recognition which is the process of identifying and categorizing entities in the text. Our approach makes use of Bidirectional Encoder Representations from Transformers (BERT) to extract entities. The paper reports the results of experiments on two benchmark; macOS and Linux OS datasets.},
  doi       = {10.1109/INISTA52262.2021.9548437},
  keywords  = {Training;Adaptation models;Analytical models;Technological innovation;Text recognition;Linux;Bit error rate;Log Parsing;Log Analysing;NER;BERT;Drain;Tagtog},
}

@Article{Locke2021,
  author   = {Locke, Steven and Li, Heng and Chen, Tse-Hsun Peter and Shang, Weiyi and Liu, Wei},
  journal  = {IEEE Transactions on Software Engineering},
  title    = {LogAssist: Assisting Log Analysis Through Log Summarization},
  year     = {2021},
  issn     = {1939-3520},
  pages    = {1-1},
  abstract = {Logs contain valuable information about the runtime behaviors of software systems. Thus, practitioners rely on logs for various tasks such as debugging, system comprehension, and anomaly detection. However, due to the unstructured nature and large size of logs, there are several challenges that practitioners face with log analysis. In this paper, we propose a novel approach called LogAssist that tackles these challenges and assists practitioners with log analysis. LogAssist provides an organized and concise view of logs by first grouping logs into event sequences (i.e., workflows), which better illustrate the system runtime execution paths. Then, LogAssist compresses the log events in workflows by hiding consecutive events and applying n-gram modeling to identify common event sequences. We evaluated LogAssist on the logs that are generated by two open-source and one enterprise system. We find that LogAssist can reduce the number of log events that practitioners need to investigate by up to 99%. Through a user study with 19 participants, we also find that LogAssist can assist practitioners by reducing the needed time on log analysis tasks by an average of 40%. The participants also rated LogAssist an average of 4.53 out of 5 for improving their experiences of performing log analysis. Finally, we document our experiences and lessons learned from developing and adopting LogAssist in practice. We believe that LogAssist and our reported experiences may lay the basis for future analysis and interactive exploration on logs.},
  doi      = {10.1109/TSE.2021.3083715},
  keywords = {Task analysis;Runtime;Tools;Testing;Faces;Anomaly detection;Software systems;Log analysis;log compression;n-gram modeling;log abstraction;workflow characterization;log reduction},
}

@InProceedings{Rand2021,
  author    = {Rand, Jared and Miranskyy, Andriy},
  booktitle = {2021 IEEE/ACM 43rd International Conference on Software Engineering: New Ideas and Emerging Results (ICSE-NIER)},
  title     = {On Automatic Parsing of Log Records},
  year      = {2021},
  month     = {May},
  pages     = {41-45},
  abstract  = {Software log analysis helps to maintain the health of software solutions and ensure compliance and security. Existing software systems consist of heterogeneous components emitting logs in various formats. A typical solution is to unify the logs using manually built parsers, which is laborious. Instead, we explore the possibility of automating the parsing task by employing machine translation (MT). We create a tool that generates synthetic Apache log records which we used to train recurrent-neural-network-based MT models. Models' evaluation on real-world logs shows that the models can learn Apache log format and parse individual log records. The median relative edit distance between an actual real-world log record and the MT prediction is less than or equal to 28%. Thus, we show that log parsing using an MT approach is promising.},
  doi       = {10.1109/ICSE-NIER52604.2021.00017},
  keywords  = {Tools;Software systems;Security;Machine translation;Task analysis;Software engineering},
}

@InProceedings{Harty2021,
  author    = {Harty, Julian and Zhang, Haonan and Wei, Lili and Pascarella, Luca and Aniche, Maurício and Shang, Weiyi},
  booktitle = {2021 IEEE/ACM 8th International Conference on Mobile Software Engineering and Systems (MobileSoft)},
  title     = {Logging Practices with Mobile Analytics: An Empirical Study on Firebase},
  year      = {2021},
  month     = {May},
  pages     = {56-60},
  abstract  = {Software logs are of great value in both industrial and open-source projects. Mobile analytics logging enables developers to collect logs remotely from their apps running on end user devices at the cost of recording and transmitting logs across the Internet to a centralised infrastructure.This paper makes a first step in characterising logging practices with a widely adopted mobile analytics logging library, namely Firebase Analytics. We provide an empirical evaluation of the use of Firebase Analytics in 57 open-source Android applications by studying the evolution of code-bases to understand: a) the needs-in-common that push practitioners to adopt logging practices on mobile devices, and b) the differences in the ways developers use local and remote logging.Our results indicate mobile analytics logs are less pervasive and less maintained than traditional logging code. Based on our analysis, we believe logging using mobile analytics is more user centered compared to traditional logging, where the latter is mainly used to record information for debugging purposes.},
  doi       = {10.1109/MobileSoft52590.2021.00013},
  keywords  = {Debugging;Mobile handsets;Libraries;Internet;Interviews;Open source software;Monitoring;mobile analytics;mobile software development;logging engineering;software monitoring;empirical software engineering},
}

@Article{Pei2021,
  author   = {Pei, Jisheng and Wen, Lijie and Yang, Hedong and Wang, Jianmin and Ye, Xiaojun},
  journal  = {IEEE Transactions on Services Computing},
  title    = {Estimating Global Completeness of Event Logs: A Comparative Study},
  year     = {2021},
  issn     = {1939-1374},
  month    = {March},
  number   = {2},
  pages    = {441-457},
  volume   = {14},
  abstract = {Event logs are the basis of process mining techniques and tools that extract process behavior information for better understanding and optimization of business processes. While it has been widely realized that the degree of completeness of event logs may largely determine the effectiveness of these techniques, how to estimate the completeness of event logs has not yet been fully addressed. This is mainly because ground-truth process models are usually unknown. To attack this problem, we pay a closer look to several concepts and implicit assumptions in the log completeness estimation problem and characterize it as a special case of the species estimation problem in the field of statistics. Although species estimation is still an open problem, a number of statistic models and techniques with approximate solutions have been available. To investigate the relevance of these methods for event log completeness estimation, we have designed and conducted a wide scope of empirical study and quantitative experiments on both real-world and synthesized event logs to compare the performance of these methods. In addition, the completeness estimation of several important and widely used real-world events logs are reported for the first time together with some best practice experience learned through this research.},
  doi      = {10.1109/TSC.2018.2805912},
  keywords = {Estimation;Task analysis;Measurement;Computational modeling;Algorithm design and analysis;Prediction algorithms;Quality and metrics;business process management;process mining;event logs;completeness},
}

@InProceedings{Duman2021,
  author    = {Duman, Atahan and Soğukpinar, İbrahim},
  booktitle = {2021 6th International Conference on Computer Science and Engineering (UBMK)},
  title     = {Deep Learning Based Event Correlation Analysis in Information Systems},
  year      = {2021},
  month     = {Sep.},
  pages     = {209-214},
  abstract  = {Information systems and applications provide indispensable services at every stage of life, enabling us to carry out our activities more effectively and efficiently. Today, information technology systems produce many alarm and event records. These produced records often have a relationship with each other, and when this relationship is captured correctly, many interruptions that will harm institutions can be prevented before they occur. For example, an increase in the disk I/O speed of a server or a problem may cause the business software running on that server to slow down and cause different results in this slowness. Here, an institution’s accurate analysis and management of all event records, and rule-based analysis of the resulting records in certain time periods and depending on certain rules will ensure efficient and effective management of millions of alarms. In addition, it will be possible to prevent possible problems by removing the relationships between events. Events that occur in IT systems are a kind of footprint. It is also vital to keep a record of the events in question, and when necessary, these event records can be analyzed to analyze the efficiency of the systems, harmful interferences, system failure tendency, etc. By understanding the undesirable situations such as taking the necessary precautions, possible losses can be prevented. In this study, the model developed for fault prediction in systems by performing event log analysis in information systems is explained and the experimental results obtained are given.},
  doi       = {10.1109/UBMK52708.2021.9559017},
  issn      = {2521-1641},
  keywords  = {Deep learning;Computer science;Correlation;Computational modeling;Predictive models;Software;Servers;Deep Learning;Event Log;Cyber Security;Neural Networks;LSTM;GRU;RNN;Attention Mechanism},
}

@InProceedings{Zhukova2021,
  author    = {Zhukova, Nataly A. and Kulikov, Igor A. and Utkin, Nikolay Yu.},
  booktitle = {2021 XXIV International Conference on Soft Computing and Measurements (SCM)},
  title     = {The Method for Searching Patterns In Log Files of Telecommunication Devices for Monitoring their State},
  year      = {2021},
  month     = {May},
  pages     = {124-126},
  abstract  = {The article introduces a new method for searching patterns in log files of telecommunication devices for monitoring their states. An overview of the methods used in practice is presented, the significance of log files as a source of operational data provided by monitoring systems is shown. Usage of the results of processing log files allows consider operational data within the models of the telecommunication networks. Based on the real log files received from the network devices used in telecommunication networks, patterns that characterize their behavior were found. The Phyton application for searching and analyzing log files, generating operational data packets and adding them to the telecommunications networks models has been developed.},
  doi       = {10.1109/SCM52931.2021.9507157},
  keywords  = {Analytical models;Cable TV;Communications technology;Data models;Software;Real-time systems;Task analysis;telecommunication network;knowledge graph;analysis of log files;patterns},
}

@InProceedings{Marti2021,
  author    = {Martí, Felip and Forkan, Abdur Rahim Mohammad and Jayaraman, Prem Prakash and McCarthy, Chris and Ghaderi, Hadi},
  booktitle = {2021 IEEE International Conference on Pervasive Computing and Communications Workshops and other Affiliated Events (PerCom Workshops)},
  title     = {LogLiDAR: An Internet of Things Solution for Counting and Scaling Logs},
  year      = {2021},
  month     = {March},
  pages     = {413-415},
  abstract  = {Accurate counting and measurement of logs (known as log scaling) stacked in piles, is an integral part of the wood log supply chain. Currently, these tasks are manual, and hence labour intensive and prone to human errors. In this paper, we present LogLiDAR an IoT sensing-based solution for counting and scaling logs using LiDAR (Light Detection and Ranging) images. LogLiDAR incorporates an interactive user interface to explore log counting and scaling. The underlying system for processing LiDAR images is developed using a pipeline of point cloud library (PCL) algorithms. This work is the first attempt to develop an IoT-based (LiDAR) solution for counting and scaling logs for the log industry.},
  doi       = {10.1109/PerComWorkshops51409.2021.9431022},
  keywords  = {Laser radar;Three-dimensional displays;Conferences;Software algorithms;Supply chains;Pipelines;User interfaces;Wood Log;Internet of Things;Log Scaling;Point Cloud;LiDAR;Visualisation},
}

@InProceedings{Catovic2021,
  author    = {Catovic, Armin and Cartwright, Carolyn and Gebreyesus, Yasmin Tesfaldet and Ferlin, Simone},
  booktitle = {2021 IEEE/ACM 1st Workshop on AI Engineering - Software Engineering for AI (WAIN)},
  title     = {Linnaeus: A highly reusable and adaptable ML based log classification pipeline},
  year      = {2021},
  month     = {May},
  pages     = {11-18},
  abstract  = {Logs are a common way to record detailed run-time information in software. As modern software systems evolve in scale and complexity, logs have become indispensable to understanding the internal states of the system. At the same time however, manually inspecting logs has become impractical. In recent times, there has been more emphasis on statistical and machine learning (ML) based methods for analyzing logs. While the results have shown promise, most of the literature focuses on algorithms and state-of-the-art (SOTA), while largely ignoring the practical aspects. In this paper we demonstrate our end-to-end log classification pipeline, Linnaeus. Besides showing the more traditional ML flow, we also demonstrate our solutions for adaptability and re-use, integration towards large scale software development processes, and how we cope with lack of labelled data. We hope Linnaeus can serve as a blueprint for, and inspire the integration of, various ML based solutions in other large scale industrial settings.},
  doi       = {10.1109/WAIN52551.2021.00008},
  keywords  = {Machine learning algorithms;Conferences;Pipelines;Software algorithms;Machine learning;Software systems;Complexity theory;log classification;machine learning;anomaly detection;troubleshooting;automation},
}

@InProceedings{Yang2021,
  author    = {Yang, Lin and Chen, Junjie and Wang, Zan and Wang, Weijing and Jiang, Jiajun and Dong, Xuyuan and Zhang, Wenbin},
  booktitle = {2021 IEEE/ACM 43rd International Conference on Software Engineering: Companion Proceedings (ICSE-Companion)},
  title     = {PLELog: Semi-Supervised Log-Based Anomaly Detection via Probabilistic Label Estimation},
  year      = {2021},
  month     = {May},
  pages     = {230-231},
  abstract  = {PLELog is a novel approach for log-based anomaly detection via probabilistic label estimation. It is designed to effectively detect anomalies in unlabeled logs and meanwhile avoid the manual labeling effort for training data generation. We use semantic information within log events as fixed-length vectors and apply HDBSCAN to automatically clustering log sequences. After that, we also propose a Probabilistic Label Estimation approach to reduce the noises introduced by error labeling and put "labeled" instances into an attention-based GRU network for training. We conducted an empirical study to evaluate the effectiveness of PLELog on two open-source log data (i.e., HDFS and BGL). The results demonstrate the effectiveness of PLELog. In particular, PLELog has been applied to two real-world systems from a university and a large corporation, further demonstrating its practicability.},
  doi       = {10.1109/ICSE-Companion52605.2021.00106},
  issn      = {2574-1926},
  keywords  = {Training;Estimation;Training data;Probabilistic logic;Labeling;Anomaly detection;Software engineering},
}

@InProceedings{Jain2021,
  author    = {Jain, Shubham and de Buitléir, Amy and Fallon, Enda},
  booktitle = {2021 23rd International Conference on Advanced Communication Technology (ICACT)},
  title     = {An Extensible Parsing Pipeline for Unstructured Data Processing},
  year      = {2021},
  month     = {Feb},
  pages     = {312-318},
  abstract  = {Network monitoring and diagnostics systems depict the running system's state and generate enormous amounts of unstructured data through log files, print statements, and other reports. It is not feasible to manually analyze all these files due to limited resources and the need to develop custom parsers to convert unstructured data into desirable file formats. Prior research focuses on rule-based and relationship-based parsing methods to parse unstructured data into structured file formats; these methods are labor-intensive and need large annotated datasets. This paper presents an unsupervised text processing pipeline that analyses such text files, removes extraneous information, identifies tabular components, and parses them into a structured file format. The proposed approach is resilient to changes in the data structure, does not require training data, and is domain-independent. We experiment and compare topic modeling and clustering approaches to verify the accuracy of the proposed technique. Our findings indicate that combining similarity and clustering algorithms to identify data components had better accuracy than topic modeling.},
  doi       = {10.23919/ICACT51234.2021.9370654},
  issn      = {1738-9445},
  keywords  = {Pipelines;Training data;Machine learning;Metadata;Data mining;Monitoring;Text processing;Unsupervised Data Mining;Information Extraction;Clustering;Topic Modeling},
}

@Article{Liu2021b,
  author   = {Liu, Cong},
  journal  = {IEEE Transactions on Automation Science and Engineering},
  title    = {Discovery and Quality Evaluation of Software Component Behavioral Models},
  year     = {2021},
  issn     = {1558-3783},
  month    = {Oct},
  number   = {4},
  pages    = {1538-1549},
  volume   = {18},
  abstract = {Tremendous amounts of execution data are collected during software execution. These data provide rich information for software runtime behavior comprehension. The unstructured execution data may be too complex, involving multiple interleaved components and so on. Applying existing process discovery techniques results in spaghetti-like models with no clear structure and no valuable information that can be easily understood by end users. In this article, we start with the observation that a software system is composed of a group of components, and we use this information to decompose the problem into smaller independent ones by discovering a behavioral model per component. To this end, we first distill a software event log for each component from the raw software execution data. Then, we construct the hierarchical software event log by recursively applying caller-and-callee relation detection. Next, component behavioral models, represented as hierarchical Petri nets, are discovered by recursively applying existing process discovery techniques. To measure the quality of discovered models against the execution data, we transform hierarchical Petri nets to flat ones, and the quality metrics, e.g., fitness, precision, and complexity, are applied. All proposed approaches have been implemented in the open-source process mining toolkit ProM. Through the experimental evaluation using both synthetic software systems and open-source software systems, we illustrate that the proposed approach facilitates the discovery of more understandable and high-quality software behavioral models. Note to Practitioners—Software execution data record rich information on the runtime behavior of software systems. Discovering an overall behavioral model for the whole software system typically results in an extremely complicated model that hinders further comprehension and usage. With the observation that a software system is composed of a set of interacting components, this article considers the problem of discovering a behavioral model per component. The proposed techniques are implemented in the open-source process mining tool ProM, and experimental evaluations using both synthetic and real-life software systems have indicated their applicability. The proposed approaches are readily applicable to industrial-size software behavior comprehension.},
  doi      = {10.1109/TASE.2020.3008897},
  keywords = {Software systems;Data mining;Petri nets;Process modeling;Component behavioral model;component instance identification;hierarchical Petri nets;process discovery;software execution data},
}

@InProceedings{Deepa2021,
  author    = {Deepa, B and Ramesh, K},
  booktitle = {2021 7th International Conference on Advanced Computing and Communication Systems (ICACCS)},
  title     = {Production Level Data Pipeline Environment for Machine Learning Models},
  year      = {2021},
  month     = {March},
  pages     = {404-407},
  volume    = {1},
  abstract  = {Machine learning field has a plethora of options to help diagnose various medical ailments. These models and algorithms seldomly form production level tools as the designs are compromised at the implementation level. The compromise is in the form of hardcoded file paths, variables, and development in a local environment. To offer scalable, deployable and platform independent code, the machine learning models should be implemented using best software practices from the initial design phase. Whenever it is required to analyze a big amount of data, loading the complete data adds latency. This latency in analysis is commonly seen in log files and health records [1]. This paper discusses the best practices for writing production level code for an example of epileptic seizure prediction. The design, analysis and visualization is done using Python language. The packages `kedro' and `kedro-viz' are discussed in detail for electroencephalograms (EEG) readings dataset available on UCI's (University of California, Irvine) machine learning repository [2]. The packages are used to create data pipelines for developing production level code. This paper is a preliminary effort to demonstrate the basics of designing production level models including pipelines taking an example of epileptic seizure prediction.},
  doi       = {10.1109/ICACCS51430.2021.9442035},
  issn      = {2575-7288},
  keywords  = {Computational modeling;Pipelines;Software algorithms;Production;Machine learning;Predictive models;Writing;kedro;kedro-viz;python;data pipelines;machine learning model;production level code;epileptic seizure prediction},
}

@InProceedings{Jarry2021,
  author    = {Jarry, Richard and Kobayashi, Satoru and Fukuda, Kensuke},
  booktitle = {2021 IEEE 45th Annual Computers, Software, and Applications Conference (COMPSAC)},
  title     = {A Quantitative Causal Analysis for Network Log Data},
  year      = {2021},
  month     = {July},
  pages     = {1437-1442},
  abstract  = {Data logs from network devices are primary data to understand the current status of operational networks. However, since many and heterogeneous devices generate network logs, extracting information on the network status from such logs is not an easy task in network operation, e.g., root cause analysis of network events. Though multi-variate time-series based log analyses extract correlation structure of the logs, identifying causality of the network logs is still a complex and challenging problem. The state of the art algorithm called the PC algorithm had been applied to network log analysis, but it has two fundamental limitations; (1) Generated graphs still have many undirected edges, and (2) Edges have no weight (whether plausible causality or not). To overcome these two limitations, in this paper, we rely on MixedLiNGAM to network log analysis; This algorithm produces weighted DAGs from a set of multivariate log time series. In order to show the effectiveness of the proposed method, we apply MixedLiNGAM to a set of syslog data collected at a research and education network in Japan, and then compare output causal graphs generated by MixedLiNGAM and the PC algorithm. Our result demonstrates that obtained weighted directional edges help better understand the root cause of the network events.},
  doi       = {10.1109/COMPSAC51774.2021.00213},
  issn      = {0730-3157},
  keywords  = {Root cause analysis;Correlation;Conferences;Time series analysis;Software algorithms;Software;Inference algorithms;Log analysis;Network logs;Causal inference},
}

@Article{Kim2021,
  author   = {Kim, Kyoung-Sook and Pham, Dinh-Lam and Kim, Kwanghoon Pio},
  journal  = {IEEE Access},
  title    = {ρ-Algorithm: A SICN-Oriented Process Mining Framework},
  year     = {2021},
  issn     = {2169-3536},
  pages    = {139852-139875},
  volume   = {9},
  abstract = {This paper devises an algorithmic process mining framework characterized by the mathematical process model of structured information control nets (SICN) and the concept of mass-driven $\rho $ -function as a decision-making criterion of structural process patterns. In order to prove the functional correctness of the proposed algorithmic framework, this paper also implements all the related algorithms as a process mining system and carries out an operational experiment on a typical synthetic dataset of process enactment event logs prepared and released in the 4TU Centre for Research Data. The core contribution of the paper is just the algorithmic framework development named as the $\rho $ -Algorithm, which ought to be a novel approach not only for mining all the primitive process patterns, such as linear (sequential), disjunctive (selective-OR), conjunctive (parallel-AND), and repetitive (iterative-LOOP) process patterns, with perfectly keeping the structural properties of matched pairing and proper nesting, but also for reasonably discovering structured (even unstructured) information control nets from such IEEE XES-formatted datasets of process enactment event logs. The mining functionality of the $\rho $ -Algorithm is made up of three stepwise algorithms: STEP-1, STEP-2 and STEP-3 algorithms, and these algorithms are formally described as an algorithmic framework supported by the conceptual process mining architecture with a series of theoretical concepts with the temporal work-case model and the temporal loop-case model. Finally, we validate the functional correctness as well as the discovery perfectness of the proposed algorithmic framework named as $\rho $ -Algorithm by deploying the implemented $\rho $ -Algorithm on a synthetic, non-noise and IEEE XES-formatted dataset of process enactment event logs recorded from the 10,000 work-cases with 113 activities of the Petrinet-oriented process model named as the Large Bank Transaction Process Model.},
  doi      = {10.1109/ACCESS.2021.3119011},
  keywords = {Task analysis;Process control;Mathematical models;Data mining;Organizations;Standards organizations;Analytical models;Structured information control net;process mining;process reengineering;process analyzing;process discovery and rediscovery;process enactment event log datasets},
}

@Article{Guo2021,
  author   = {Guo, Yi and Guo, Shunan and Jin, Zhuochen and Kaul, Smiti and Gotz, David and Cao, Nan},
  journal  = {IEEE Transactions on Visualization and Computer Graphics},
  title    = {A Survey on Visual Analysis of Event Sequence Data},
  year     = {2021},
  issn     = {1941-0506},
  pages    = {1-1},
  abstract = {Event sequence data record series of discrete events in the time order of occurrence. They are commonly observed in a variety of applications ranging from electronic health records to network logs, with the characteristics of large-scale, high-dimensional and heterogeneous. This high complexity of event sequence data makes it difficult for analysts to manually explore and find patterns, resulting in ever-increasing needs for computational and perceptual aids from visual analytics techniques to extract and communicate insights from event sequence datasets. In this paper, we review the state-of-the-art visual analytics approaches, characterize them with our proposed design space, and categorize them based on analytical tasks and applications.},
  doi      = {10.1109/TVCG.2021.3100413},
  keywords = {Data visualization;Visual analytics;Task analysis;Data mining;Sequences;Pipelines;Medical diagnostic imaging;Visual Analysis;Event Sequences;Visualization},
}

@InProceedings{Gonzalez2021,
  author    = {Gonzalez, Danielle and Zimmermann, Thomas and Godefroid, Patrice and Schaefer, Max},
  booktitle = {2021 IEEE/ACM 43rd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP)},
  title     = {Anomalicious: Automated Detection of Anomalous and Potentially Malicious Commits on GitHub},
  year      = {2021},
  month     = {May},
  pages     = {258-267},
  abstract  = {Security is critical to the adoption of open source software (OSS), yet few automated solutions currently exist to help detect and prevent maliciouscontributions from infecting open source repositories. On GitHub, a primary host of OSS, repositories contain not only code but also a wealth of commitrelated and contextual metadata - whatifthismetadatacouldbeusedtoautomaticallyidentifymaliciousOSScontributions? In this work, we show how to use only commit logs and repository metadata to automatically detect anomalous and potentially malicious commits. We identify and evaluate several relevant factors which can be automatically computed from this data, such as the modification of sensitive files, outlier change properties, or a lack of trust in the commit's author. Our tool, Anomalicious, automatically computes these factors and considers them holistically using a rule-based decision model. In an evaluation on a data set of 15 malware-infected repositories, Anomalicious showed promising results and identified 53.33% of malicious commits, while flagging less than 1% of commits for most repositories. Additionally, the tool found other interesting anomalies that are not related to malicious commits in an analysis of repositories with no known malicious commits.},
  doi       = {10.1109/ICSE-SEIP52600.2021.00035},
  keywords  = {Ecosystems;Tools;Metadata;Security;Open source software;Software engineering;Software development management;anomaly detection;malicious commits;supply chain attacks},
}

@Article{Meng2021,
  author   = {Meng, Zhaoyi and Xiong, Yan and Huang, Wenchao and Miao, Fuyou and Huang, Jianmeng},
  journal  = {IEEE Transactions on Information Forensics and Security},
  title    = {AppAngio: Revealing Contextual Information of Android App Behaviors by API-Level Audit Logs},
  year     = {2021},
  issn     = {1556-6021},
  pages    = {1912-1927},
  volume   = {16},
  abstract = {Android users are now suffering severe threats from unwanted behaviors of various apps. The analysis of apps' audit logs is one of the essential methods for the security analysts of various companies to unveil the underlying maliciousness within apps. We propose and implement AppAngio, a novel system that reveals contextual information in Android app behaviors by API-level audit logs. Our goal is to help security analysts understand how the target apps worked and facilitate the identification of the maliciousness within apps. The key module of AppAngio is identifying the path matched with the logs on the app's control-flow graphs (CFGs). The challenge, however, is that the limited-quantity logs may incur high computational complexity in the log matching, where there are a large number of candidates caused by the coupling relation of successive logs. To address the challenge, we propose a divide and conquer strategy that precisely positions the nodes matched with log records on the corresponding CFGs and connects the nodes with as few backtracks as possible. Our experiments show that AppAngio reveals contextual information of behaviors in real-world apps. Moreover, the revealed results assist the analysts in identifying the maliciousness of app behaviors and complement existing analysis schemes. Meanwhile, AppAngio incurs negligible performance overhead on the real device in the experiments.},
  doi      = {10.1109/TIFS.2020.3044867},
  keywords = {Runtime;Security;Computational complexity;Performance evaluation;Malware;Feature extraction;Couplings;Contextual reveal;log matching;divide and conquer;Android security},
}

@Article{Chen2021,
  author   = {Chen, An Ran and Chen, Tse-Hsun Peter and Wang, Shaowei},
  journal  = {IEEE Transactions on Software Engineering},
  title    = {Pathidea: Improving Information Retrieval-Based Bug Localization by Re-Constructing Execution Paths Using Logs},
  year     = {2021},
  issn     = {1939-3520},
  pages    = {1-1},
  abstract = {To assist developers with debugging and analyzing bug reports, researchers have proposed information retrieval-based bug localization (IRBL) approaches. IRBL approaches leverage the textual information in bug reports as queries to generate a ranked list of potential buggy files that may need further investigation. Although IRBL approaches have shown promising results, most prior research only leverages the textual information that is visible in bug reports, such as bug description or title. However, in addition to the textual description of the bug, developers also often attach logs in bug reports. Logs provide important information that can be used to re-construct the system execution paths when an issue happens and assist developers with debugging. In this paper, we propose an IRBL approach, Pathidea, which leverages logs in bug reports to re-construct execution paths and helps improve the results of bug localization. Pathidea uses static analysis to create a file-level call graph, and re-constructs the call paths from the reported logs. We evaluate Pathidea on eight open source systems, with a total of 1,273 bug reports that contain logs. We find that Pathidea achieves a high recall (up to 51.9% for Top@5). On average, Pathidea achieves an improvement that varies from 8% to 21% and 5% to 21% over BRTracer in terms of Mean Average Precision (MAP) and Mean Reciprocal Rank (MRR) across studied systems, respectively. Moreover, we find that the re-constructed execution paths can also complement other IRBL approaches by providing a 10% and 8% improvement in terms of MAP and MRR, respectively. Finally, we conduct a parameter sensitivity analysis and provide recommendations on setting the parameter values when applying Pathidea.},
  doi      = {10.1109/TSE.2021.3071473},
  keywords = {Computer bugs;Location awareness;Debugging;Static analysis;Information retrieval;History;Tools;bug localization;log;bug report;information retrieval},
}

@Article{Sun2021,
  author   = {Sun, Mengyu and Zhou, Zhangbing and Xue, Xiao and Zhang, Wenbo and Hung, Patrick C. K.},
  journal  = {IEEE Internet of Things Journal},
  title    = {Service Configuration Optimization in Edge-Cloud Networks Leveraging Log Analysis},
  year     = {2021},
  issn     = {2327-4662},
  pages    = {1-1},
  abstract = {The edge-cloud collaboration network is promising to support complex requirements with temporal constraints, where a requirement can be achieved through the composition of computation-demanding and delay-sensitive services. In this setting, most services should be optimally configured at the network edge, in order to decreasing service response latency and reducing network resource consumption. To address this challenge, this paper proposes an optimal service configuration mechanism, where temporal constraints between services are mined from event logs through our temporal interval discovery mechanism. Service configuration is formulated as a constrained multi-objective optimization problem, which is solved by our improved non-dominated sorting genetic algorithm II. Extensive experiments are conducted, and evaluation results demonstrate that our approach can find the close-to-optimal service configuration in comparison with the state-of-the-art techniques in terms of delay sensitivity and energy efficiency, especially when edge nodes can co-host a relatively large number of services.},
  doi      = {10.1109/JIOT.2021.3112609},
  keywords = {Business;Cloud computing;Internet of Things;Task analysis;Optimization;Delays;Registers;Service Configuration Optimization;Edge-Cloud Networks;Temporal Constraints;Log Analysis.},
}

@InProceedings{ShuangChang2021,
  author    = {ShuangChang, Feng and Pengzhao, Zhang and Wenhao, Shen and Jie, Chen},
  booktitle = {2021 IEEE International Conference on Artificial Intelligence and Industrial Design (AIID)},
  title     = {Research on elevator speed governor calibration software based on image processing},
  year      = {2021},
  month     = {May},
  pages     = {517-520},
  abstract  = {As a momentous device to ensure the safety of the elevator operation, the speed governor plays an important protective role of the safety control components in the event of overspeed and rope breaking. In order to judge the action of the speed governor, this article research and develop a software which carries out color processing, statistics and detection on the images according to the photos of the governor. The software can achieve picture browsing and reading function, image processing and parameter adjustment function, statistical results display function and log output function. Through processing the image and outputting the situation of the governor, the software provides professional reference of the elevator safety for the inspector. By comparing the obtained electric action speed with the specified value in the standard, the inspector can judge whether the operation speed of the speed governor meets the requirements.},
  doi       = {10.1109/AIID51893.2021.9456495},
  keywords  = {Image color analysis;Conferences;Software;Elevators;Safety;Calibration;Artificial intelligence;elevator inspection;speed governor;image processing},
}

@InProceedings{Steverson2021,
  author    = {Steverson, Kai and Carlin, Caleb and Mullin, Jonathan and Ahiskali, Metin},
  booktitle = {2021 International Conference on Military Communication and Information Systems (ICMCIS)},
  title     = {Cyber Intrusion Detection using Natural Language Processing on Windows Event Logs},
  year      = {2021},
  month     = {May},
  pages     = {1-7},
  abstract  = {This paper applies deep learning and natural language processing to Windows Event Logs for the purpose of detecting cyber attacks. Data is collected from an emulated network that models an enterprise network. The network experiences a cyber attack that uses a spear phishing email and the eternal blue exploit to spread botnet malware. A machine learning anomaly detection algorithm is constructed using the transformer model and self-supervised training. The model is able to detect both the compromised devices as well as attack timing with near perfect precision and recall. These results suggest that this approach could function as the detection portion of an autonomous end point defense system wherein each device is able to react independently to potential intrusions.},
  doi       = {10.1109/ICMCIS52405.2021.9486307},
  keywords  = {Training;Military communication;Machine learning algorithms;Phishing;Intrusion detection;Natural language processing;Malware;cybersecurity;machine learning;artificial intelligence;natural language processing;botnet},
}

@InProceedings{Henkel2021,
  author    = {Henkel, Jordan and Silva, Denini and Teixeira, Leopoldo and d’Amorim, Marcelo and Reps, Thomas},
  booktitle = {2021 IEEE/ACM 43rd International Conference on Software Engineering (ICSE)},
  title     = {Shipwright: A Human-in-the-Loop System for Dockerfile Repair},
  year      = {2021},
  month     = {May},
  pages     = {1148-1160},
  abstract  = {Docker is a tool for lightweight OS-level virtualization. Docker images are created by performing a build, controlled by a source-level artifact called a Dockerfile. We studied Dockerfiles on GitHub, and-to our great surprise-found that over a quarter of the examined Dockerfiles failed to build (and thus to produce images). To address this problem, we propose SHIPWRIGHT, a human-in-the-loop system for finding repairs to broken Dockerfiles. SHIPWRIGHT uses a modified version of the BERT language model to embed build logs and to cluster broken Dockerfiles. Using these clusters and a search-based procedure, we were able to design 13 rules for making automated repairs to Dockerfiles. With the aid of SHIPWRIGHT, we submitted 45 pull requests (with a 42.2% acceptance rate) to GitHub projects with broken Dockerfiles. Furthermore, in a "time-travel" analysis of broken Dockerfiles that were later fixed, we found that SHIPWRIGHT proposed repairs that were equivalent to human-authored patches in 22.77% of the cases we studied. Finally, we compared our work with recent, state-of-the-art, static Dockerfile analyses, and found that, while static tools detected possible build-failure-inducing issues in 20.6-33.8% of the files we examined, SHIPWRIGHT was able to detect possible issues in 73.25% of the files and, additionally, provide automated repairs for 18.9% of the files.},
  doi       = {10.1109/ICSE43902.2021.00106},
  issn      = {1558-1225},
  keywords  = {Bit error rate;Maintenance engineering;Tools;Virtualization;Software development management;Software engineering;Docker;DevOps;Repair},
}

@Article{Pham2021,
  author   = {Pham, Dinh-Lam and Ahn, Hyun and Kim, Kyoung-Sook and Kim, Kwanghoon Pio},
  journal  = {IEEE Access},
  title    = {Process-Aware Enterprise Social Network Prediction and Experiment Using LSTM Neural Network Models},
  year     = {2021},
  issn     = {2169-3536},
  pages    = {57922-57940},
  volume   = {9},
  abstract = {Process mining that exploits system event logs provides significant information regarding operating events in an organization. By discovering process models and analyzing social network metrics created throughout the operation of the information system, we can better understand the roles of performers and characteristics of activities, and more easily predict what will occur in the next operation of a system. By using accurate and valuable predicted information, we can create effective environments, provide suitable materials to perform activities better, and facilitate more efficient operations. In this study, we apply the long short-term memory, a variant of the recurrent neural network, to predict the enterprise social networks that are formed through information regarding a business system's operation. More precisely, we apply the multivariate multi-step long short-term memory model to predict not only the next activity and next performer, but also all the variants of a process-aware enterprise social network based on the next performer predictions using a probability threshold. Furthermore, we conduct an experimental evaluation on the real-life event logs and compare our results with some related researches. The results indicate that our approach creates a useful model to predict an enterprise social network and provides metrics to improve the operation of an information system based on the predicted information.},
  doi      = {10.1109/ACCESS.2021.3071789},
  keywords = {Predictive models;Mathematical model;Social networking (online);Training;Recurrent neural networks;Modulation;Data models;Process mining;long short-term memory neural network;process-aware enterprise social network;next event prediction},
}

@InProceedings{Shobhit2021,
  author    = {Shobhit and Bera, Padmalochan},
  booktitle = {2021 International Conference on Cyber Situational Awareness, Data Analytics and Assessment (CyberSA)},
  title     = {ModCGAN: A Multimodal Approach to Detect New Malware},
  year      = {2021},
  month     = {June},
  pages     = {1-2},
  abstract  = {Advancements in deep learning have enabled the development of effective solutions to different real-world problems. In this paper, we propose a deep learning model for malware detection in computing and network systems. The architecture of our proposed system consists of three modules, namely Image auto-encoder, Text auto-encoder, and GAN. Any incoming application should go through a proxy to create a log file. The log files that contain API call sequences are used to generate image and text representations that capture the dynamic behavior of the malware. Our system integrates the features from image and text auto-encoder into a single feature vector. The feature vector extracted is individually used to classify whether the log file is from a malware application. We have created a new dataset containing different newly generated malware of similar distribution. In the detection phase, the incoming log file is converted into a single feature vector by the same method as in generation. Based on the similarity index between the newly generated malware and incoming file, log files are classified as malware or benign. Thus, the newly generated dataset serves as a comparison base for the classification of log files. We have evaluated our system through a test dataset by comparing it with the newly generated malware.},
  doi       = {10.1109/CyberSA52016.2021.9478232},
  keywords  = {Deep learning;Data analysis;Computational modeling;Computer architecture;Feature extraction;Generative adversarial networks;Malware;Dynamic analysis;types of attacks;autoencoders;generative adversarial networks;malware generation;similarity calculation},
}

@InProceedings{Wu2021,
  author    = {Wu, Qiulin and Zhou, You and Wu, Fei and Wang, Ke and Lv, Hao and Wan, Jiguang and Xie, Changsheng},
  booktitle = {2021 Design, Automation Test in Europe Conference Exhibition (DATE)},
  title     = {SW-WAL: Leveraging Address Remapping of SSDs to Achieve Single-Write Write-Ahead Logging},
  year      = {2021},
  month     = {Feb},
  pages     = {802-807},
  abstract  = {Write-ahead logging (WAL) has been widely used to provide transactional atomicity in databases, such as SQLite and MySQL/InnoDB. However, the WAL introduces duplicate writes, where changes are recorded in the WAL file and then written to the database file, called checkpointing writes. On the other hand, NAND flash-based SSDs, which have an inherent indirection software layer, called flash translation layer (FTL), become commonplace in modern storage systems. Innovative SSD designs have been proposed to eliminate the WAL overheads by exploiting the FTL, such as providing an atomic write interface or utilizing its address remapping. However, these designs introduce significant performance overheads of maintaining and persisting extra transactional information to guarantee the transactional atomicity or mapping consistency. In this paper, we propose single-write WAL (SW-WAL), a novel cross-layer design, to eliminate WAL-induced duplicate writes on SSDs with minimal overheads. The SSD exposes an address remapping interface to the host, through which the checkpointing writes can be completed without conducting real data writes. To ensure the transactional atomicity and mapping consistency, we make the SSD aware of the transactional writes to the WAL file. Specifically, when transactional data are written to the WAL file, both transactional and mapping semantics are delivered from the host to the SSD and persisted in relevant flash pages as housekeeping metadata without any extra overheads. We implement a prototype of SW-WAL, which runs a popular database SQLite on an emulated NVMe SSD. Experimental results show that SW-WAL improves the database performance by up to 62% compared with original SQLite that bears the WAL overheads and up to 32% compared with the state-of-the-art design that eliminates the WAL overheads.},
  doi       = {10.23919/DATE51398.2021.9473923},
  issn      = {1558-1101},
  keywords  = {Checkpointing;Databases;Atomic layer deposition;System performance;Semantics;Prototypes;Metadata},
}

@Article{Ma2021,
  author   = {Ma, Chenlin and Shen, Zhaoyan and Wang, Jihe and Wang, Yi and Chen, Renhai and Guan, Yong and Shao, Zili},
  journal  = {IEEE Transactions on Computers},
  title    = {Tiler: An Autonomous Region-Based Scheme for SMR Storage},
  year     = {2021},
  issn     = {1557-9956},
  month    = {Feb},
  number   = {2},
  pages    = {291-304},
  volume   = {70},
  abstract = {Shingled Magnetic Recording (SMR) Disks are adopted as a high-density, non-volatile media that significantly precedes conventional disks in both the storage capacity and cost. However, inefficient read-modify-writes (RMWs) greatly challenge the management of SMR disks. This article for the first time presents an approach called Tiler to manage SMR disks by dividing the physical space into small autonomous regions (ARs). Each AR can manage its space allocation, address mapping, and cleaning independently. By managing these ARs in a log-structured way, RMWs can be avoided; besides, ARs can also help update data when the adjacent tracks contain no valid data. Tiler is capable of partitioning a large-scale cleaning into self-contained-small-scale cleaning and thus, the data that need to be relocated are limited inside independent ARs, which further minimizes the performance overhead. Our experimental results show that Tiler can shorten the overall system response time by 50.21 percent and reduce the cleaning time by 90.24 percent on average.},
  doi      = {10.1109/TC.2020.2988004},
  keywords = {Cleaning;Writing;Computer science;Magnetic recording;Memory management;Resource management;Time factors;Shingled magnetic recording;cache management;garbage collection},
}

@InProceedings{AmirMohammadian2021,
  author    = {Amir-Mohammadian, Sepehr and Zowj, Afsoon Yousefi},
  booktitle = {2021 IEEE 45th Annual Computers, Software, and Applications Conference (COMPSAC)},
  title     = {Towards Concurrent Audit Logging in Microservices},
  year      = {2021},
  month     = {July},
  pages     = {1357-1362},
  abstract  = {Information-algebraic models have been shown as effective semantic frameworks in the specification of audit logging requirements. These semantic frameworks underlie implementation models that formally guarantee correctness of audit logs. Recently, one such implementation model has been proposed for concurrent systems. In this paper, we study the deployment of an instrumentation tool based on this implementation model, aiming at microservices-based applications that are built by Java Spring framework. This tool instruments these applications according to a given logging specification, described in JSON. A set of events in one or more microservices may necessitate the generation of log entries in a specific microservice. Instrumentation of an application enables different microservices of that application to concurrently generate audit logs.},
  doi       = {10.1109/COMPSAC51774.2021.00191},
  issn      = {0730-3157},
  keywords  = {Java;Logic programming;Instruments;Conferences;Semantics;Restful API;Tools;Audit logs;concurrent systems;microservices;programming languages;security},
}

@InProceedings{Maurya2021,
  author    = {Maurya, Vinod Kumar and Chaudhari, Swati and Sirohi, Deepak Kumar and Tomar, Shailendra and Rajan, Alpana and Rawat, Anil},
  booktitle = {2021 2nd International Conference on Secure Cyber Computing and Communications (ICSCCC)},
  title     = {Inimitable Approach to Detect amp; Quarantine Botnet Malware Infections in Network},
  year      = {2021},
  month     = {May},
  pages     = {238-243},
  abstract  = {Internet connected organizational networks are susceptible to malware attacks. Best of the existing anti malware solutions are known to detect only 80% of the malwares. Latest heuristic algorithms based antimalware solutions can also fail at times in resource constrained environments. Thus organizations have to formulate additional strategies to tackle malware attacks which escape detection by standard end point security systems. Special categories of malware called botnets are the most prominent and dangerous forms, which can cause large scale damage if not quarantined timely. These days, organizations mostly use proxy servers to access the Internet, thus traces of botnets using HTTP based communication channels can be extracted from proxy logs. We experimented with the Squid proxy log analysis techniques for detection of such botnets and have developed a system which provides potential solution to quarantine malware infected PCs in an organization. In this paper, we present the design, development and analysis of complete system. The system incorporates necessary functions to provide complete life cycle management of such PCs, starting from isolation to reinstatement in the production network. The system has been implemented in our organization having 2500 active users and two squid proxy servers. It has been observed that CPU utilization on the proxy servers is reduced by about 20% and the size of access log files by about 25%, which is a big gain for organizations with large number of users.},
  doi       = {10.1109/ICSCCC51823.2021.9478117},
  keywords  = {Botnet;Standards organizations;Organizations;Malware;Servers;Security;Communication networks;Anti malware;Heuristic;Squid Proxy;Access log;Botnet;TCP_DENIED;quarantine},
}

@InProceedings{Kiperberg2021,
  author    = {Kiperberg, Michael and Amit, Guy and Yeshooroon, Amir and Zaidenberg, Nezer J.},
  booktitle = {2021 IEEE/ACM 21st International Symposium on Cluster, Cloud and Internet Computing (CCGrid)},
  title     = {Efficient DLP-visor: An efficient hypervisor-based DLP},
  year      = {2021},
  month     = {May},
  pages     = {344-355},
  abstract  = {Many organization consider insider threat for data theft to be one of the most severe threats. An insider may also leak sensitive information without malicious intent (as a result of social engineering) Data leakage prevention (DLP) systems attempt to prevent intentional or accidental disclosure of sensitive information by monitoring the content or the context in which the information is transferred, for example, in a file system, an email server, instant messengers. We present a context-sensitive DLP system, called Efficient DLP-Visor. We implemented DLP-visor as a thin hypervisor capable of intercepting system calls in Windows operating systems equipped with Kernel Patch Protection. By intercepting system calls that govern the file system, inter-process communications, networking, system register and system clipboard, DLP-Visor guarantees that sensitive information can never leave a predefined set of directories. The performance overhead of Efficient DLP-Visor (7.2%) allows its deployment in real-world applications. Efficient DLP-visor logs were improved for better detection and logging of a DLP event. On idle time Efficient DLP-visor deletes most of the data log while maintaining the important data of leaks and attack.},
  doi       = {10.1109/CCGrid51090.2021.00044},
  keywords  = {Cloud computing;Virtual machine monitors;File systems;Organizations;Registers;Servers;Kernel},
}

@Article{Koo2021,
  author   = {Koo, Jinhyung and Chung, Chanwoo and Arvind and Lee, Sungjin},
  journal  = {IEEE Transactions on Computers},
  title    = {A Case for Application-Managed Flash},
  year     = {2021},
  issn     = {1557-9956},
  month    = {Feb},
  number   = {2},
  pages    = {240-254},
  volume   = {70},
  abstract = {We propose a new I/O architecture for NAND flash-based SSDs, called application-managed flash (AMF) and present two case studies to show its usefulness. In a typical SSD controller, an intermediate software layer, called the flash translation layer (FTL), is employed between NAND flash chips and a host interface. The main responsibility of an FTL is to provide interoperability with conventional HDDs, but this interoperability comes at the cost of extra hardware resources and degraded I/O performance. The proposed AMF refactors the flash storage architecture so that an SSD controller exposes append-only segments, which do not permit overwriting. This refactoring dramatically improves performance of applications and reduces hardware costs by allowing applications to directly manage flash storage with minimal supports from the SSD controller. In order to understand the benefits of AMF, we study two popular applications: a log-structured file system (F2FS) and a key-value store (RocksDB). Our experiments show that the DRAM in the flash controller is reduced by 128X and the performances of the file system and the key-value store improve by 80 and 54 percent, respectively, over conventional SSDs.},
  doi      = {10.1109/TC.2020.2987569},
  keywords = {Computer architecture;Hardware;Software;Media;Geometry;Interoperability;Random access memory;NAND flash;solid-state disks;file system;key-value store;flash translation layer},
}

@InProceedings{Gugnani2021,
  author    = {Gugnani, Shashank and Li, Tianxi and Lu, Xiaoyi},
  booktitle = {2021 IEEE International Parallel and Distributed Processing Symposium (IPDPS)},
  title     = {NVMe-CR: A Scalable Ephemeral Storage Runtime for Checkpoint/Restart with NVMe-over-Fabrics},
  year      = {2021},
  month     = {May},
  pages     = {172-181},
  abstract  = {Emerging SSDs with NVMe-over-Fabrics (NVMf) support provide new opportunities to significantly improve the performance of IO-intensive HPC applications. However, state-of-the-art parallel filesystems can not extract the best possible performance from fast NVMe SSDs and are not designed for latency-critical ephemeral IO tasks, such as checkpoint/restart. In this paper, we propose a powerful abstraction called microfs to peel away unnecessary software layers and eliminate namespace coordination. Building upon this abstraction, we present the design of NVMe-CR, a scalable ephemeral storage runtime for clusters with disaggregated compute and storage. NVMe-CR proposes techniques like metadata provenance, log record coalescing, and logically isolated shared device access, built around the microfs abstraction, to reduce the overhead of writing millions of concurrent checkpoint files. NVMe-CR utilizes high-density allflash arrays accessible via NVMf to absorb bursty checkpoint IO and increase the progress rates of applications obliviously. Using the ECP CoMD application as a use case, results show that our runtime can achieve near perfect (> 0.96) efficiency at 448 processes and reduce checkpoint overhead by as much as 2x compared to state-of-the-art storage systems.},
  doi       = {10.1109/IPDPS49936.2021.00026},
  issn      = {1530-2075},
  keywords  = {Distributed processing;Runtime;Buildings;Writing;Metadata;Software;Task analysis;Checkpoint/Restart;NVMe;NVMf;Exascale},
}

@Article{Ezeme2021,
  author   = {Ezeme, Okwudili M. and Azim, Akramul and Mahmoud, Qusay H.},
  journal  = {IEEE Transactions on Emerging Topics in Computing},
  title    = {PESKEA: Anomaly Detection Framework for Profiling Kernel Event Attributes in Embedded Systems},
  year     = {2021},
  issn     = {2168-6750},
  month    = {April},
  number   = {2},
  pages    = {957-971},
  volume   = {9},
  abstract = {In the software development life cycle, we use the execution traces of a given application to examine the behavior of the software when an error occurs or to monitor the software performance and compliance. However, this type of application trace analysis focuses on checking the performance of the software against its design goals. Conversely, the operating system (OS) sits between the application and the hardware, and traces logged from this layer capture the behavior of the embedded system and not just the application. Hence, an analysis of the kernel events captures the system-wide performance of the embedded system. Consequently, we present a feature-based anomaly detection framework called PESKEA, which exploits the statistical variance of the features in the execution traces of an embedded OS to perform trace classification, and subsequently, anomaly detection. We test PESKEA with two public datasets we refer to as Dataset I and Dataset II. On Dataset I, PESKEA results show a 3 to 6 percent improvement in the true positive rate (TPR) of Dataset I compared to the previous work tested on this dataset, and scores between 88.37 to 100 percent in Dataset II. We hope to test PESKEA on non-UAV embedded control application datasets in future work.},
  doi      = {10.1109/TETC.2020.2971251},
  keywords = {Anomaly detection;Embedded systems;Feature extraction;Monitoring;Kernel;Hardware;Context modeling;anomaly detection framework;embedded operating system;machine learning},
}

@Article{Ahn2021,
  author   = {Ahn, Hyun and Kim, Kwanghoon Pio},
  journal  = {IEEE Access},
  title    = {Organizational Closeness Centralities of Workflow-Supported Performer-to-Activity Affiliation Networks},
  year     = {2021},
  issn     = {2169-3536},
  pages    = {48555-48582},
  volume   = {9},
  abstract = {A workflow model specifies execution sequences of the associated activities and their affiliated relationships with roles, performers, invoked-applications, and relevant data. These affiliated relationships exhibit a series of valuable human-centered organizational knowledge and are utilized for exploring human resource's work patterns. This paper focuses not only on a specific type of affiliated relationships between performers and activities, in particular, which forms a performer-to-activity affiliation network, but also on a specific type of analysis techniques, which builds a closeness centrality measurement approach for quantifying the degrees of farnesses between performers as well as between activities. In other words, this paper investigates a series of formal approaches for building organizational closeness centrality measurement techniques on the specific type of affiliation networks. The investigation mainly deploys two types of algorithmic formalisms along with an operational example, which are measuring performer-centered organizational closeness centralities and activity-centered organizational closeness centralities, respectively. In order to validate the deployed algorithmic equations, the paper carries out a couple of operational experiments; One is on an ICN-based workflow package and the other is on a discovered workflow model mined from a dataset of workflow event logs. Summarily, this paper devises a series of algorithms and equations for measuring closeness centralities of activities, verify the devised algorithms and their related equations along with operational examples, and discuss the ultimate implications of these analysis techniques of organizational closeness centrality measurements as the performer-to-activity affiliation networking knowledge in workflow-supported organizations.},
  doi      = {10.1109/ACCESS.2021.3065925},
  keywords = {Social networking (online);Knowledge engineering;Visualization;Organizations;Analytical models;Mathematical model;Particle measurements;Workflow process;performer-activity affiliations;information control net;organizational social network;workflow-supported affiliation network;closeness centrality;workflow intelligence;human resource management},
}

@InProceedings{Kumar2021,
  author    = {Kumar, Amit and Sivak Kumar, M. and Namdeo, Varsha},
  booktitle = {2021 International Conference on Computing, Communication, and Intelligent Systems (ICCCIS)},
  title     = {A Regression-based Hybrid Machine Learning Technique to Enhance the Database Migration in Cloud Environment},
  year      = {2021},
  month     = {Feb},
  pages     = {149-155},
  abstract  = {The report of cloud computing in recent years has prompted circumstances that usually has lead to numerous advancements & novel mechanisms. The technologies available in the cloud have been prevalent for businesses as well as people who understand that cloud computing is a significant problem, even though they don't know why. We present a methodology that accurately assesses the migration cost, relocation length with cloud operating cost of the social databases, and upgraded the execution. The first step in our approach is to acquire workloads and structure models for moving the database from the database logs as well as from schemes. The second step uses these models to perform a discrete form of event simulation for estimated costs and time. We have implemented the software tools that simplify our approach in both phases. A comprehensive review contrasts our approach to the effects of real-world cloud data migration.},
  doi       = {10.1109/ICCCIS51004.2021.9397123},
  keywords  = {Cloud computing;Databases;Computational modeling;Machine learning;Tools;Software reliability;Software tools;Cloud Computing;Database Migration;Hybrid HGSA;Enterprise Systems},
}

@InProceedings{Perera2021,
  author    = {Perera, Akalanka and Rathnayaka, Shanith and Perera, N. D. and Madushanka, W.W. and Senarathne, Amila Nuwan},
  booktitle = {2021 6th International Conference for Convergence in Technology (I2CT)},
  title     = {The Next Gen Security Operation Center},
  year      = {2021},
  month     = {April},
  pages     = {1-9},
  abstract  = {Due to the evolving Cyber threat landscape, Cyber criminals have found new and ingenious ways of breaching defenses in networks. Due to the sheer destruction these threat actors can cause to an organization, most modern-day organizations have focused their attention towards protecting their critical infrastructure and sensitive information through multiple methods. The main defense against both internal and external threats to an organization has been the implementation of the Security Operations Center (SOC) which is responsible for monitoring, analyzing and mitigating incoming threats. At the heart of the Security Operations Center, lies the Security Information and Event Management system (SIEM) which is utilized by SOC analysts as the centralized point where all security notifications from various security technologies including firewalls, IPS/IDS and Anti-Virus logs are collected and visualized. The effective operation of SOC in an organization is dependent on how well the SIEM filters log events and generates actual alerts. Here lies the major problem faced by SOC analysts in detecting threats. If proper alert correlation is not accomplished, analysts would have to deal with too much alert noise due to a high false positive count. This would ultimately cause analysts to miss critical security incidents, thus causing severe implications to the organization's security. The performance of a SIEM can be enhanced through adding various functionalities such as Threat Hunting, Threat Intelligence and malware identification and prevention in order to reduce false positive alarms, threat framework and machine learning which would increase the accuracy and efficiency of the overall Security Operations process of an organization. Even though many products which provide these additional functionalities exist in the current market, they can be too expensive for smaller scale organizations to handle. Our aim is to make security operations deliverable to any organization regardless of the size and scale without any financial implications and enhance its functionalities with the aid of Advanced Machine Learning Techniques.},
  doi       = {10.1109/I2CT51068.2021.9418136},
  keywords  = {Clustering algorithms;Machine learning;Artificial neural networks;Companies;Tools;Security;Feeds;K-Means;Natural Language Processing (NLP);Machine Learning algorithm;Threat Intelligence;Artificial Neural Network (ANN);Security Operation Center (SOC);security incident and event management (SIEM)},
}

@Article{Mu2021,
  author   = {Mu, Dongliang and Du, Yunlan and Xu, Jianhao and Xu, Jun and Xing, Xinyu and Mao, Bing and Liu, Peng},
  journal  = {IEEE Transactions on Software Engineering},
  title    = {POMP++: Facilitating Postmortem Program Diagnosis with Value-Set Analysis},
  year     = {2021},
  issn     = {1939-3520},
  month    = {Sep.},
  number   = {9},
  pages    = {1929-1942},
  volume   = {47},
  abstract = {With the emergence of hardware-assisted processor tracing, execution traces can be logged with lower runtime overhead and integrated into the core dump. In comparison with an ordinary core dump, such a new post-crash artifact provides software developers and security analysts with more clues to a program crash. However, existing works only rely on the resolved runtime information, which leads to the limitation in data flow recovery within long execution traces. In this work, we propose POMP++, an automated tool to facilitate the analysis of post-crash artifacts. More specifically, POMP++ introduces a reverse execution mechanism to construct the data flow that a program followed prior to its crash. Furthermore, POMP++ utilizes Value-set Analysis, which helps to verify memory alias relation, to improve the ability of data flow recovery. With the restored data flow, POMP++ then performs backward taint analysis and highlights program statements that actually contribute to the crash. We have implemented POMP++ for Linux system on x86-32 platform, and tested it against various crashes resulting from 31 distinct real-world security vulnerabilities. The evaluation shows that, our work can pinpoint the root causes in 29 cases, increase the number of recovered memory addresses by 12 percent and reduce the execution time by 60 percent compared with existing reverse execution. In short, POMP++ can accurately and efficiently pinpoint program statements that truly contribute to the crashes, making failure diagnosis significantly convenient.},
  doi      = {10.1109/TSE.2019.2939528},
  keywords = {Computer crashes;Software;Security;Core dumps;Registers;Runtime;Tools;Postmortem program diagnosis;failure diagnosis;reverse execution;value-set analysis},
}

@Article{Wu2021a,
  author   = {Wu, Sung-Ming and Lin, Kai-Hsiang and Chang, Li-Pin},
  journal  = {IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems},
  title    = {Integrating LSM Trees With Multichip Flash Translation Layer for Write-Efficient KVSSDs},
  year     = {2021},
  issn     = {1937-4151},
  month    = {Jan},
  number   = {1},
  pages    = {87-100},
  volume   = {40},
  abstract = {Log-structured-merge (LSM) trees are a highly write-optimized data structure for lightweight, high-performance key-value (KV) stores. Furthermore, solid-state drives (SSDs) are a crucial component for I/O acceleration. Conventional LSM-over-SSD designs involve multiple software layers, including the LSM tree, host file system, and flash translation layer (FTL), which introduce cascading write amplifications. To manage the write amplifications from different layers, we propose KVSSDs, which are a close integration of LSM trees and the FTL. KVSSDs exploit the FTL mapping mechanism to implement copy-free compaction of LSM trees, and they enables direct data allocation in flash memory for efficient garbage collection. Our design also uses a fine-grained, dynamic striping policy to fully exploit the rich internal parallelism of multichip SSDs. The experimental results indicated that our LSM-SSD integrated design reduced the write amplification by 86% and improved the throughput by 383% compared with a conventional LSM-over-SSD design.},
  doi      = {10.1109/TCAD.2020.2987781},
  keywords = {Compaction;Software;Parallel processing;Throughput;Writing;Resource management;Integrated design;Flash memory;key-value (KV) store;log-structured-merge (LSM) tree;solid-state drive (SSD)},
}

@InProceedings{Letourneau2021,
  author    = {Létourneau, Louis-Simon and El Jabri, Chaymae and Frappier, Marc and Tardif, Pierre-Martin and Lépine, Guy and Boisvert, Guillaume},
  booktitle = {2021 51st Annual IEEE/IFIP International Conference on Dependable Systems and Networks Workshops (DSN-W)},
  title     = {Statistical Approach For Cloud Security: Microsoft Office 365 audit logs case study},
  year      = {2021},
  month     = {June},
  pages     = {15-18},
  abstract  = {Detecting abnormal user interaction with a computer system is paramount to prevent unauthorized access. With the growth in the use of cloud services, both from a personal and business perspective, cloud service accounts are a profitable target for cyber attacks. This work is a practical attempt to improve SaaS security through accessible and adaptable solutions. We used kernel density estimation in order to classify events from Microsoft audit logs. We were able to model the active hours of each user within an organization and then detect when an action was made outside of these hours.},
  doi       = {10.1109/DSN-W52860.2021.00014},
  issn      = {2325-6664},
  keywords  = {Conferences;Estimation;Organizations;Machine learning;Bandwidth;Random variables;Kernel;anomaly detection;SaaS security;kernel density estimation;unsupervised learning},
}

@InProceedings{Bichhawat2021,
  author    = {Bichhawat, Abhishek and Fredrikson, Matt and Yang, Jean},
  booktitle = {2021 IEEE 34th Computer Security Foundations Symposium (CSF)},
  title     = {Automating Audit with Policy Inference},
  year      = {2021},
  month     = {June},
  pages     = {1-16},
  abstract  = {The risk posed by high-profile data breaches has raised the stakes for adhering to data access policies for many organizations, but the complexity of both the policies themselves and the applications that must obey them raises significant challenges. To mitigate this risk, fine-grained audit of access to private data has become common practice, but this is a costly, time-consuming, and error-prone process.We propose an approach for automating much of the work required for fine-grained audit of private data access. Starting from the assumption that the auditor does not have an explicit, formal description of the correct policy, but is able to decide whether a given policy fragment is partially correct, our approach gradually infers a policy from audit log entries. When the auditor determines that a proposed policy fragment is appropriate, it is added to the system’s mechanized policy, and future log entries to which the fragment applies can be dealt with automatically. We prove that for a general class of attribute-based data policies, this inference process satisfies a monotonicity property which implies that eventually, the mechanized policy will comprise the full set of access rules, and no further manual audit is necessary. Finally, we evaluate this approach using a case study involving synthetic electronic medical records and the HIPAA rule, and show that the inferred mechanized policy quickly converges to the full, stable rule, significantly reducing the amount of effort needed to ensure compliance in a practical setting.},
  doi       = {10.1109/CSF51468.2021.00001},
  issn      = {2374-8303},
  keywords  = {Organizations;Medical services;Manuals;Data breach;Inference algorithms;Complexity theory;Electronic medical records;Auditing;policy inference;logic;access control},
}

@InProceedings{Dass2021,
  author    = {Dass, Shuvalaxmi and Datta, Prerit and Namin, Akbar Siami},
  booktitle = {2021 IEEE 45th Annual Computers, Software, and Applications Conference (COMPSAC)},
  title     = {Attack Prediction using Hidden Markov Model},
  year      = {2021},
  month     = {July},
  pages     = {1695-1702},
  abstract  = {It is important to predict any adversarial attacks and their types to enable effective defense systems. Often it is hard to label such activities as malicious ones without adequate analytical reasoning. We propose the use of Hidden Markov Model (HMM) to predict the family of related attacks. Our proposed model is based on the observations often agglomerated in the form of log files and from the target or the victim’s perspective. We have built an HMM-based prediction model and implemented our proposed approach using Viterbi algorithm, which generates a sequence of states corresponding to stages of a particular attack. As a proof of concept and also to demonstrate the performance of the model, we have conducted a case study on predicting a family of attacks called Action Spoofing.},
  doi       = {10.1109/COMPSAC51774.2021.00253},
  issn      = {0730-3157},
  keywords  = {Viterbi algorithm;Computational modeling;Conferences;Software algorithms;Hidden Markov models;Predictive models;Prediction algorithms;Hidden Markov Model;Viterbi algorithm;At-tack prediction;Attack family;Action spoofing},
}

@InBook{Dalbhanjan2021,
  author    = {Dalbhanjan, Ronald and Chatterjee, Sudipta and Gogoi, Rajdeep and Pathak, Tanuj and Sahay, Shivam},
  pages     = {51-66},
  publisher = {River Publishers},
  title     = {3 Implementation of Honeypot, NIDs, and HIDs Technologies in SOC Environment},
  year      = {2021},
  isbn      = {9788770224222},
  abstract  = {The cybersecurity industry is often disinclined to adopt new technologies due to perceived complications, assumed dependencies, and unclear information about the benefits. Putting the right information security architecture into practice within an organization can be an intimidating challenge. Many organizations have enforced a security information and event management (SIEM) system to comply with the logging requirements of various security standards, only to find that it does not meet their information security expectations. They do not get the benefit of the value they spend on the proprietary SIEM tools. The solution should be simple, affordable, and maintainable with readily available resources and open-source products. The aim of this study is to understand honeypot technologies, networkbased intrusion detection systems (NIDS) and host-based intrusion detection systems (HIDS), and their implementation in a scalable security operation center (SOC) environment with the help of open-source tools which would include monitoring and investigation. Based on our learning, we have designed a virtualized SOC environment protected with firewall solution like pfSense, threat hunting solution like Security Onion which can be used for monitoring network traffic both internally and externally, further integrated with honeypot technology, i.e., T-Pot for better security enhancements. Threat intelligence information from this study is used to prepare, prevent, and identify cyber threats looking to take advantage of valuable resources. Lastly, conclusions and recommendations from our study will provide the best practices for implementing effective defense tools for various micro, small and medium enterprises (MSME) with affordable budgets.},
  booktitle = {Implementing Enterprise Cybersecurity with Open-Source Software and Standard Architecture},
  url       = {https://ieeexplore-ieee-org.proxy.lib.uwaterloo.ca/document/9514772},
}

@InProceedings{Patel2021,
  author    = {Patel, Mansi and Prabhu, S Raja and Agrawal, Animesh Kumar},
  booktitle = {2021 8th International Conference on Computing for Sustainable Global Development (INDIACom)},
  title     = {Network Traffic Analysis for Real-Time Detection of Cyber Attacks},
  year      = {2021},
  month     = {March},
  pages     = {642-646},
  abstract  = {Preventing the cyberattacks has been a concern for any organization. In this research, the authors propose a novel method to detect cyberattacks by monitoring and analyzing the network traffic. It was observed that the various log files that are created in the server does not contain all the relevant traces to detect a cyberattack. Hence, the HTTP traffic to the web server was analyzed to detect any potential cyberattacks. To validate the research, a web server was simulated using the Opensource Damn Vulnerable Web Application (DVWA) and the cyberattacks were simulated as per the OWASP standards. A python program was scripted that captured the network traffic to the DVWA server. This traffic was analyzed in real-time by reading the various HTTP parameters viz., URLs, Get / Post methods and the dependencies. The results were found to be encouraging as all the simulated attacks in real-time could be successfully detected. This work can be used as a template by various organizations to prevent any insider threat by monitoring the internal HTTP traffic.},
  doi       = {10.1109/INDIACom51348.2021.00113},
  keywords  = {Standards organizations;Telecommunication traffic;Organizations;Real-time systems;Web servers;Monitoring;Cyberattack;Network forensics;network traffic;insider attack;DVWA;Python},
}

@InProceedings{Hernandez2021,
  author    = {Hernandez, Julio and McKenna, Lucy and Brennan, Rob},
  booktitle = {2021 IEEE 45th Annual Computers, Software, and Applications Conference (COMPSAC)},
  title     = {TIKD: A Trusted Integrated Knowledge Dataspace For Sensitive Healthcare Data Sharing},
  year      = {2021},
  month     = {July},
  pages     = {1855-1860},
  abstract  = {This paper presents the Trusted Integrated Knowledge Dataspace (TIKD), a new dataspace, based on linked data technologies and trusted data sharing, that supports integrated knowledge graphs for sensitive application environments such as healthcare. State-of-the-art shared dataspaces do not consider sensitive data and privacy-aware log records as part of their solutions, defining only how to access data. TIKD complements dataspace security approaches through trusted data sharing that considers personal data handling, data privileges, pseudonymization of user activity logging, and privacy-aware data interlinking services. TIKD was implemented on the Access Risk Knowledge (ARK) Platform, a socio-technical risk governance system, and deployed as part of the ARK-Virus Project which aims to govern the risk management of Personal Protection Equipment (PPE) across a group of collaborating healthcare institutions. The ARK Platform was evaluated, both before and after implementing the TIKD, using the ISO 27001 Gap Analysis Tool (GAT) which determines compliance with the information security standard. The results of the evaluation indicated that compliance with ISO 27001 increased from 50% to 85%. The evaluation also provided a set of recommended actions to meet the remaining requirements of the ISO 27001 standard. TIKD provides a collaborative environment, based on knowledge graph integration and GDPR-compliant personal data handling, as part of the data security infrastructure. As a result of this work, a new trusted data security methodology, based on personal data handling, data privileges, access control context specification, and privacy-aware data interlinking, was developed using a knowledge graph approach.},
  doi       = {10.1109/COMPSAC51774.2021.00280},
  issn      = {0730-3157},
  keywords  = {Access control;ISO Standards;Data handling;Data security;Linked data;Collaboration;Medical services;Dataspace;Knowledge Graph;Trusted Data;Personal Data Handling},
}

@Article{Yeshchenko2021,
  author   = {Yeshchenko, Anton and Di Ciccio, Claudio and Mendling, Jan and Polyvyanyy, Artem},
  journal  = {IEEE Transactions on Visualization and Computer Graphics},
  title    = {Visual Drift Detection for Sequence Data Analysis of Business Processes},
  year     = {2021},
  issn     = {1941-0506},
  pages    = {1-1},
  abstract = {Event sequence data is increasingly available in various application domains, such as business process management, software engineering, or medical pathways. Processes in these domains are typically represented as process diagrams or flow charts. So far, various techniques have been developed for automatically generating such diagrams from event sequence data. An open challenge is the visual analysis of drift phenomena when processes change over time. In this paper, we address this research gap. Our contribution is a system for fine-granular process drift detection and corresponding visualizations for event logs of executed business processes. We evaluated our system both on synthetic and real-world data. On synthetic logs, we achieved an average F-score of 0.96 and outperformed all the state-of-the-art methods. On real-world logs, we identified all types of process drifts in a comprehensive manner. Finally, we conducted a user study highlighting that our visualizations are easy to use and useful as perceived by process mining experts. In this way, our work contributes to research on process mining, event sequence analysis, and visualization of temporal data.},
  doi      = {10.1109/TVCG.2021.3050071},
  keywords = {Business;Data visualization;Data mining;Visualization;Erbium;Antibiotics;Guidelines;Sequence data;Visualization;Temporal data;Process mining;Process drifts;Declarative process models},
}

@InProceedings{AnangOthman2021,
  author    = {Anang Othman, Nurul Amira binti and Zolkapli, Maizatul and Hairuddin, Muhammad Asraf and Hassan, Harnani and Manut, Azrif and Zoolfakar, Ahmad Sabirin and Abdullah, Noor Ezan},
  booktitle = {2021 IEEE Regional Symposium on Micro and Nanoelectronics (RSM)},
  title     = {The Development of IoT-based Solar Battery Monitoring System},
  year      = {2021},
  month     = {Aug},
  pages     = {34-37},
  abstract  = {The solar photovoltaic (PV) system has become the key attraction for the generation of clean, renewable electricity. Nevertheless, performance varies due to different parameters and environmental factors. Therefore, a remote and real- performance is required to evaluate its performance. The Internet of Things (IoT) in the monitoring of the solar PV system has been implemented and its efficiency has been studied. The monitoring system uses real-time measured values to display power, current, voltage, temperature, and light intensity graphs, and it is also easy to track and view the database file to analyze the history of the collected data. The design work was divided into two main sections, hardware, and software. The hardware includes the creation of major units such as the power supply unit, the control unit and the sensor units while the software includes the database system and pulled the data out into private webpage and visualization on Grafana dashboard. This paper aims to create an IoT-based Solar Battery Monitoring System using two microcontrollers, Arduino UNO and NodeMCU. The data obtained will be stored in the local database and can be viewed through a personal web page that serves as a data log and through a visualization tool using Grafana. Throughout the system, users can easily track their solar PV system over the internet.},
  doi       = {10.1109/RSM52397.2021.9511610},
  issn      = {2639-4642},
  keywords  = {Temperature measurement;Temperature sensors;Voltage measurement;Power measurement;Current measurement;Real-time systems;Software;solar photovoltaic system;Internet of Things;MySQL;Grafana},
}

@InProceedings{Baser2021,
  author    = {Başer, Melike and Güven, Ebu Yusuf and Aydın, Muhammed Ali},
  booktitle = {2021 6th International Conference on Computer Science and Engineering (UBMK)},
  title     = {SSH and Telnet Protocols Attack Analysis Using Honeypot Technique : *Analysis of SSH AND TELNET Honeypot},
  year      = {2021},
  month     = {Sep.},
  pages     = {806-811},
  abstract  = {Generally, the defense measures taken against new cyber-attack methods are insufficient for cybersecurity risk management. Contrary to classical attack methods, the existence of undiscovered attack types called’ zero-day attacks’ can invalidate the actions taken. It is possible with honeypot systems to implement new security measures by recording the attacker’s behavior. The purpose of the honeypot is to learn about the methods and tools used by the attacker or malicious activity. In particular, it allows us to discover zero-day attack types and develop new defense methods for them. Attackers have made protocols such as SSH (Secure Shell) and Telnet, which are widely used for remote access to devices, primary targets. In this study, SSHTelnet honeypot was established using Cowrie software. Attackers attempted to connect, and attackers record their activity after providing access. These collected attacker log records and files uploaded to the system are published on Github to other researchers1. We shared the observations and analysis results of attacks on SSH and Telnet protocols with honeypot.},
  doi       = {10.1109/UBMK52708.2021.9558948},
  issn      = {2521-1641},
  keywords  = {Protocols;Information security;Tools;Particle measurements;Safety;Risk management;IP networks;SSH;TELNET;Honeypot;Cowrie;Cyber Attack},
}

@InProceedings{Ude2021,
  author    = {Ude, Okechukwu and Swar, Bobby},
  booktitle = {2021 4th IEEE International Conference on Industrial Cyber-Physical Systems (ICPS)},
  title     = {Securing Remote Access Networks Using Malware Detection Tools for Industrial Control Systems},
  year      = {2021},
  month     = {May},
  pages     = {166-171},
  abstract  = {With their role as an integral part of its infrastructure, Industrial Control Systems (ICS) are a vital part of every nation's industrial development drive. Despite several significant advancements - such as controlled-environment agriculture, automated train systems, and smart homes, achieved in critical infrastructure sectors through the integration of Information Systems (IS) and remote capabilities with ICS, the fact remains that these advancements have introduced vulnerabilities that were previously either nonexistent or negligible, one being Remote Access Trojans (RATs). Present RAT detection methods either focus on monitoring network traffic or studying event logs on host systems. This research's objective is the detection of RATs by comparing actual utilized system capacity to reported utilized system capacity. To achieve the research objective, open-source RAT detection methods were identified and analyzed, a GAP-analysis approach was used to identify the deficiencies of each method, after which control algorithms were developed into source code for the solution.},
  doi       = {10.1109/ICPS49255.2021.9468212},
  keywords  = {Integrated circuits;Industrial control;Telecommunication traffic;Smart homes;Rats;Tools;Object recognition;Industrial control systems;operational technology;remote access trojans;malware detection;Purdue control hierarchy;hash calculation;confidentiality;integrity;availability},
}

@InProceedings{Kriaa2021,
  author    = {Kriaa, Siwar and Chaabane, Yahia},
  booktitle = {2021 12th International Conference on Information and Communication Systems (ICICS)},
  title     = {SecKG: Leveraging attack detection and prediction using knowledge graphs},
  year      = {2021},
  month     = {May},
  pages     = {112-119},
  abstract  = {Advanced persistent threats targeting sensitive corporations, are becoming today stealthier and more complex, coordinating different attacks steps and lateral movements, and trying to stay undetected for long time. Classical security solutions that rely on signature-based detection can be easily thwarted by malware using obfuscation and encryption techniques. More recent solutions are using machine learning approaches for detecting outliers. Nevertheless, the majority of them reason on tabular unstructured data which can lead to missing obvious conclusions. We propose in this paper a novel approach that leverages a combination of both knowledge graphs and machine learning techniques to detect and predict attacks. Using Cyber Threat Intelligence (CTI), we built a knowledge graph that processes event logs in order to not only detect attack techniques, but also learn how to predict them.},
  doi       = {10.1109/ICICS52457.2021.9464587},
  issn      = {2573-3346},
  keywords  = {Industries;Scalability;Focusing;Machine learning;Predictive models;Real-time systems;Malware;knowledge graphs;cyber threat intelligence;attack modeling;attack detection;attack prediction},
}

@Article{Venkatesh2021,
  author   = {Venkatesh, Sushma and Ramachandra, Raghavendra and Raja, Kiran and Busch, Christoph},
  journal  = {IEEE Transactions on Technology and Society},
  title    = {Face Morphing Attack Generation and Detection: A Comprehensive Survey},
  year     = {2021},
  issn     = {2637-6415},
  month    = {Sep.},
  number   = {3},
  pages    = {128-145},
  volume   = {2},
  abstract = {Face recognition has been successfully deployed in real-time applications, including secure applications such as border control. The vulnerability of face recognition systems (FRSs) to various kinds of attacks (both direct and indirect attacks) and face morphing attacks has received great interest from the biometric community. The goal of a morphing attack is to subvert an FRS at an automatic border control (ABC) gate by presenting an electronic machine-readable travel document (eMRTD) or e-passport that is obtained based on a morphed face image. Since the application process for an e-passport in the majority of countries requires a passport photograph to be presented by the applicant, a malicious actor and an accomplice can generate a morphed face image to obtain the e-passport. An e-passport with a morphed face image can be used by both the malicious actor and the accomplice to cross a border, as the morphed face image can be verified against both of them. This can result in a significant threat, as a malicious actor can cross the border without revealing the trace of his/her criminal background, while the details of the accomplice are recorded in the log of the access control system. This survey aims to present a systematic overview of the progress made in the area of face morphing in terms of both morph generation and morph detection. In this article, we describe and illustrate various aspects of face morphing attacks, including different techniques for generating morphed face images and state-of-the-art morph attack detection (MAD) algorithms based on a stringent taxonomy as well as the availability of public databases, which allow us to benchmark new MAD algorithms in a reproducible manner. The outcomes of competitions and benchmarking, vulnerability assessments, and performance evaluation metrics are also provided in a comprehensive manner. Furthermore, we discuss the open challenges and potential future areas that need to be addressed in the evolving field of biometrics.},
  doi      = {10.1109/TTS.2021.3066254},
  keywords = {Face recognition;Faces;Benchmark testing;Open source software;Tools;Taxonomy;Strain;Attack detection;biometrics;face recognition;morphing attack;vulnerability},
}

@Article{Parekh2021,
  author   = {Ashly Parekh and Mijail Serruya and Namrata Grampurohit and Thomas Kelly and Joe Kardine and Joely Mass and Alessandro Napoli},
  journal  = {Archives of Physical Medicine and Rehabilitation},
  title    = {Restoring Moderate to Severe Loss of Upper Extremity Function Post-stroke with a Neuromotor Prosthesis: A Case Report},
  year     = {2021},
  issn     = {0003-9993},
  number   = {10},
  pages    = {e51-e52},
  volume   = {102},
  abstract = {Research Objectives
To study the effect of a wearable, powered exoskeleton orthosis controlled by a brain-computer interface (BCI) on upper extremity function in a single participant with moderate to severe hemiparesis.
Design
Single subject design with pretest, mid, and posttest.
Setting
Home and outpatient.
Participants
Participant was a 41-year old right-hand-dominant male with moderate to severe (Fugl-meyer upper extremity [FM-UE] 33/66) left-sided hemiparesis due to a stroke that occurred 18 months prior, with left homonymous hemianopsia, left hemi-neglect, left central VII nerve palsy, and spasticity in the weakened left upper extremity. The stroke lesioned the right lentiform nucleus and adjacent white matter.
Interventions
Brain implants were surgically placed within the right precentral gyrus region of the cortex, representing the left hand. The 12-week intervention consisted of neuromotor prosthesis training with BCI controlling the powered exoskeleton and biofeedback for controlling a game cursor; physical therapy once/week; occupational therapy twice/week.
Main Outcome Measures
Action Research Arm Test (ARAT), FM-UE, Motor Activity Log (MAL) domains of Amount of Use (AOU) and Quality of Movement (QOM)
Results
ARAT scores with the powered exoskeleton were greater with BCI (change: 10-point, 18%) than with myoelectric control (change: 5-points, 9%). Upper extremity outcomes exceeded the minimal clinically important difference thresholds for FM-UE (change: 8-point, 21%), MAL-AOU (change: 18.5-points, 12%), and MAL-QOM (Change: 17-point, 11%).
Conclusions
The results indicate promising outcomes of the neuromotor prosthesis on upper extremity function for a single participant with potential for future research with implanted systems combined with therapy.
Author(s) Disclosures
Drs. Serruya and Napoli are inventors on a US provisional patent application that has been filed by Thomas Jefferson University on the software methods used in this study to map neural activity into orthosis control.},
  doi      = {https://doi.org/10.1016/j.apmr.2021.07.618},
  keywords = {Orthotic Device, Rehabilitation, Stroke Upper Extremity, Paresis},
  url      = {https://www.sciencedirect.com/science/article/pii/S0003999321011424},
}

@Article{Huang2021,
  author   = {Xumin Huang and Zipeng Lu and Kai Zhang and Guangfu Wang and Baobao Cai and Pengfei Wu and Jie Yin and Yi Miao and Kuirong Jiang},
  journal  = {Pancreatology},
  title    = {Prognostic impact of the ratio of preoperative CA19-9 to liver enzyme levels in pancreatic cancer patients with jaundice (predictability of combined CA19-9/AST and CA19-9/γ-GGT for jaundiced PDAC patients)},
  year     = {2021},
  issn     = {1424-3903},
  number   = {6},
  pages    = {1092-1101},
  volume   = {21},
  abstract = {Background
Carbohydrate antigen 19–9 (CA19-9) has been reported as the most significant survival predictor of patients with pancreatic ductal adenocarcinoma (PDAC). However, the elevation of CA19-9 could interfere with obstructive jaundice and the predictive value of CA19-9 in PDAC patients with jaundice remains to be analyzed and elucidated to find possible adjustments.
Objective
To evaluate the predictability of preoperative CA19-9 and its adjustments for the overall survival (OS) of PDAC patients by analyzing the relationship between preoperative serum CA19-9 and total bilirubin (TBIL).
Methods
A total of 563 consecutive patients who underwent surgery for primary pancreatic adenocarcinoma in our center between January 2015 and September 2018 were retrospectively reviewed. Clinicopathologic information was collected and preoperative parameters such as CA19-9, CEA, TBIL, γ-GGT, AST, ALT, and ALP were recorded as well as overall survival rates, which began from the date of operation to that of death or the last follow-up. Kaplan-Meier survival curves with log-rank test and Cox regression models were applied using SPSS and the survival and survminer packages in R software.
Results
Using 39/390/1000 as the cut-off values for preoperative serum CA19-9, significant capability of OS stratification was found in the total cohort (p < 0.001, MST = 29.7/19.1/15.2/12.1 months) and patients with TBIL <102.6 μmol/L (p < 0.001, MST = 32.2/19.6/15.0/11.2 months). However, in the subgroup of TBIL≥102.6 μmol/L, this classification method was replaced by the combined scoring of CA19-9/AST and CA19-9/γ-GGT.
Conclusions
As an independent predictor of overall survival of PDAC patients, preoperative serum CA19-9 is defective in survival stratification when TBIL≥102.6 μmol/L but a positive survival prognosis could be achieved with the application of combined preoperative CA19-9/AST and CA19-9/γ-GGT.},
  doi      = {https://doi.org/10.1016/j.pan.2021.05.300},
  keywords = {CA19-9, Liver enzyme, Pancreatic cancer, Survival predictor, Total bilirubin},
  url      = {https://www.sciencedirect.com/science/article/pii/S1424390321004701},
}

@Article{Krosman2021,
  author   = {Kazimierz Krosman and Janusz Sosnowski and Piotr Gawkowski},
  journal  = {Expert Systems with Applications},
  title    = {Object oriented time series exploration: Applied to power consumption analysis of embedded systems},
  year     = {2021},
  issn     = {0957-4174},
  pages    = {115531},
  volume   = {184},
  abstract = {Performance monitoring and anomaly detection are major issues in designing and maintaining electronic devices and systems. In recent years, they become more difficult due to the increased complexity of hardware and software. Hence, an important point is to collect representative signal samples and reveal characteristic features allowing to evaluate device operational profiles. This results in the need of an efficient time series analysis. This problem is considered in relevance to embedded systems and Internet of Things devices. The paper presents a new scheme of decomposing time series by introducing higher level objects targeted at the searched system properties. They create a compact state model which facilitates deriving knowledge on system behaviour to validate correctness of its operation. The collected samples are aggregated into objects according to predefined similarity metrics, these objects can be traced, correlated, and merged with relevant operational log events. For this purpose, a set of original algorithms have been composed and included in the developed software tool. The presented approach has been evaluated on a representative dataset obtained from commercial Holter devices and was used to explore their energy consumption efficiency.},
  doi      = {https://doi.org/10.1016/j.eswa.2021.115531},
  keywords = {Time series decomposition, Feature extraction, Power consumption analysis, Anomaly detection, Data exploration},
  url      = {https://www.sciencedirect.com/science/article/pii/S0957417421009398},
}

@Article{UrmenetaUlloa2021,
  author   = {Javier {Urmeneta Ulloa} and Eduardo {Pozo Osinalde} and Juan Lizandro Rodríguez-Hernández and Hugo {Martínez Fernández} and Fabián Islas and Alberto {de Agustín} and Pedro Marcos-Alberca and Patricia Mahía and Miguel Ángel Cobos and Paula {Hernández Mateo} and José Ángel Cabrera and María {Luaces Méndez} and José Juan {Gómez de Diego} and Ana Bustos and Carlos Macaya and Leopoldo {Pérez de Isla}},
  journal  = {Revista Española de Cardiología},
  title    = {Deformación miocárdica en miocardiopatía dilatada no isquémica mediante feature tracking. Factibilidad e implicaciones pronósticas},
  year     = {2021},
  issn     = {0300-8932},
  number   = {2},
  pages    = {159-166},
  volume   = {74},
  abstract = {Resumen
Introducción y objetivos
El análisis de la deformación miocárdica puede aportar información adicional a la fracción de eyección del ventrículo izquierdo (FEVI) en la miocardiopatía dilatada no isquémica (MDNI). El objetivo es analizar la factibilidad del estudio del strain del ventrículo izquierdo mediante feature tracking (FT) de cardiorresonancia magnética en la MDNI y determinar su relevancia clínica y pronóstica.
Métodos
Se incluyó retrospectivamente a los pacientes consecutivos con MDNI sometidos a cardiorresonancia magnética. Se obtuvieron el strain global longitudinal, circunferencial y radial del ventrículo izquierdo de secuencias convencionales de cine mediante un software de análisis de FT. Se evaluó su asociación con el evento combinado (insuficiencia cardiaca, implante de desfibrilador en prevención secundaria y muerte).
Resultados
Se pudo realizar el FT en los 98 pacientes evaluados (edad, 68± 13 años; el 72% varones). La concordancia intraobservador e interobservadores fue buena para el strain global longitudinal y circunferencial, y más limitada para el radial. El strain global circunferencial se asoció de manera independiente (OR=1,16; p=0,045) con la normalización de la FEVI en el seguimiento y fue el único parámetro morfológico con asociación independiente (OR=1,15; p=0,038) con el evento combinado. Un valor <–8,2% fue capaz de predecir la aparición de este evento en el seguimiento (Log-rank test, 4,6; p=0,032)
Conclusiones
El análisis del strain del ventrículo izquierdo mediante FT es factible y reproducible en MDNI. El strain global circunferencial fue capaz de predecir la recuperación de la FEVI y la aparición de eventos cardiovasculares mayores en el seguimiento.
Introduction and objectives
Myocardial strain analysis could provide additional information to left ventricular ejection fraction (LVEF) in nonischemic dilated cardiomyopathy (NIDC). Our aim was to analyze the feasibility of left ventricular strain evaluation using cardiac magnetic resonance feature tracking (FT) in NIDC, and to determine its clinical and prognostic impact.
Methods
We retrospectively included consecutive patients with NIDC who underwent cardiac magnetic resonance. Left ventricular global longitudinal, circumferential and radial strain were obtained from standard cine sequences using FT analysis software. We evaluated their association with a composite endpoint (heart failure, implantable cardioverter-defibrillator in secondary prevention, or death).
Results
FT analysis could be performed in all of the 98 patients (mean age 68±13 years, 72% men). Intra- and interobserver concordance was good for global longitudinal and circumferential strain but was worse for radial strain. Global circumferential strain was independently associated (OR, 1.16; P=.045) with LVEF normalization during follow-up and was the only morphological parameter independently associated with the composite endpoint (OR, 1.15; P=.038). A cutoff value <−8.2% was able to predict the incidence of this event during follow-up (log-rank 4.6; P=.032).
Conclusions
Left ventricular strain analysis with FT is feasible and reproducible in NIDC. Global circumferential strain was able to predict LVEF recovery and the appearance of major cardiovascular events during follow-up. Full English text available from:www.revespcardiol.org/en},
  doi      = {https://doi.org/10.1016/j.recesp.2019.12.018},
  keywords = {Miocardiopatía dilatada, Deformación miocárdica, , Cardiorresonancia magnética, Dilated cardiomyopathy, Myocardial strain, Feature tracking, Cardiac magnetic resonance},
  url      = {https://www.sciencedirect.com/science/article/pii/S0300893219306104},
}

@Article{Parveen2021,
  author   = {Ruksar Parveen and N Sandeep Varma},
  journal  = {Global Transitions Proceedings},
  title    = {Code Quality Improvement for Intel Windows Graphics Driver},
  year     = {2021},
  issn     = {2666-285X},
  abstract = {There are already many software tools present and many application software's that being developed. These is because the technology needs to be updated according to the requirements. During these busy times, Developing and updating technologies is itself a big challenge. If any bugs occur in future or to keep track of features are added are working properly according to requirements, it needs some tools to keep track of it. For these things to happen, it requires some methodology to improve debug time like ETL (Event Trace Log) for multiple display features. The other things are that, code that is written today has to be written in such a way that it could be used for at least next 10 years. This will reduce the time of adding the same code simultaneously. Collecting the ETL in the encoded form helps in securing the sensitive information present in the trace log. Adding more testing codes in Unit Test Framework (UTF) find more bugs at early stages which will reduce the code cost. Adding MMIO (Memory Mapped I/O) verifier rules as the part of UTF helps in register verification (Simulates real Hardware context). Addition of MMIO rules for existing and new display features in separate xml file for different platforms makes it easy to identify in which platform feature failure in happening. All these methods help in code quality improvements for Intel Windows Graphics Driver.},
  doi      = {https://doi.org/10.1016/j.gltp.2021.08.011},
  keywords = {ETL, Graphics Driver, Logging, Platforms, UTF, Verifier Rules},
  url      = {https://www.sciencedirect.com/science/article/pii/S2666285X2100039X},
}

@Article{Chow2021,
  author   = {Ryan A. Chow and Nelly Tan and Travis S Henry and Jeffrey P. Kanne and Aarti Sekhar},
  journal  = {Academic Radiology},
  title    = {Peer Learning Through Multi-Institutional Case Conferences: Abdominal and Cardiothoracic Radiology Experience},
  year     = {2021},
  issn     = {1076-6332},
  number   = {2},
  pages    = {255-260},
  volume   = {28},
  abstract = {Rationale and Objectives
We describe a model of multi-institutional, multisociety, online case conferences that is a case-based group discussion of selected (nonrandom) cases which are subsequently hosted on social media and online platforms (e.g., YouTube, websites) to be available for a wider audience.
Materials and Methods
Using online conferencing software (Zoom, GoToMeeting), participants from both abdominal and cardiothoracic radiologists engage in separate, subspecialty one-hour meetings discussing a variety of meaningful cases. Participants take turns presenting their cases to the group and discuss significant findings, interpretations, differential diagnoses, and any other teaching points. All of the case conferences for both societies are recorded and edited to be uploaded on YouTube and their respective websites.
Results
Participants from these conferences log in from 14 institutions in 7 states across the United States. The YouTube videos reach thousands of people around the world. The abdominal case conference on YouTube has received almost 1,300 views with 90 videos uploaded. The thoracic (the Society of Thoracic Radiology) case conference has been running for over 7 years, with 226 videos uploaded to YouTube and 38,200 views, 1426 subscribers, and a total watch time of over 525,800 minutes. Twitter has been utilized by both groups to promote online viewership.
Conclusion
Our model is feasible and effective compared to traditional peer review. The cases selected are deliberate and focused on quality improvement and/or education. We harness online engagement, specifically social media presence, which has opened new opportunities to educate our peers and reach a global audience, including the nonradiologic community, to learn about radiology and unique practices.},
  doi      = {https://doi.org/10.1016/j.acra.2020.01.015},
  keywords = {Peer learning},
  url      = {https://www.sciencedirect.com/science/article/pii/S1076633220300428},
}

@Article{AbouSenna2021,
  author   = {Hatem Abou-Senna and Essam Radwan and Hesham Eldeeb},
  journal  = {Journal of Traffic and Transportation Engineering (English Edition)},
  title    = {A peer-to-peer logic environment to validate flashing yellow arrow decision support system},
  year     = {2021},
  issn     = {2095-7564},
  number   = {5},
  pages    = {735-750},
  volume   = {8},
  abstract = {The flashing yellow arrow (FYA) signal display creates an opportunity to enhance the left-turn phase with a variable mode that can be changed on demand. This research develops an integrated general purpose data collection module that time stamps detector and phase state changes within a National Electrical Manufacturers Association (NEMA) actuated traffic signal controller to provide recommendations for the flashing yellow arrow left-turn mode on a cycle-by-cycle basis. 115 left-turn approaches at 38 intersections with locations across the State of Florida were analyzed totaling 1370 h of video data processed including off-peak and peak conditions. Video data extraction was an essential step in developing the gap thresholds for the permissive left-turn. Actual intersection field data were obtained through loop detector mapping to the controller in the lab in real-time mode using a peer-to-peer logic environment. A custom communications software was developed to retrieve instantaneous channel input data, synchronize opposing through green phase, analyze traffic information, provide the algorithm decision, and generate a real-time log recording the events to determine whether it would be optimal to switch the red arrow to a flashing yellow arrow. The algorithm determines the time interval between the successive arrivals of vehicles and computes the corresponding headway for each lane by cycle on a second-by-second basis. Peer-to-peer logic is a necessary step to verify and validate new traffic concepts prior to field-testing and offers the advantage of acquiring and analyzing real-time traffic data coupled with video feed with the benefit of a safe environment.},
  doi      = {https://doi.org/10.1016/j.jtte.2020.06.001},
  keywords = {Traffic engineering, Peer-to-peer logic, Flashing yellow arrow, Decision support system, Permissive left-turn, Four section head},
  url      = {https://www.sciencedirect.com/science/article/pii/S209575642100009X},
}

@Article{Wagner2021,
  author   = {Kathryn Wagner and Srinath-Reddi Pingle and Kathryn Walker and Erin Floridia and Carlos Medina and Courtney K. Rowe},
  journal  = {Journal of Pediatric Urology},
  title    = {Harnessing the Epic Electronic Medical Record to Track Indwelling Ureteral Stents in a Pediatric Population},
  year     = {2021},
  issn     = {1477-5131},
  abstract = {Summary
Introduction
Retention of indwelling ureteral stents due to loss to follow-up can result in significant harm to patients, often requiring multiple trips to the operating room. Despite widespread use of electronic medical records, there are few standardized options for urologists to track ureteral stents and no data on the rate of retained stents in a pediatric population.
Objective
This pilot quality improvement project aims to: 1) develop a simple process to track indwelling ureteral stents using the Epic electronic medical record and 2) determine the incidence of forgotten stents in a pediatric population.
Methods
We identified that operating room staff scan a barcode for ureteral stents at the time of surgery to log the stent as "Implanted" in the patient's medical record. The stent can later be marked as "Explanted" at the time of removal. A report was designed within Epic to identify all patients with a ureteral stent implanted from April 2014 to June 2019 at our hospital. We reviewed the records of patients whose stents had never been marked as "Explanted" to determine if any had a retained stent. A workflow was then designed to ensure staff would mark stents as "Explanted" at the time of removal and to periodically run the report within Epic to ensure that all patients with ureteral stents in place have appropriate follow-up.
Results
Our report identified 152 ureteral stents with a status of "Implanted". 3 patients did not have evidence of stent removal documented in their medical record. Follow up with these patients revealed stent removal at an outside location.
Discussion
Current approaches to stent tracking are laborious with limitations to adherence. The Epic software directly incorporates stent tracking into the individual patient chart allowing for easy implementation and follow up. Our study revealed no retained stents in our pediatric population.
Conclusions
All patients with ureteral stents placed at a single institution over a 5-year period were easily identified using an automated Epic report. Through this report, we will prevent morbidity associated with stent retention. This technique could easily be implemented at other hospital systems that use Epic, and similar reporting tools could be designed within other electronic medical record systems. The incidence of ureteral stent retention in the pediatric population is likely significantly lower than for their adult counterparts.},
  doi      = {https://doi.org/10.1016/j.jpurol.2021.10.007},
  url      = {https://www.sciencedirect.com/science/article/pii/S147751312100471X},
}

@Article{Hadem2021,
  author   = {Pynbianglut Hadem and Dilip Kumar Saikia and Soumen Moulik},
  journal  = {Computer Networks},
  title    = {An SDN-based Intrusion Detection System using SVM with Selective Logging for IP Traceback},
  year     = {2021},
  issn     = {1389-1286},
  pages    = {108015},
  volume   = {191},
  abstract = {In this paper we introduce a Software Defined Networking (SDN) based Intrusion Detection System (IDS) using the Support Vector Machines (SVM) along with Selective Logging for IP Traceback. We achieve a detection accuracy of 95.98% on the full NSL-KDD dataset and 87.74% on the selected sub-features of the dataset. Detection of anomalous traffic and network intrusion is done during the PACKET_IN event at the controller and then again by fetching the flow statistics from the OpenFlow switches at regular intervals. Selective logging of suspicious packets/flows during a PACKET_IN event enables an IP traceback to be performed in the eventuality of an attack which can be initiated by a network admin using an HTTP-based web console. This approach gains significance given that it is practically impossible to achieve 100% attack detection accuracy. Moreover, it is not always correct to take punitive action against packets of a traffic flow, solely based on a detection of a possible threat which may result in blocking or dropping of genuine packets. In the proposed scheme, logging is performed selectively at the controller and not at the switches, achieving significant savings in terms of overall memory resources. Moreover logging is performed using the in-memory structure at the controller thereby enhances the performance of the logging operation over traditional file-based database by 9.76%. Finally, we have chosen this approach because (i) SDN provides a centralized architecture for detection analysis and logging (ii) SVM provides decent detection accuracy without much computation overhead (iii) Selective Logging provides about 90% to 95% savings in terms of overall memory resources and (iv) IP traceback provides the ability to track the actual source of the packets in the eventuality of an attack.},
  doi      = {https://doi.org/10.1016/j.comnet.2021.108015},
  keywords = {Network security, Software-defined network, Intrusion detection, Machine learning, IP traceback, SDN, SVM, IDS, ML},
  url      = {https://www.sciencedirect.com/science/article/pii/S1389128621001274},
}

@Article{Sedaghat2021,
  author   = {Ahmad Sedaghat and Mohammad Sabati and Fadi Alkhatib and Seyed {Amir Abbas Oloomi} and Farhad Sabri and Hayder Salem and Waqar {Jan Zafar} and Mahdi {Ashtian Malayer}},
  journal  = {Solar Energy},
  title    = {Climate change and thermo-solar patterns of office buildings with/without window films in extreme hot-arid climate of Kuwait},
  year     = {2021},
  issn     = {0038-092X},
  pages    = {354-374},
  volume   = {217},
  abstract = {This research attempts to develop a systematic method to address climate changes by studying temperature-humidity patterns as the two major meteorological parameters and to moderate these effects using a commercially available window film on interior windows of an office building with double-glazing. A three-floor educational building at Australian College of Kuwait (ACK) was equipped with temperature, humidity and illuminance sensors for two similar size offices, one with 3 M Neutral 20 window films. Total readings of 50,000 entries from each sensor was recorded every 3 min by a home-designed microprocessor-based logging system for three months of June, July, and August 2019. In parallel, the ACK building was simulated in EnergyPlus and DesignBuilder software and calibrated with the experimental measurements. Histograms and a probability density function (PDF) of temperature and humidity are built by a representative rational function as a model of main climate parameters variations. By examining min-mean-max values of data, it is observed that the office with window films has increased indoor humidity and, in most instances, reduced temperature by 2–5 °C compared to double-glazed bare windows which can significantly reduce cooling loads in extreme hot-arid climates. Simulation results are presented on the energy saved and the reduced CO2 footprints by applying the solar window films in the ACK building.},
  doi      = {https://doi.org/10.1016/j.solener.2021.02.051},
  keywords = {Cooling load, Energy saving, Green building, Solar window film, Radiation control},
  url      = {https://www.sciencedirect.com/science/article/pii/S0038092X21001651},
}

@Article{SantosDaltro2021,
  author   = {Darlene dos Santos Daltro and Renata Negri and Jaime Araújo Cobuci},
  journal  = {Livestock Science},
  title    = {Heterosis effects on 305-day milk yield in a Girolando dairy cattle population in different lactation orders},
  year     = {2021},
  issn     = {1871-1413},
  pages    = {104428},
  volume   = {245},
  abstract = {The aim of this study was to evaluate the heterosis effects for 305-day milk yield (305MY) in different lactation orders of Girolando cows, by fitting test-day milk yield records to Wood's, Mixed Log, and Wilmink's non-linear models. A total of 400,328 test-day milk yield records of 39,077 Holstein (H), Gyr (G), and Girolando (1/2 H, 1/4 H, 3/4 H, 3/8 H, 5/8 H, and 7/8 H genetic groups) cows from 822 herds were collected in the state of Minas Gerais, Brazil, from 1998 to 2014. The pedigree file comprised 36,640 animals, including 3677 sires and 24,472 cows. Genetic parameters were obtained by single-trait analysis using the AIREMLF90 software. Heritability estimates of 305MY and of 305MY fitted to the different non-linear models were higher in the first lactation and ranged from 0.10 to 0.29. We observed a greater heterosis effect for 305MY (and 305MY fitted) verified in cows of genetic group 1/2H, which presented average production superior to the average of their parents (of pure breeds) in the first (1034.33 kg) and second (1303.94 kg) lactation, respectively. Both Wood's and Wilmink's models stood out in quality of fit, presenting the best estimates for 305MY adjusted for different lactation orders. Wood's model is the most suitable to estimate 305MY of cows with a higher proportion of H genes. However, Wilmink's model allows estimating heterosis effects for 305MY and components of the lactation curve more similar to those observed in 305MY in the different genetic groups. The results indicate that local breeders can promote an improvement in milk production through exploitation of the heterosis effect, making choices of genetic combinations (breeders) more suitable for mating to obtain greater economic and productive efficiency of their herds during lactations.},
  doi      = {https://doi.org/10.1016/j.livsci.2021.104428},
  keywords = {Crossbreeding, dairy cows, Heritability, Mathematical model},
  url      = {https://www.sciencedirect.com/science/article/pii/S1871141321000366},
}

@Article{Huang2021a,
  author   = {Jianhua Huang and Shutian Wu and Minfeng Wu and Qingyu Zeng and Xiuli Wang and Hongwei Wang},
  journal  = {Photodiagnosis and Photodynamic Therapy},
  title    = {Efficacy of the therapy of 5-aminolevulinic acid photodynamic therapy combined with human umbilical cord mesenchymal stem cells on methicillin-resistant Staphylococcus aureus-infected wound in a diabetic mouse model},
  year     = {2021},
  issn     = {1572-1000},
  pages    = {102480},
  volume   = {36},
  abstract = {Background
A distressing issue of diabetic ulcer (DU) is its poor healing feature with limited clinical solutions. We have previously shown that 5-aminolevulinic acid photodynamic therapy (ALA-PDT) is a promising alternative to the currently limited measures for DU. Mesenchymal stem cells (MSCs) transplantation has been believed to impose certain therapeutic effect on restoration of injury. Thus, this study aims to explore whether the combination of MSCs and ALA-PDT will exert a more advanced curative effect on DU.
Methods
Diabetic mice were induced by intraperitoneal injection of streptozotocin (STZ, 60 mg/kg/d) for consecutive 5 days. A full-thickness skin injury (diameter 6 mm) was created in the center of the back of each mouse, and then 10 μl of methicillin-resistant Staphylococcus aureus (MRSA) suspension was added to establish an infected DU model. All DU models were randomly divided into four groups: Untreated group, MSCs group, ALA-PDT group, and ALA-PDT combined with human umbilical cord mesenchymal stem cells (hUC-MSCs) (ALA-PDT + MSCs) group. The wound sizes were recorded by a digital camera, and the healing rates were calculated using Image J software. Bacterial loads on wounds were measured using CFU (Colony forming units) analysis. The epithelialization, inflammatory cells infiltration and granulation tissue formation were monitored by Haematoxylin and eosin (H&E) staining, and the corresponding semi-quantitative score was matched. Growth and pro-inflammatory cytokines were detected by enzyme-linked immunosorbent assay (ELISA).
Results
Either ALA-PDT or injection of hUC-MSCs resulted in a rapid wound closure compared with the untreated, while their combination brought about the most prominent healing. On day 12, healing rates of the untreated, MSCs, ALA-PDT and ALA-PDT + MSCs were 40.56% ± 7.06%, 74.23 ± 4.83%, 84.03 ± 3.53%, 99.67 ± 0.49%, respectively. The bacterial burden reductions were approximately 1.58 logs (97.36%, P < 0.05), 2.34 logs (99.54%, P < 0.01), 4.50 logs (nearly 100%, P < 0.001) for MSCs, ALA-PDT and ALA-PDT + MSCs, respectively. Histology revealed reduced inflammatory cells and improved collagen precipitation and angiogenesis after hUC-MSCs and ALA-PDT treatment compared to the untreated. The combined therapy leaded to a more intact epithelium, similar to the healthy. Finally, ELISA revealed that the property of ALA-PDT to stimulate transforming growth factor-β1 (TGF-β1) and vascular endothelial growth factor (VEGF) and inhibit IL (interleukin) -1β and IL-6 outweighed that of hUC-MSCs, and this function of the combination overwhelmed that of any single therapy.
Conclusions
Our findings indicated that the strategy of combining ALA-PDT with hUC-MSCs possessed a significantly enhanced therapeutic effect over either single therapy, providing a promising innovative therapeutic candidate for refractory wounds.},
  doi      = {https://doi.org/10.1016/j.pdpdt.2021.102480},
  keywords = {Diabetic wound, , Photodynamic, 5-Aminolevulinic acid, Stem cell},
  url      = {https://www.sciencedirect.com/science/article/pii/S1572100021003045},
}

@Article{Zabor2021,
  author  = {Emily C. Zabor and Chandana A. Reddy and Rahul D. Tendulkar and Sujata Patil},
  journal = {International Journal of Radiation Oncology*Biology*Physics},
  title   = {Logistic Regression in Clinical Studies},
  year    = {2021},
  issn    = {0360-3016},
  doi     = {https://doi.org/10.1016/j.ijrobp.2021.08.007},
  url     = {https://www.sciencedirect.com/science/article/pii/S0360301621026468},
}

@Article{Berkowitz2021,
  author   = {Sean T. Berkowitz and Paul Sternberg and Shriji Patel},
  journal  = {Ophthalmology Retina},
  title    = {Cost Analysis of Routine Vitrectomy Surgery},
  year     = {2021},
  issn     = {2468-6530},
  number   = {6},
  pages    = {496-502},
  volume   = {5},
  abstract = {Purpose
To use electronic health record (EHR) time logs to calculate the complete cost profiles of routine pars plana vitrectomy surgery.
Design
Economic analysis.
Participants
Patients undergoing elective vitrectomy procedures (Current Procedural Terminology codes 67040, 67041, and 67042) at Vanderbilt University Medical Center in fiscal year 2019.
Methods
Process flow mapping for routine vitrectomy surgery was used to define the operative episode. De-identified time logs were sourced from an internal perioperative data warehouse to calculate procedure-level durations. The costs of materials and overhead were calculated from internal financial management software. Costs per minute for space, equipment, and personnel were based on internal figures. These inputs were used for a time-driven activity-based costing (TDABC) analysis.
Main Outcome Measures
Complete cost profile of routine pars plana vitrectomy surgery.
Results
Cost analysis of routine vitrectomy surgery resulted in a total cost of $7169.79 per patient, which was $2053.85 more than the maximum Medicare reimbursement for the equivalent episode, $5115.93. Vitrectomy cases do not break even unless the case duration is fewer than 26.81 minutes, overhead is reduced by 53.78%, or reimbursement is increased by 40.15%. Reimbursement does not compensate for variable costs alone for cases lasting longer than 55.09 minutes. In the cohort used here, 68% of cases are completely unprofitable, with increasing losses directly proportional to the length of the case.
Conclusions
This analysis showed that true costs for routine vitrectomy procedures are significantly more than the maximum allowable Medicare reimbursement. Academic ophthalmology departments may benefit from more accurate costing approaches using existing EHR data. These approaches may be informative for policy discussion regarding appropriate reimbursement.},
  doi      = {https://doi.org/10.1016/j.oret.2021.02.003},
  url      = {https://www.sciencedirect.com/science/article/pii/S2468653021000531},
}

@Article{Terauchi2021,
  author   = {Yoshi Terauchi and Christopher Sexton and Leif K. Bakland and George Bogen},
  journal  = {Journal of Endodontics},
  title    = {Factors Affecting the Removal Time of Separated Instruments},
  year     = {2021},
  issn     = {0099-2399},
  number   = {8},
  pages    = {1245-1252},
  volume   = {47},
  abstract = {Introduction
Separated endodontic instruments may adversely affect the outcome of endodontic treatment. The combination of ultrasonic techniques and dental operating microscopes appears to be effective in the removal of separated instruments compared with more randomized techniques. This study evaluated the roles of root canal curvature and separated instrument length on the time needed to loosen and retrieve the instrument fragments.
Methods
The retrieval procedures of 128 separated instruments referred to a private endodontic practice for retreatment by general practitioners were evaluated in patients who were monitored for a minimum of 6 months. Preoperative cone-beam computed tomographic images were used to measure separated instrument lengths in relation to the degrees of canal curvatures. Ultrasonic instruments were used in the initial phase to remove the tooth structure and to loosen the fractured instrument. In the second phase, ultrasonic instruments, wire loops, or XP Shapers (FKG Dentaire SA, La Chaux-de-Fonds, Switzerland) were used for fragment removal. The time periods for all procedures were recorded. Statistical analysis was completed applying log-normal regression, structural equation modeling, and linear regression using Stata Version 14.2 software (StataCorp LLC, College Station, TX).
Results
All separated instruments were successfully retrieved. Using the protocol in this study, 89.8% of the instruments were removed using ultrasonic instruments alone with a mean time of 221 seconds. The instrument removal time was dependent on both the instrument length and the root canal curvature. Additionally, preparation times were proportionately longer with increasing separated instrument lengths when the loop device was required.
Conclusions
The preparation phase appears to have an important role in the retrieval of separated instruments. Preparation times for both non-loop and loop groups demonstrate that length and curvature are independent predictors of the log-transformed time. Generally, procedure times were extended with increasing file lengths and higher degrees of canal curvature.},
  doi      = {https://doi.org/10.1016/j.joen.2021.05.003},
  keywords = {Canal curvature, dental operating microscopes, instrument retrieval, preparation time, separated instrument, ultrasonic instruments},
  url      = {https://www.sciencedirect.com/science/article/pii/S0099239921003290},
}

@Article{Beyls2021,
  author   = {C. Beyls and A. Hermida and Y. Bohbot and O. Abou-Arab and Y. Mahjoub},
  journal  = {Archives of Cardiovascular Diseases Supplements},
  title    = {Automated left atrial strain analysis for predicting new-onset atrial fibrillation in severe hypoxemic COVID-19 pneumonia: A prospective study},
  year     = {2021},
  issn     = {1878-6480},
  note     = {PARIS-ECHO Imaging 2021},
  number   = {3},
  pages    = {257-258},
  volume   = {13},
  abstract = {Introduction
Atrial fibrillation (AF) is the most documented arrhythmia in COVID-19 pneumonia. Left atrial (LA) strain analysis, assessing LA contractility have been associated with the development of new-onset atrial fibrillation (NOAF) in several clinical situations. We aimed to assess the diagnostic ability of LA strain parameters to predict NOAF in patients with severe hypoxemic COVID-19 pneumonia.
Method
We conducted a prospective single center study at Amiens Hospital University (NCT04354558). The population study was composed of adult patients with a severe or critical Covid-19 pneumonia in sinus rhythm at inclusion. Transthoracic echocardiography was performed within 48hours of admission. LA strain analysis was performed by an automated software. The following LA strain parameters were recorded: LA strain during reservoir phase (LASr), LA strain during conduit phase (LAScd) and LA strain during contraction phase (LASct). The primary endpoint was the occurrence of NOAF during the intensive care unit (ICU) stay.
Results
From March 2020 to February 2021, 79 patients were included. Sixteen patients (18%) developed NOAF in ICU. LAScd and LASr were significantly reduced in the NOAF group compared to the other group (8.1[6.3-10.9] vs. 17.2[5.0-10.2]%; P<0.001 and 20.2 [12.3-27.3] % vs. 30.5 [23.8-36.2] %; P=0.002 respectively). After adjustment, only LAScd remained independently predictive of NOAF (OR:2.43; 95%CI:1.18-3.37). A LAScd cut-off value of 11.1% had a sensitivity of 76% and a specificity of 75% to identify patients with NOAF. The 30-day cumulative risk of NOAF was 42±9% with LAScd <11% and 8±4% with LAScd >11% (log rank test P value<0.0001) (Fig. 1).
Conclusion
In patients with severe hypoxemic COVID-19 pneumonia, LAScd ≤11% at admission is a strong risk factor of NOAF development during critical care.},
  doi      = {https://doi.org/10.1016/j.acvdsp.2021.04.045},
  url      = {https://www.sciencedirect.com/science/article/pii/S1878648021000471},
}

@Article{Ahuja2021,
  author   = {Nisha Ahuja and Gaurav Singal and Debajyoti Mukhopadhyay and Neeraj Kumar},
  journal  = {Journal of Network and Computer Applications},
  title    = {Automated DDOS attack detection in software defined networking},
  year     = {2021},
  issn     = {1084-8045},
  pages    = {103108},
  volume   = {187},
  abstract = {Software-Defined Networking (SDN) is a networking paradigm that has redefined the term network by making the network devices programmable. SDN helps network engineers to monitor the network expeditely, control the network from a central point, identify malicious traffic and link failure in easy and efficient manner. Besides such flexibility provided by SDN, it is also vulnerable to attacks such as DDoS which can halt the complete network. To mitigate this attack, the paper proposes to classify the benign traffic from DDoS attack traffic by using machine learning technique. The major contribution of this paper is identification of novel features for DDoS attack detections. Novel features are logged into CSV file to create the dataset and machine learning algorithms are trained on the created SDN dataset. Various work which has already been done for DDoS attack detection either used a non-SDN dataset or the research data is not made public. A novel hybrid machine learning model is utilized to perform the classification. Results show that the hybrid model of Support Vector classifier with Random Forest (SVC-RF) classifies the traffic with the highest testing accuracy of 98.8% with a very low false alarm rate.},
  doi      = {https://doi.org/10.1016/j.jnca.2021.103108},
  keywords = {Machine learning, Software-defined-networking, DDOS Attack detection, Traffic protocol, SDN Traffic classification, Mininet},
  url      = {https://www.sciencedirect.com/science/article/pii/S1084804521001296},
}

@Article{Gregory2021,
  author   = {B.R.B. Gregory and R.T. Patterson and J.M. Galloway and E.G. Reinhardt},
  journal  = {Palaeogeography, Palaeoclimatology, Palaeoecology},
  title    = {The impact of cyclical, multi-decadal to centennial climate variability on arsenic sequestration in lacustrine sediments},
  year     = {2021},
  issn     = {0031-0182},
  pages    = {110189},
  volume   = {565},
  abstract = {Examining paleoclimate-driven changes of elemental contaminants, such as Arsenic (As), increases the understanding of the mobility and fate of elements under a warming climate scenario. To characterize the variability in As sequestration in the sediments of a freshwater system in response to decadal- to centennial-scale climate oscillations, a freeze-core (CON01) was recovered from Control Lake, Northwest Territories. Radiocarbon dating of 13 bulk-organic samples provided temporal reference to core depth. Sediment geochemistry was determined using Itrax X-ray fluorescence core-scanning (Itrax-XRF). Elemental concentrations were measured on a sub-set of samples using ICP-MS after multi-acid (MA) digestion to assess the accuracy of Itrax-XRF results through a multivariate log-ratio (MLC) calibration. Comparison of Itrax-XRF to ICP-MS using the MLC in ItraXelerate software show Pearson's R2 values >0.75, with the exception of As (R2 = 0.44). MLC-calibrated Itrax-XRF elemental data were centered log-ratio (CLR) transformed to eliminate issues related to data closure. During the ca. 3300-yr sedimentary record, moderate-strength negative correlations between AsCLR and KCLR (Spearman's ρ = −0.38, p-value < 0.001, n = 785), and AsCLR and TiCLR, (Spearman's ρ = −0.52, p-value < 0.001, n = 785) suggest that As is primarily sequestered in sediments during intervals of warmer temperatures and higher productivity. Proxies for sediment particle size (TiCLR, KCLR) and As concentration (AsCLR) were examined for response to quasi-periodic climate oscillations using spectral analysis. Significant periodicities were observed with approximately 4–13, 30–60, 90–120, and 160–280 yr periods in TiCLR, KCLR, and AsCLR records. These frequencies are interpreted as corresponding to the North Atlantic Oscillation and/or 8–14-yr Schwabe sunspot cycles, 30–60-yr Pacific Decadal Oscillation, and centennial-scale solar cycles (e.g., 90-yr Gleissberg cycle; 205-yr Suess cycle). Coeval occurrence of these periodicities revealed through wavelet analysis of Control Lake geochemistry data suggests that these climate cycles only impact Control Lake when they occur concurrently.},
  doi      = {https://doi.org/10.1016/j.palaeo.2020.110189},
  keywords = {Itrax-XRF, Wavelet analysis, Spectral analysis, Solar cycles, Pacific Decadal Oscillation, Arctic Oscillation},
  url      = {https://www.sciencedirect.com/science/article/pii/S0031018220306374},
}

@Article{Qian2021,
  author   = {D.C. Qian and E. Schreibmann and N.K. Bhatia and S. Kiani and M.S. Lloyd and K.A. Higgins},
  journal  = {International Journal of Radiation Oncology*Biology*Physics},
  title    = {Rhythm-RT: A New Tool for Target Volume Delineation in Cardiac SBRT},
  year     = {2021},
  issn     = {0360-3016},
  note     = {2021 American Society for Radiation Oncology Annual Meeting},
  number   = {3, Supplement},
  pages    = {e69},
  volume   = {111},
  abstract = {Purpose/Objective(s)
Nearly half of all patients with ventricular tachycardia (VT) become refractory to standard-of-care anti-arrhythmic medications and catheter ablation. Stereotactic body radiotherapy (SBRT) has emerged as a well-tolerated and effective new treatment for VT. Since arrhythmogenic lesions are undetectable on CT scans, the practice of SBRT target volume delineation is not yet formalized. Many single-institution protocols involve only verbal discussion between electrophysiologists and radiation oncologists or manual re-orientation of surface renderings from electrophysiologic (EP) studies to correlate with the planes on CT scan. We present a novel software, "Rhythm-RT", that synthesizes data from EP studies and heart contours from radiation planning to automatically generate a preliminary target volume.
Materials/Methods
Along with DICOM files containing contours, Rhythm-RT can process electroanatomic mapping (EAM) data from CARTO (Biosense Webster, Irvine, CA) and EnSite Precision (Abbott, St. Paul, MN) as well as ablation navigation data from EnSite Precision. All input data are plotted in the reference coordinate system of the CT simulation scan. The user is able to translate and rotate imported EP spatial information for co-registration with contoured cardiac substructures. Rhythm-RT then identifies the cardiac substructure closest to the sites of low voltage from EAM or inadequate previous ablation on which to generate an SBRT gross target volume (GTV), adapted to the myocardial shape and transmural thickness of the cardiac substructure. The GTV is exported as a DICOM file which can be integrated with other contoured structures in the original radiation planning system.
Results
From October 2019 to February 2021, 7 males and 1 female with VT (53–84 years of age, ejection fraction 10–65%, and 0–7 previous catheter ablations) were treated using Rhythm-RT to guide cardiac SBRT planning. Compared to existing methods of delineating GTV crudely by free-hand, Rhythm-RT visualizes EP spatial information superimposed on heart contours. The area of myocardium selected as GTV, based on proximity to relevant EP signals, is computationally derived rather than inferred and liable to human error. Final GTV modification with the help of an experienced electrophysiologist is still recommended. When structural heart disease is multifocal, he/she may provide insight on which areas are more likely to cause arrhythmia. Adjustment of the GTV boundary may also be informed by direct observations during EP procedures that are not reflected in procedure equipment logs.
Conclusion
Rhythm-RT is a software that improves the accuracy and efficiency of target volume delineation in cardiac SBRT. Additional patient enrollment on our institutional protocol utilizing this technology is ongoing, along with outcomes analysis and expansion of input data versatility to include all EP and radiation planning systems.},
  doi      = {https://doi.org/10.1016/j.ijrobp.2021.07.424},
  url      = {https://www.sciencedirect.com/science/article/pii/S0360301621012943},
}

@Article{Tang2022,
  author   = {Yiming Tang and Allan Spektor and Raffi Khatchadourian and Mehdi Bagherzadeh},
  journal  = {Science of Computer Programming},
  title    = {Automated evolution of feature logging statement levels using Git histories and degree of interest},
  year     = {2022},
  issn     = {0167-6423},
  pages    = {102724},
  volume   = {214},
  abstract = {Logging—used for system events and security breaches to describe more informational yet essential aspects of software features—is pervasive. Given the high transactionality of today's software, logging effectiveness can be reduced by information overload. Log levels help alleviate this problem by correlating a priority to logs that can be later filtered. As software evolves, however, levels of logs documenting surrounding feature implementations may also require modification as features once deemed important may have decreased in urgency and vice-versa. We present an automated approach that assists developers in evolving levels of such (feature) logs. The approach, based on mining Git histories and manipulating a degree of interest (DOI) model,1 transforms source code to revitalize feature log levels based on the “interestingness” of the surrounding code. Built upon JGit and Mylyn, the approach is implemented as an Eclipse IDE plug-in and evaluated on 18 Java projects with ∼3 million lines of code and ∼4K log statements. Our tool successfully analyzes 99.22% of logging statements, increases log level distributions by ∼20%, and increases the focus of logs in bug fix contexts ∼83% of the time. Moreover, pull (patch) requests were integrated into large and popular open-source projects. The results indicate that the approach is promising in assisting developers in evolving feature log levels.},
  doi      = {https://doi.org/10.1016/j.scico.2021.102724},
  keywords = {Logging, Software evolution, Software repository mining, Software transformation, Degree of interest},
  url      = {https://www.sciencedirect.com/science/article/pii/S0167642321001179},
}

@Article{Polce2021,
  author   = {S.A. Polce and N. Kohn and M. Ghaly and S. Teckie and J.W.Ames V and R. Hausen and D. Frank and B. Parashar},
  journal  = {International Journal of Radiation Oncology*Biology*Physics},
  title    = {SBRT after Conventional IMRT in Locally Advanced/Recurrent Head and Neck (HN) Cancers: Importance of Patient Selection},
  year     = {2021},
  issn     = {0360-3016},
  note     = {2021 American Society for Radiation Oncology Annual Meeting},
  number   = {3, Supplement},
  pages    = {e168},
  volume   = {111},
  abstract = {Purpose/Objective(s)
There is limited data on the use of SBRT for salvage or consolidative treatment of Head and Neck cancers. Given the relatively poor prognosis for recurrent HN cancers and risk of toxicity with the addition of hypofractionated RT after conventional IMRT, we wanted to evaluate patients that should receive SBRT.
Materials/Methods
Patients with HN cancer treated in Radiation Medicine were selected and data collected using a data extraction software. This data extraction software collects data from electronic medical records at a large tertiary care academic medical center. Consecutively treated patients with adequate documentation were selected. Data gathered included primary sites of cancer, the initial total dose from conventional treatment, number of fractions, SBRT total dose and fractions, metastatic disease or locoregional progression, types of grade 3-5 toxicity (CTCAE v four toxicity), time to develop toxicity and progression and time since SBRT to last follow-up. Time to toxicity was estimated using the Kaplan-Meier product limit method, and each factor was compared using the log-rank test.
Results
Median age was 69 (Range 39-90). The median time between EBRT/ChemoRT and SBRT was six months (1-108 months). There were 59 males (71%) and 24 females (29%). The primary HN sites included oropharynx (OP) (37%), oral cavity (OC) (24%), hypopharynx, neck, salivary gland, paranasal sinus, and larynx cancers. The most common histology was squamous cell cancers, although less common histologies include salivary duct adenocarcinoma and esthesioneuroblastoma among others. Ten patients (12%) received SBRT after surgical resection of recurrence. Thirty-four patients (41%) were censored alive at < 12 months and had no observed toxicity up that time. Thirty-three of 83 (40%) of the patients overall developed grade 3 or four toxicity after SBRT, while 36 of 50 (72%) of patients with no toxicity developed progression or metastasis. Seventeen of 36 (47%) patients with follow-up > / = 12 months developed grade 3 or 4 toxicity while 16 of 47 (34%) developed grade 3/4 toxicity with follow-up < 12 months. Fifty-four of 83 (65%) patients had progressive or metastatic disease at the time of their last follow-up. Factors predicting worse toxicities were SBRT fractions (< 5 vs > 5, P = 0.0114), post-op SBRT (P = 0.0018) and the interval between EBRT/CRT and SBRT (P = 0.02). There was field overlap between EBRT and SBRT in all patients. Adverse outcomes include necrosis, fistula, stomal bleeding, seizure, intractable pain, and PEG dependence.
Conclusion
SBRT after full dose EBRT should be used in select patients given its toxicity and limited survival in patients with advanced/locally recurrent head and neck cancer. We are planning a prospective evaluation of the use of SBRT in recurrent/locally advanced settings.},
  doi      = {https://doi.org/10.1016/j.ijrobp.2021.07.648},
  url      = {https://www.sciencedirect.com/science/article/pii/S0360301621015182},
}

@Article{Reynolds2022,
  author   = {Owen Reynolds and Antonio García-Domínguez and Nelly Bencomo},
  journal  = {Information and Software Technology},
  title    = {Cronista: A multi-database automated provenance collection system for runtime-models},
  year     = {2022},
  issn     = {0950-5849},
  pages    = {106694},
  volume   = {141},
  abstract = {Context:
Decision making by software systems that face uncertainty needs tracing to support understandability, as accountability is crucial. While logging has been essential to support explanations and understandability of behaviour, several issues still persist, such as the high cost for managing large logs, not knowing what to log, and the inability of logging techniques to relate events to each other or to specific occurrences of high-level activities in the system.
Objective:
Cronista is an alternative to logging for systems that act on top of runtime models. Instead of targeting the running systems, Cronista automatically collects the provenance of changes made to the runtime models, which aim at leveraging high-level representations, to produce more concise historical records. The provenance graphs capture causal links between those changes and the activities of the system, which are used to investigate issues.
Method:
Cronista’s architecture is described with the current design and the implementation of its high-level components for single-machine, multi-threaded systems. Cronista is applied to a traffic-simulation case study. The trade-offs of two different storage solutions are evaluated, i.e. the CDO model repositories, and JanusGraph graph databases.
Results:
Integrating Cronista into the case study requires only minor code changes. Cronista collected provenance graphs for the simulations as they ran, using both CDO and JanusGraph. Both solutions highlighted the cause of a seeded defect in the system. For the longer executions, both CDO and JanusGraph showed negligible overhead on the simulation times. Querying and visualisation tools were more user-friendly in JanusGraph than in CDO.
Conclusion:
Cronista demonstrates the feasibility of recording fine-grained provenance for the evolution of runtime models, while using it to investigate issues. User convenience and resource requirements need to be balanced. The paper present how the available technologies studied offer different trade-offs to satisfy the balance required.},
  doi      = {https://doi.org/10.1016/j.infsof.2021.106694},
  keywords = {Provenance, Runtime-models, Multi-threading, Self-adaptation, Self-explanation},
  url      = {https://www.sciencedirect.com/science/article/pii/S095058492100149X},
}

@Article{Saravanan2021,
  author   = {P. Saravanan and V. Sangeetha},
  journal  = {Materials Today: Proceedings},
  title    = {African buffalo optimized multinomial softmax regression based convolutional deep neural network for software fault prediction},
  year     = {2021},
  issn     = {2214-7853},
  abstract = {Software fault prediction is an essential part of the software quality assurance to detect faulty software modules depending on software measurement data. This models area of the research generates software engineers focus to development activities on fault-prone code for increasing the software quality. Many existing designed for improving the software quality by various methods. The software failure cause prediction accuracy and defect detection rate of the conventional techniques were not sufficient. Introduced an African Buffalo Optimized Multinomial Softmax Regression based Convolutional Deep Neural Learning (ABOMSR-CDNL). ABOMSR-CDNL model to enhance the software reliability through predicting root cause of software failure at earlier stage. ABOMSR-CDNL Model comprises four layers, namely input layer, two hidden layers and output layer and software program codes, event log files as an input layer then transmits the software program codes to the hidden layer 1. Construct the projects portfolio with help of optimal parameters selected from event log files then sent to the hidden layer 2. This method reduce the amount of time taken for examining the failure behaviour of system application. ABOMSR-CDNL Model applied multinomial softmax regression analysis in hidden layer 2 this objective of determining the cause of higher accuracy the result is sent to the output layer. Result illustrates ABOMSR-CDNL Model is increasing the accuracy, false positive rate and minimized the software failure identification time.},
  doi      = {https://doi.org/10.1016/j.matpr.2021.08.097},
  keywords = {Software fault prediction, Software reliability, Multinomial softmax regression analysis, Project portfolio, Software program codes},
  url      = {https://www.sciencedirect.com/science/article/pii/S2214785321055322},
}

@Article{Shimari2021,
  author   = {Kazumasa Shimari and Takashi Ishio and Tetsuya Kanda and Naoto Ishida and Katsuro Inoue},
  journal  = {Science of Computer Programming},
  title    = {NOD4J: Near-omniscient debugging tool for Java using size-limited execution trace},
  year     = {2021},
  issn     = {0167-6423},
  pages    = {102630},
  volume   = {206},
  abstract = {Logging is an important feature of a software system to record run-time information. Detailed logging allows developers to collect run-time information in situations where they cannot use an interactive debugger, such as continuous integration and web application server cases. However, extensive logging leads to larger execution traces because few instructions can be repeated many times. This paper presents our tool NOD4J, which monitors a Java program's execution within limited storage space constraints and annotates the source code with observed values in an HTML format. Developers can easily investigate the execution and share the report on a web server. We show two examples that our tool can debug defects using incomplete execution traces.},
  doi      = {https://doi.org/10.1016/j.scico.2021.102630},
  keywords = {Dynamic analysis, Logging, Software visualization},
  url      = {https://www.sciencedirect.com/science/article/pii/S016764232100023X},
}

@Article{Hasselberg2021,
  author   = {Nina E. Hasselberg and Nobuyuki Kagiyama and Yuko Soyama and Masataka Sugahara and Akiko Goda and Keiko Ryo-Koriyama and Omar Batel and Murali Chakinala and Marc A. Simon and John Gorcsan},
  journal  = {Journal of the American Society of Echocardiography},
  title    = {The Prognostic Value of Right Atrial Strain Imaging in Patients with Precapillary Pulmonary Hypertension},
  year     = {2021},
  issn     = {0894-7317},
  number   = {8},
  pages    = {851-861.e1},
  volume   = {34},
  abstract = {Background
Right ventricular (RV) failure in patients with pulmonary hypertension (PH) is associated with unfavorable clinical events and a poor prognosis. Elevation of right atrial (RA) pressure is established as a marker for RV failure. However, the additive prognostic value of RA mechanical function is unclear.
Methods
The authors tested the hypothesis that RA function by strain echocardiography has prognostic usefulness by studying 165 consecutive patients with precapillary PH defined invasively: mean pulmonary artery pressure ≥ 25 mm Hg and pulmonary capillary wedge pressure < 15 mm Hg. Speckle-tracking strain analyses of the right atrium and right ventricle were performed, along with routine measures. Peak RA strain values from six segments using generic speckle-tracking software were averaged to RA peak longitudinal strain, representing RA global reservoir function. The primary end point was all-cause mortality during 5 years of follow-up. RA strain was similarly analyzed in a control group of 16 normal subjects for comparison.
Results
There were 151 patients with PH (mean age, 55 ± 16 years; 73% women; mean World Health Organization functional class, 2.6 ± 0.6), after 14 exclusions (three with atrial septal defects and 11 with left ventricular ejection fractions < 50%). RA strain measurement was feasible in 93% of patients and RV strain measurement in 88%. RA peak longitudinal strain was significantly reduced in patients with PH compared with control subjects, as expected (P < .001). During 5-year follow-up, 73 patients (48%) died. Patients with RA peak strain in the lowest quartile (<25%) had a significant risk for death (P = .006), even after correcting for confounding variables. RA strain was independently associated with survival in multivariate analysis (P = .039) and had additive prognostic value to RV strain (log-rank P = .01) in subgroup analysis.
Conclusions
RA peak longitudinal strain had additive prognostic usefulness to other clinical measures, including RV strain, RA area, and RA pressure, in patients with PH. RA mechanical function by strain imaging has potential for clinical applications in patients with PH.},
  doi      = {https://doi.org/10.1016/j.echo.2021.03.007},
  keywords = {Right atrial strain, Right atrial reservoir function, Speckle-tracking echocardiography, Pulmonary hypertension, Prognosis, Mortality},
  url      = {https://www.sciencedirect.com/science/article/pii/S0894731721001413},
}

@Article{Dawson2021,
  author   = {Liam Dawson and Alex Akinbi},
  journal  = {Forensic Science International: Reports},
  title    = {Challenges and opportunities for wearable IoT forensics: TomTom Spark 3 as a case study},
  year     = {2021},
  issn     = {2665-9107},
  pages    = {100198},
  volume   = {3},
  abstract = {Wearable IoT devices like fitness trackers and smartwatches continue to create opportunities and challenges for forensic investigators in the acquisition and analysis of evidential artefacts in scenarios where such devices are a witness to a crime. However, current commercial and traditional forensic tools available to forensic investigators fall short of conducting device extraction and analysis of forensic artefacts from many IoT devices due to their heterogeneous nature. In this paper, we conduct a comprehensive forensic analysis and show artefacts of forensic value from the physical TomTom Spark 3 GPS fitness smartwatch, its companion app installed on an Android smartphone, and Bluetooth event logs located in the app’s metadata. Our forensic methodology and analysis involved the combination and use of a non-forensic tool, a commercial forensic tool, and a non-forensic manufacturer-independent analysis platform tool specifically designed for endurance athletes to identify, extract, analyse, and reconstruct user activity data in an investigative scenario. We show forensic metadata associated with the device information, past user activities, and audio files from the physical smartwatch. We recovered data associated with past user activities stored in proprietary activity files and databases maintained by the app on an Android smartphone. From the event logs, we show when user activity was synced with the app and uploaded to the device cloud storage. The results from our work provide vital references for forensic investigators to aid criminal investigations, highlight limitations of current forensic tools, and for developers of forensic tools an incentive into developing forensic software applications and tools that can decode all relevant data generated by wearable IoT devices.},
  doi      = {https://doi.org/10.1016/j.fsir.2021.100198},
  keywords = {IoT forensics, Mobile forensics, Android forensics, TomTom, TomTom Spark 3, Fitness tracker},
  url      = {https://www.sciencedirect.com/science/article/pii/S2665910721000293},
}

@Article{Funke2021,
  author   = {VAM Funke and ACM Lima and N Hamerschlak and V Colturato and MP Souza and AC Vigorito and GM Teixeira and VG Rocha and LCB Mariano and D Lerner and GMN Barros and R Pasquini and AA Paz and HRA Neves and AJ Simioni and CC Silva and V Martins and CL Voltarelli and BC Tan and ME Flowers},
  journal  = {Hematology, Transfusion and Cell Therapy},
  title    = {ALLOGENEIC HEMATOPOIETIC STEM CELL TRANSPLANT FOR MYELOFIBROSIS IN BRAZIL: FACING OUR CHALLENGES},
  year     = {2021},
  issn     = {2531-1379},
  pages    = {S246-S247},
  volume   = {43},
  abstract = {Background
Allogeneic hematopoietic stem cell transplantation (allo-SCT) is a well-established treatment modality for myelofibrosis (MF) and the only potentially curative treatment. However, adequate engraftment, relapse and transplant related mortality are big challenges in transplantation for this disease.
Objectives
Primary objective is to evaluate overall and disease-free survival of allogeneic HSCT for myelofibrosis in Brazil. Secondary objective is identifying risk factors for survival and relapse.
Patients and methods
We analyzed retrospectively from charts and database data from 141 patients with the diagnosis of MF who received allo-SCT at six centers in Brazil from 1997 to 2020. Patients and Transplant characteristics are disposed on Table 1. Statistical analysis was performed using EZR software. Bivariate analysis and estimation of OS and DFS were performed using Log Rank and Kaplan Meier method. A landmark analysis of survival was performed for acute (100 days) and chronic (180 days) GVHD. Cox Survival Model was used for multivariate analysis of survival and Multivariable Fine-Gray competing risks regression model was used or relapse/rejection at 2 years and non-relapse mortality at one year. Characteristics of patients are showed in table 1.
Results
Overall Survival (OS) for the whole cohort was 61% at one year, 56% at 2 years and 46% at 5 years. The transplant related mortality at 100 days and at one year was 14 and 26%, respectively. One- and two-year cumulative incidence of relapse or rejection was 10 % and 15% respectively. Cumulative incidence of non-relapse mortality (competitive risk) at one and two years was 33% and 37% respectively. At multivariate analysis by Cox Model, CD 34 > 5 x 106 HR 0.4405 (0.2396- 0.8101; p = 0.008) was associated to better survival, while KPS < 80% HR 2.3010 (1.01-5.19; p = 0.044) and DIPSS intermediate 2 or high-risk HR 5.7490 (2.33-14.18; p = 0.0001) were significantly associated with inferior survival. At Multivariable Fine-Gray competing risks regression model for relapse/rejection, previous therapy with ruxolitinib was identified as a risk factor HR 3.245(1.427- 7.379; p = 0.005), but there were only ten events in this group. At Multivariable Fine-Gray competing risks regression model for non-relapse mortality, KPS < 80% HR 3.2380(1.3030-8.046; p = 0.011) and DIPSS Intermediate 2-High risk were identified as independent risk factors -HR 8.8760 (1.9280 -40.870; p = 0.00510). At landmark analysis development of acute GVHD stage 3-4 was a significant risk factor for survival (0.00194).
Conclusions
1) DIPSS score was validated in this Brazilian cohort as a tool to estimate survival and non-relapse mortality after transplant, in agreement with international experience; 2) CD34 dose < 5 x 106 and Karnofsky score < 80% were significant risk factors for survival; 3) Karnofsky score < 80% and Intermediate-2 or High risk DIPSS were also significant risk factors for non-relapse mortality.},
  doi      = {https://doi.org/10.1016/j.htct.2021.10.418},
  url      = {https://www.sciencedirect.com/science/article/pii/S2531137921005654},
}

@Article{Sreelaja2021,
  author   = {Sreelaja N.K.},
  journal  = {Applied Soft Computing},
  title    = {Ant Colony Optimization based Light weight Binary Search for efficient signature matching to filter Ransomware},
  year     = {2021},
  issn     = {1568-4946},
  pages    = {107635},
  volume   = {111},
  abstract = {Ransomware is a form of malicious software which when deployed encrypts or locks the files and demands a ransom to have the files decrypted and accessible. In today’s digital world, devices connected to the network are vulnerable to ransomwares. Signature based methods are used to detect known ransomwares at an early stage to minimize the damage. This type of detection involves a predefined repository of static signatures which block the ransomwares based on the signatures in the repository. Fuzzy hashing method and Clam Av method for signature based ransomware detection have been proposed in literature. However, these methods raised false negatives and false positives respectively. Also, the speed of comparison in fuzzy hashing method was a limitation. In this paper an Ant Colony Optimization (ACO) based approach for filtering ransomwares by matching the incoming signature hash value with the signature database is proposed. Termed Ant Colony Optimization based Light weight Binary Search for Signature based Ransomware detection (ACOLBSR) algorithm, the ant agent finds the search space in the signature database. If a search space does not exist in the signature database, the incoming file is logged. If the search space exists in the database, the ant agent employs a binary search to match the incoming signature hash value with the signatures in the search space. If a match is found, the file is accepted or blocked if it is a goodware or ransomware respectively. If the incoming signature does not match with the signatures in the search space, the file is logged. The advantage of ACOLBSR algorithm is that the ransomwares are strictly filtered based on the signatures in the database. The computational complexity of ACOLBSR algorithm is less compared to binary search and sequential search. Also, it is shown that ACOLBSR algorithm do not generate false positives when compared to ClamAV, SplitScreen, fuzzy hashing and classification based approaches. Experimental results comparing the performance of the ACOLBSR scheme with the binary search scheme, sequential search scheme and classification based approaches are presented.},
  doi      = {https://doi.org/10.1016/j.asoc.2021.107635},
  keywords = {Ant Colony Optimization, Search space, Light weight Binary search, Ransomware, Signature database},
  url      = {https://www.sciencedirect.com/science/article/pii/S1568494621005561},
}

@Article{Elhusseiny2021,
  author   = {Abdelrahman M. Elhusseiny and Kaila Bishop and Steven J. Staffa and David Zurakowski and David G. Hunter and Iason S. Mantagos},
  journal  = {Journal of American Association for Pediatric Ophthalmology and Strabismus},
  title    = {Virtual reality prototype for binocular therapy in older children and adults with amblyopia},
  year     = {2021},
  issn     = {1091-8531},
  number   = {4},
  pages    = {217.e1-217.e6},
  volume   = {25},
  abstract = {Purpose
To evaluate the best-corrected visual acuity and stereoacuity gains in children >7 years of age and adults with unilateral amblyopia treated with a prototype virtual reality–based binocular amblyopia therapy.
Methods
In this randomized, double masked, cross-in clinical trial, patients at Boston Children's Hospital with unilateral anisometropic and/or strabismic amblyopia and history of prior amblyopia treatment failure were randomized to either a full-treatment group (8 weeks of binocular treatment using therapeutic software application in virtual reality headset) or a sham-crossover group (4 weeks of sham treatment followed by 4 weeks of binocular treatment). Amblyopic eye visual acuity and stereoacuity were evaluated at 4, 8, and 16 weeks’ follow-up.
Results
The study cohort included 20 participants (10 females), with a median age of 9 years (range, 7-38 years). In the full-treatment group (11 patients), the mean amblyopic eye logMAR visual acuity at 16 weeks was 0.49 ± 0.26, compared with 0.47 ± 0.20 at baseline. In the sham-crossover group, it was 0.51 ± 0.18 at 16 weeks, compared with 0.53 ± 0.21 at baseline. Stereoacuity (log arcsec) was significantly improved, from 7.3 ± 2 at baseline to 6.6 ± 2.3 at 8 weeks (P < 0.001) and 6.7 ± 2.6 at 16 weeks (P < 0.001). No significant adverse events (diplopia, asthenopia, or worsening strabismus) were noted in either group.
Conclusions
Although the virtual reality-based prototype for binocular amblyopia therapy did not significantly improve visual acuity in the amblyopic eyes of older children and adults, stereoacuity did significantly improve compared with baseline; improvements were clinically minute. However, larger studies are required to confirm the results.},
  doi      = {https://doi.org/10.1016/j.jaapos.2021.03.008},
  url      = {https://www.sciencedirect.com/science/article/pii/S1091853121001725},
}

@Article{UrmenetaUlloa2021a,
  author   = {Javier {Urmeneta Ulloa} and Eduardo {Pozo Osinalde} and Juan Lizandro Rodríguez-Hernández and Hugo {Martínez Fernández} and Fabián Islas and Alberto {de Agustín} and Pedro Marcos-Alberca and Patricia Mahía and Miguel Ángel Cobos and Paula {Hernández Mateo} and José Ángel Cabrera and María {Luaces Méndez} and José Juan {Gómez de Diego} and Ana Bustos and Carlos Macaya and Leopoldo {Pérez de Isla}},
  journal  = {Revista Española de Cardiología (English Edition)},
  title    = {Myocardial strain in nonischemic dilated cardiomyopathy with feature tracking. Feasibility and prognostic implications},
  year     = {2021},
  issn     = {1885-5857},
  number   = {2},
  pages    = {159-166},
  volume   = {74},
  abstract = {Introduction and objectives
Myocardial strain analysis could provide additional information to left ventricular ejection fraction (LVEF) in nonischemic dilated cardiomyopathy (NIDC). Our aim was to analyze the feasibility of left ventricular strain evaluation using cardiac magnetic resonance feature tracking (FT) in NIDC, and to determine its clinical and prognostic impact.
Methods
We retrospectively included consecutive patients with NIDC who underwent cardiac magnetic resonance. Left ventricular global longitudinal, circumferential and radial strain were obtained from standard cine sequences using FT analysis software. We evaluated their association with a composite endpoint (heart failure, implantable cardioverter-defibrillator in secondary prevention, or death).
Results
FT analysis could be performed in all of the 98 patients (mean age 68±13 years, 72% men). Intra- and interobserver concordance was good for global longitudinal and circumferential strain but was worse for radial strain. Global circumferential strain was independently associated (OR, 1.16; P=.045) with LVEF normalization during follow-up and was the only morphological parameter independently associated with the composite endpoint (OR, 1.15; P=.038). A cutoff value <−8.2% was able to predict the incidence of this event during follow-up (log-rank 4.6; P=.032).
Conclusions
Left ventricular strain analysis with FT is feasible and reproducible in NIDC. Global circumferential strain was able to predict LVEF recovery and the appearance of major cardiovascular events during follow-up.
Resumen
Introducción y objetivos
El análisis de la deformación miocárdica puede aportar información adicional a la fracción de eyección del ventrículo izquierdo (FEVI) en la miocardiopatía dilatada no isquémica (MDNI). El objetivo es analizar la factibilidad del estudio del strain del ventrículo izquierdo mediante feature tracking (FT) de cardiorresonancia magnética en la MDNI y determinar su relevancia clínica y pronóstica.
Métodos
Se incluyó retrospectivamente a los pacientes consecutivos con MDNI sometidos a cardiorresonancia magnética. Se obtuvieron el strain global longitudinal, circunferencial y radial del ventrículo izquierdo de secuencias convencionales de cine mediante un software de análisis de FT. Se evaluó su asociación con el evento combinado (insuficiencia cardiaca, implante de desfibrilador en prevención secundaria y muerte).
Resultados
Se pudo realizar el FT en los 98 pacientes evaluados (edad, 68± 13 años; el 72% varones). La concordancia intraobservador e interobservadores fue buena para el strain global longitudinal y circunferencial, y más limitada para el radial. El strain global circunferencial se asoció de manera independiente (OR=1,16; p=0,045) con la normalización de la FEVI en el seguimiento y fue el único parámetro morfológico con asociación independiente (OR=1,15; p=0,038) con el evento combinado. Un valor <–8,2% fue capaz de predecir la aparición de este evento en el seguimiento (Log-rank test, 4,6; p=0,032)
Conclusiones
El análisis del strain del ventrículo izquierdo mediante FT es factible y reproducible en MDNI. El strain global circunferencial fue capaz de predecir la recuperación de la FEVI y la aparición de eventos cardiovasculares mayores en el seguimiento.},
  doi      = {https://doi.org/10.1016/j.rec.2019.12.011},
  keywords = {Dilated cardiomyopathy, Myocardial strain, Feature tracking, Cardiac magnetic resonance, Miocardiopatía dilatada, Deformación miocárdica, , Cardiorresonancia magnética},
  url      = {https://www.sciencedirect.com/science/article/pii/S1885585720300670},
}

@Book{PratapSingh2022,
  author = {Pratap Singh,S. and Nageswara Rao,A. and Raghavendra Gupta,T.},
  title  = {Real-Time Security Monitoring System Using Applications Log Data},
  year   = {2022},
  series = {Lecture Notes in Networks and Systems},
  volume = {213},
  pages  = {375-384},
  url    = {www.scopus.com},
}

@Article{Li2021b,
  author  = {Li,B. and Zhao,Y. and Cai,W. and Ming,A. and Li,H.},
  journal = {Clinical Proteomics},
  title   = {Validation and update of a multivariable prediction model for the identification and management of patients at risk for hepatocellular carcinoma},
  year    = {2021},
  number  = {1},
  volume  = {18},
  url     = {www.scopus.com},
}

@Article{Song2021,
  author  = {Song,C. and Yang,B. and Zhang,L. and Wu,D.},
  journal = {Plant Methods},
  title   = {A handheld device for measuring the diameter at breast height of individual trees using laser ranging and deep-learning based image recognition},
  year    = {2021},
  number  = {1},
  volume  = {17},
  url     = {www.scopus.com},
}

@Article{Rikhtechi2021,
  author  = {Rikhtechi,L. and Rafe,V. and Rezakhani,A.},
  journal = {Journal of Information Systems and Telecommunication},
  title   = {Secured Access Control in Security Information and Event Management Systems},
  year    = {2021},
  number  = {33},
  pages   = {67-78},
  volume  = {9},
  url     = {www.scopus.com},
}

@Article{Kassaw2021,
  author  = {Kassaw,A. and Amare,D. and Birhanu,M. and Tesfaw,A. and Zeleke,S. and Arage,G. and Kefale,D.},
  journal = {BMC Pediatrics},
  title   = {Survival and predictors of mortality among severe acute malnourished under-five children admitted at Felege-Hiwot comprehensive specialized hospital, northwest, Ethiopia: a retrospective cohort study},
  year    = {2021},
  number  = {1},
  volume  = {21},
  url     = {www.scopus.com},
}

@Article{Ren2021,
  author  = {Ren,Z. and Povysil,G. and Hostyk,J. A. and Cui,H. and Bhardwaj,N. and Goldstein,D. B.},
  journal = {BMC Bioinformatics},
  title   = {ATAV: a comprehensive platform for population-scale genomic analyses},
  year    = {2021},
  note    = {Cited By :2},
  number  = {1},
  volume  = {22},
  url     = {www.scopus.com},
}

@Article{Koos2021,
  author  = {Koos,K. and Oláh,G. and Balassa,T. and Mihut,N. and Rózsa,M. and Ozsvár,A. and Tasnadi,E. and Barzó,P. and Faragó,N. and Puskás,L. and Molnár,G. and Molnár,J. and Tamás,G. and Horvath,P.},
  journal = {Nature Communications},
  title   = {Automatic deep learning-driven label-free image-guided patch clamp system},
  year    = {2021},
  number  = {1},
  volume  = {12},
  url     = {www.scopus.com},
}

@Article{Takaori2021,
  author  = {Takaori,K. and Iwatani,H. and Yamato,M. and Ito,T.},
  journal = {BMC Nephrology},
  title   = {User of angiotensin-converting-enzyme inhibitor and/or angiotensin II receptor blocker might be associated with vascular calcification in predialysis chronic kidney disease patients: a retrospective single-center observational study: ACEI/ARB and vascular calcification},
  year    = {2021},
  number  = {1},
  volume  = {22},
  url     = {www.scopus.com},
}

@Article{Yang2021a,
  author  = {Yang,K. and Song,Y. -. and Chen,X. -. and Wang,J. -. and Li,L. and Yin,G. and Zheng,Y. -. and Wei,M. -. and Lu,M. -. and Zhao,S. -.},
  journal = {European Heart Journal Cardiovascular Imaging},
  title   = {Apical hypertrophic cardiomyopathy with left ventricular apical aneurysm: Prevalence, cardiac magnetic resonance characteristics, and prognosis},
  year    = {2021},
  note    = {Cited By :1},
  number  = {12},
  pages   = {1341-1350},
  volume  = {21},
  url     = {www.scopus.com},
}

@Article{Sarathchandra2021,
  author  = {Sarathchandra,M. and Karandana,C. and Heenatigala,W. and Dayarathna,M. and Jayasena,S.},
  journal = {Concurrency and Computation: Practice and Experience},
  title   = {Resource aware scheduler for distributed stream processing in cloud native environments},
  year    = {2021},
  number  = {20},
  volume  = {33},
  url     = {www.scopus.com},
}

@Article{Zhu2021,
  author  = {Zhu,Y. -. and Jian,H. -. and Long,Y. -. and Li,B. and Wang,S. and Wu,X. -. and Zhong,Z. -. and Zhang,Y. -.},
  journal = {Ruan Jian Xue Bao/Journal of Software},
  title   = {Building New Key-value Store with High Performance and High Availability},
  year    = {2021},
  number  = {10},
  pages   = {3203-3218},
  volume  = {32},
  url     = {www.scopus.com},
}

@Article{Akinola2021,
  author  = {Akinola,O. A. and Olopade,S. O. and Afolabi,A. S.},
  journal = {Indonesian Journal of Electrical Engineering and Computer Science},
  title   = {Development of mobile and desktop applications for a fingerprint-based attendance management system},
  year    = {2021},
  number  = {1},
  pages   = {570-580},
  volume  = {24},
  url     = {www.scopus.com},
}

@Article{Ojala2021,
  author  = {Ojala,A. E. K. and Virtasalo,J. J. and Lindsberg,E. and Markovaara-Koivisto,M.},
  journal = {Geotechnical and Geological Engineering},
  title   = {Basin-Scale 3D Sedimentary Modelling: An Approach to Subdivide Baltic Sea Onshore Sediments for Land use and Construction},
  year    = {2021},
  number  = {7},
  pages   = {4855-4876},
  volume  = {39},
  url     = {www.scopus.com},
}

@Article{Gao2021,
  author  = {Gao,H. -. and Shen,W. -. and Zhang,X. -. and Xu,J. -. and Li,Y. -. and Li,S. -. and Zhu,S. -.},
  journal = {Annals of Palliative Medicine},
  title   = {Preliminary analysis of the benefits of different irradiation types on patients with postoperative locoregional recurrence of esophageal cell squamous carcinoma},
  year    = {2021},
  number  = {9},
  pages   = {9467-9479},
  volume  = {10},
  url     = {www.scopus.com},
}

@Article{DevrimLanpir2021,
  author  = {Devrim-Lanpir,A. and İlktaç,H. Y. and Wirnitzer,K. and Hill,L. and Rosemann,T. and Knechtle,B.},
  journal = {PLoS ONE},
  title   = {Vegan vs. omnivore diets paradox: A whole-metagenomic approach for defining metabolic networks during the race in ultra-marathoners - A before and after study design},
  year    = {2021},
  number  = {9 September},
  volume  = {16},
  url     = {www.scopus.com},
}

@Article{Nobles2021,
  author  = {Nobles,C. J. and Lu,Y. -. and Andriessen,V. C. and Bevan,S. S. and Radoc,J. G. and Alkhalaf,Z. and Schisterman,E. F.},
  journal = {American Journal of Epidemiology},
  title   = {A Data-Based Approach to Evaluating Representation by Gender and Affiliation in Key Presentation Formats at the Annual Meeting of the Society for Epidemiologic Research},
  year    = {2021},
  number  = {9},
  pages   = {1710-1720},
  volume  = {190},
  url     = {www.scopus.com},
}

@Article{Pellegrin2021,
  author  = {Pellegrin,F. and Yücel,Z. and Monden,A. and Leelaprute,P.},
  journal = {Empirical Software Engineering},
  title   = {Task estimation for software company employees based on computer interaction logs},
  year    = {2021},
  number  = {5},
  volume  = {26},
  url     = {www.scopus.com},
}

@InProceedings{Fortz2021a,
  author    = {Fortz,S. and Temple,P. and Devroey,X. and Heymans,P. and Perrouin,G.},
  booktitle = {MaLTESQuE 2021 - Proceedings of the 5th International Workshop on Machine Learning Techniques for Software Quality Evolution, co-located with ESEC/FSE 2021},
  title     = {VaryMinions: Leveraging RNNs to identify variants in event logs},
  year      = {2021},
  note      = {Cited By :1},
  pages     = {13-18},
  url       = {www.scopus.com},
}

@InProceedings{2021,
  booktitle = {MaLTESQuE 2021 - Proceedings of the 5th International Workshop on Machine Learning Techniques for Software Quality Evolution, co-located with ESEC/FSE 2021},
  title     = {MaLTESQuE 2021 - Proceedings of the 5th International Workshop on Machine Learning Techniques for Software Quality Evolution, co-located with ESEC/FSE 2021},
  year      = {2021},
  url       = {www.scopus.com},
}

@Article{Choi2021,
  author  = {Choi,D. and R’Bigui,H. and Cho,C.},
  journal = {Sustainability (Switzerland)},
  title   = {Candidate digital tasks selection methodology for automation with robotic process automation},
  year    = {2021},
  number  = {16},
  volume  = {13},
  url     = {www.scopus.com},
}

@Article{Tan2021,
  author  = {Tan,H. and Jiang,S. H. -. and Han,Z. and Li,M.},
  journal = {IEEE/ACM Transactions on Networking},
  title   = {Asymptotically Optimal Online Caching on Multiple Caches with Relaying and Bypassing},
  year    = {2021},
  number  = {4},
  pages   = {1841-1852},
  volume  = {29},
  url     = {www.scopus.com},
}

@Article{Yermolaev2021,
  author  = {Yermolaev,O. and Mukharamova,S. and Vedeneeva,E.},
  journal = {Catena},
  title   = {River runoff modeling in the European territory of Russia},
  year    = {2021},
  note    = {Cited By :2},
  volume  = {203},
  url     = {www.scopus.com},
}

@Article{Hai2021,
  author  = {Hai,Y. and Chong,W. and Liu,J. -. and Forsberg,F. and Eisenbrey,J.},
  journal = {Academic Radiology},
  title   = {The Diagnostic Value of Contrast-Enhanced Ultrasound for Monitoring Complications After Kidney Transplantation—A Systematic Review and Meta-Analysis},
  year    = {2021},
  number  = {8},
  pages   = {1086-1093},
  volume  = {28},
  url     = {www.scopus.com},
}

@InProceedings{Pandey2021,
  author    = {Pandey,P. and Nisha,T. N.},
  booktitle = {Journal of Physics: Conference Series},
  title     = {Challenges in Single Sign-On},
  year      = {2021},
  volume    = {1964},
  chapter   = {4},
  url       = {www.scopus.com},
}

@Article{Schumacher2021,
  author  = {Schumacher,S. P. and Stuijfzand,W. J. and de Winter,R. W. and van Diemen,P. A. and Bom,M. J. and Everaars,H. and Driessen,R. S. and Kamperman,L. and Kockx,M. and Hagen,B. S. H. and Raijmakers,P. G. and van de Ven,P. M. and van Rossum,A. C. and Opolski,M. P. and Nap,A. and Knaapen,P.},
  journal = {JACC: Cardiovascular Interventions},
  title   = {Ischemic Burden Reduction and Long-Term Clinical Outcomes After Chronic Total Occlusion Percutaneous Coronary Intervention},
  year    = {2021},
  note    = {Cited By :1},
  number  = {13},
  pages   = {1407-1418},
  volume  = {14},
  url     = {www.scopus.com},
}

@Article{Bilardi2021,
  author  = {Bilardi,D. and Rapa,E. and Bernays,S. and Lang,T.},
  journal = {BMJ Open},
  title   = {Measuring research capacity development in healthcare workers: A systematic review},
  year    = {2021},
  number  = {7},
  volume  = {11},
  url     = {www.scopus.com},
}

@Article{He2021a,
  author  = {He,S. and He,P. and Chen,Z. and Yang,T. and Su,Y. and Lyu,M. R.},
  journal = {ACM Computing Surveys},
  title   = {A Survey on Automated Log Analysis for Reliability Engineering},
  year    = {2021},
  number  = {6},
  volume  = {54},
  url     = {www.scopus.com},
}

@Article{Miranda2021,
  author  = {Miranda,M. N. S. and Pingarilho,M. and Pimentel,V. and Martins,M. D. R. O. and Vandamme,A. -. and Bobkova,M. and Böhm,M. and Seguin-Devaux,C. and Paredes,R. and Rubio,R. and Zazzi,M. and Incardona,F. and Abecasis,A.},
  journal = {Pathogens},
  title   = {Determinants of hiv-1 late presentation in patients followed in europe},
  year    = {2021},
  number  = {7},
  volume  = {10},
  url     = {www.scopus.com},
}

@Article{Marjai2021,
  author  = {Marjai,P. and Lehotay-Kéry,P. and Kiss,A.},
  journal = {Computers},
  title   = {The use of template miners and encryption in log message compression},
  year    = {2021},
  number  = {7},
  volume  = {10},
  url     = {www.scopus.com},
}

@Article{Chen2021a,
  author  = {Chen,B. and Jiang,Z. M. J.},
  journal = {ACM Computing Surveys},
  title   = {A survey of software log instrumentation},
  year    = {2021},
  number  = {4},
  volume  = {54},
  url     = {www.scopus.com},
}

@Article{Szeverinski2021,
  author  = {Szeverinski,P. and Kowatsch,M. and Künzler,T. and Meinschad,M. and Clemens,P. and DeVries,A. F.},
  journal = {Journal of Applied Clinical Medical Physics},
  title   = {Evaluation of 4-Hz log files and secondary Monte Carlo dose calculation as patient-specific quality assurance for VMAT prostate plans},
  year    = {2021},
  number  = {7},
  pages   = {235-244},
  volume  = {22},
  url     = {www.scopus.com},
}

@Article{Schlesinger2021,
  author  = {Schlesinger,D. J. and Sanders,J. C. and Muller,D. A. and Nordström,H. and Sheehan,J. P.},
  journal = {Medical physics},
  title   = {8+ Year Performance of the Gamma Knife Perfexion/Icon Patient Positioning System and Possibilities for Preemptive Fault Detection Using Statistical Process Control},
  year    = {2021},
  number  = {7},
  pages   = {3425-3437},
  volume  = {48},
  url     = {www.scopus.com},
}

@Article{Liu2021c,
  author  = {Liu,J. and Zhou,C. and Wang,Y. and Yang,C. and Shi,Q. and Huang,S. and Chen,Y. and Li,T. and Xiong,B.},
  journal = {Abdominal Radiology},
  title   = {The combination of Child–Pugh score and quantitative CT-based spleen volume could predict the risk of hepatic encephalopathy after transjugular intrahepatic portosystemic shunt creation},
  year    = {2021},
  number  = {7},
  pages   = {3464-3470},
  volume  = {46},
  url     = {www.scopus.com},
}

@Article{Tanaka2021,
  author  = {Tanaka,T. and Asami,M. and Yahagi,K. and Ninomiya,K. and Okuno,T. and Horiuchi,Y. and Komiyama,K. and Tanaka,J. and Yokozuka,M. and Miura,S. and Aoki,J. and Tanabe,K.},
  journal = {Journal of cardiology},
  title   = {Prognostic impact of arterial stiffness following transcatheter aortic valve replacement},
  year    = {2021},
  note    = {Cited By :2},
  number  = {1},
  pages   = {37-43},
  volume  = {78},
  url     = {www.scopus.com},
}

@Article{Wilhelm2021,
  author  = {Wilhelm,M. -. and Chan,M. K. H. and Abel,B. and Cremers,F. and Siebert,F. -. and Wurster,S. and Krug,D. and Wolff,R. and Dunst,J. and Hildebrandt,G. and Schweikard,A. and Rades,D. and Ernst,F. and Blanck,O.},
  journal = {Strahlentherapie und Onkologie},
  title   = {Tumor-dose-rate variations during robotic radiosurgery of oligo and multiple brain metastases},
  year    = {2021},
  note    = {Cited By :1},
  number  = {7},
  pages   = {581-591},
  volume  = {197},
  url     = {www.scopus.com},
}

@Article{Muller2021,
  author  = {Muller,I. B. and Meijers,S. and Kampstra,P. and van Dijk,S. and van Elswijk,M. and Lin,M. and Wojtuszkiewicz,A. M. and Jansen,G. and de Jonge,R. and Cloos,J.},
  journal = {BMC bioinformatics},
  title   = {Computational comparison of common event-based differential splicing tools: practical considerations for laboratory researchers},
  year    = {2021},
  number  = {1},
  pages   = {347},
  volume  = {22},
  url     = {www.scopus.com},
}

@InProceedings{Ludwig2021a,
  author    = {Ludwig,S. and Rausch,A. and Deutscher,V. and Seifried,J.},
  booktitle = {L@S 2021 - Proceedings of the 8th ACM Conference on Learning @ Scale},
  title     = {Problem Solving Analytics (PSA) in the Web-Based Office Simulation LUCA},
  year      = {2021},
  pages     = {363-364},
  url       = {www.scopus.com},
}

@Article{MacDonald2021,
  author  = {MacDonald,J. J. and Jorge-Miller,A. and Enders,C. K. and McCannel,T. A. and Beran,T. M. and Stanton,A. L.},
  journal = {Health psychology : official journal of the Division of Health Psychology, American Psychological Association},
  title   = {Visual impairment and depression in uveal melanoma: Optimism and pessimism as moderators},
  year    = {2021},
  number  = {6},
  pages   = {408-417},
  volume  = {40},
  url     = {www.scopus.com},
}

@Article{Bera2021,
  author  = {Bera,D. and Schuts,M. and Hooman,J. and Kurtev,I.},
  journal = {Computer Science and Information Systems},
  title   = {Reverse engineering models of software interfaces},
  year    = {2021},
  number  = {3},
  pages   = {657-686},
  volume  = {18},
  url     = {www.scopus.com},
}

@Article{Hsu2021,
  author  = {Hsu,C. H. and Chao,S. J. and Chern,S. G. and Hwang,H.},
  journal = {Geotechnical Engineering},
  title   = {Using a stochastic model to study the ground motion of comprehensive subsurface structure},
  year    = {2021},
  number  = {2},
  pages   = {9-16},
  volume  = {52},
  url     = {www.scopus.com},
}

@Article{Park2021,
  author  = {Park,S. -. and Ng,B. P. and Chun,H. K. and Park,C.},
  journal = {American Journal of Managed Care},
  title   = {Hospital Outcomes of Male Breast Cancer inthe United States},
  year    = {2021},
  number  = {6},
  volume  = {27},
  url     = {www.scopus.com},
}

@Article{Wang2021a,
  author  = {Wang,X. and Zhao,Y. and Xiao,H. and Wang,X. and Chi,X.},
  journal = {Applied Sciences (Switzerland)},
  title   = {Ltmatch: A method to abstract pattern from unstructured log},
  year    = {2021},
  number  = {11},
  volume  = {11},
  url     = {www.scopus.com},
}

@Article{Magomedov2021,
  author  = {Magomedov,S. and Ilin,D. and Nikulchev,E.},
  journal = {Applied Sciences (Switzerland)},
  title   = {Resource analysis of the log files storage based on simulation models in a virtual environment},
  year    = {2021},
  number  = {11},
  volume  = {11},
  url     = {www.scopus.com},
}

@Article{Zhang2021,
  author  = {Zhang,X. and Kusrini,K.},
  journal = {Multimedia Tools and Applications},
  title   = {Autonomous long-range drone detection system for critical infrastructure safety},
  year    = {2021},
  number  = {15},
  pages   = {23723-23743},
  volume  = {80},
  url     = {www.scopus.com},
}

@Article{Zhao2021,
  author  = {Zhao,J. and Chen,Z. and Wu,X. and Xing,Y. and Li,Y.},
  journal = {Frontiers in Oncology},
  title   = {Study of an Online Plan Verification Method and the Sensitivity of Plan Delivery Accuracy to Different Beam Parameter Errors in Proton and Carbon Ion Radiotherapy},
  year    = {2021},
  volume  = {11},
  url     = {www.scopus.com},
}

@InProceedings{Abbas2021,
  author    = {Abbas,S. A. and Vodyaho,A. I. and Zhukova,N. A. and Chervontsev,M. A.},
  booktitle = {Journal of Physics: Conference Series},
  title     = {Solving data collection tasks in heterogeneous distributed software intensive system using model approach},
  year      = {2021},
  volume    = {1864},
  chapter   = {1},
  url       = {www.scopus.com},
}

@InProceedings{Yan2021,
  author    = {Yan,J. N. and Gu,Z. and Rzeszotarski,J. M.},
  booktitle = {Conference on Human Factors in Computing Systems - Proceedings},
  title     = {Tessera: Discretizing data analysisworkflows on a task level},
  year      = {2021},
  note      = {Cited By :1},
  url       = {www.scopus.com},
}

@Article{Bentzley2021,
  author  = {Bentzley,B. S. and Han,S. S. and Neuner,S. and Humphreys,K. and Kampman,K. M. and Halpern,C. H.},
  journal = {JAMA Network Open},
  title   = {Comparison of Treatments for Cocaine Use Disorder among Adults: A Systematic Review and Meta-analysis},
  year    = {2021},
  note    = {Cited By :2},
  number  = {5},
  volume  = {4},
  url     = {www.scopus.com},
}

@InProceedings{2021a,
  booktitle = {Proceedings - International Conference on Software Engineering},
  title     = {Proceedings - International Conference on Software Engineering},
  year      = {2021},
  url       = {www.scopus.com},
}

@Article{Moore2021,
  author  = {Moore,C. and Valenti,A. and Robinson,E. and Perkins,R.},
  journal = {Applied Clinical Informatics},
  title   = {Using Log Data to Measure Provider EHR Activity at a Cancer Center during Rapid Telemedicine Deployment},
  year    = {2021},
  note    = {Cited By :1},
  number  = {3},
  pages   = {629-636},
  volume  = {12},
  url     = {www.scopus.com},
}

@Article{You2021,
  author  = {You,Y. and Wang,H. and Ren,T. and Gu,S. -. and Sun,J. -.},
  journal = {Ruan Jian Xue Bao/Journal of Software},
  title   = {Storage Design of Tracing-logs for Application Performance Management System},
  year    = {2021},
  number  = {5},
  pages   = {1302-1321},
  volume  = {32},
  url     = {www.scopus.com},
}

@Article{Barnes2021,
  author  = {Barnes,E. A. and Martell,K. and Parra-Herran,C. and Taggar,A. S. and Donovan,E. and Leung,E.},
  journal = {Brachytherapy},
  title   = {Substantial lymphovascular space invasion predicts worse outcomes in early-stage endometrioid endometrial cancer},
  year    = {2021},
  note    = {Cited By :1},
  number  = {3},
  pages   = {527-535},
  volume  = {20},
  url     = {www.scopus.com},
}

@Article{Ma2021a,
  author  = {Ma,X. and Duan,C. and Cai,S. and Wang,X. and Jiang,C. and Yue,Z. and Li,K. and Jin,M. and Zhang,D. and Wang,X. and Peng,X.},
  journal = {Pediatric Blood and Cancer},
  title   = {The development and initial evaluation of referral flowchart for suspected neuroblastoma for pediatricians in nononcology clinics in China},
  year    = {2021},
  number  = {5},
  volume  = {68},
  url     = {www.scopus.com},
}

@Article{Hokama2021,
  author  = {Hokama,Y. and Tanaka,N. and Takashima,H. and Kadota,K. and Fujita,H. and Tan,M. and Yamada,R. and Naruse,H. and Kawamura,A. and Suzuki,N. and Takeuchi,T. and Tazaki,J. and Yamaki,M. and Takamisawa,I. and Abe,S. and Terai,H. and Makiguchi,N. and Matsumoto,C. and Chikamori,T.},
  journal = {Journal of cardiology},
  title   = {Insufficient recovery of fractional flow reserve even after optimal implantation of drug-eluting stents: 3-year outcomes from the FUJI study},
  year    = {2021},
  number  = {5},
  pages   = {532-538},
  volume  = {77},
  url     = {www.scopus.com},
}

@Article{Patel2021a,
  author  = {Patel,L. G. and Peck,T. and Starr,M. R. and Ammar,M. J. and Khan,M. A. and Yonekawa,Y. and Klufas,M. A. and Regillo,C. D. and Ho,A. C. and Xu,D.},
  journal = {Ophthalmology},
  title   = {Clinical Presentation of Rhegmatogenous Retinal Detachment during the COVID-19 Pandemic: A Historical Cohort Study},
  year    = {2021},
  note    = {Cited By :7},
  number  = {5},
  pages   = {686-692},
  volume  = {128},
  url     = {www.scopus.com},
}

@Article{Otoo2021,
  author  = {Otoo,D. and Hodgetts,D.},
  journal = {Geoscientific Model Development},
  title   = {Porosity and permeability prediction through forward stratigraphic simulations using GPM™ and Petrel™: Application in shallow marine depositional settings},
  year    = {2021},
  note    = {Cited By :1},
  number  = {4},
  pages   = {2075-2095},
  volume  = {14},
  url     = {www.scopus.com},
}

@Article{Liu2021d,
  author  = {Liu,X. and Shen,G. and Chen,L. and Qian,Z. and Zhang,N. and Chen,Y. and Chen,Y. and Cao,J. and Cheng,H. and Du,W. and Li,B. and Li,G. and Li,Y. and Liang,X. and Liu,M. and Lu,H. and Luo,Z. and Ren,Y. and Zhang,Y. and Zhu,D. and Tao,S.},
  journal = {Environmental Science and Technology},
  title   = {Spatially Resolved Emission Factors to Reduce Uncertainties in Air Pollutant Emission Estimates from the Residential Sector},
  year    = {2021},
  note    = {Cited By :3},
  number  = {8},
  pages   = {4483-4493},
  volume  = {55},
  url     = {www.scopus.com},
}

@InProceedings{Chen2021b,
  author    = {Chen,D. D. and Lim,W. S. and Bakhshalipour,M. and Gibbons,P. B. and Hoe,J. C. and Parno,B.},
  booktitle = {International Conference on Architectural Support for Programming Languages and Operating Systems - ASPLOS},
  title     = {HerQules: Securing programs via hardware-enforced message queues},
  year      = {2021},
  pages     = {773-788},
  url       = {www.scopus.com},
}

@Article{Rezaeyan2021,
  author  = {Rezaeyan,A. and Pipich,V. and Busch,A.},
  journal = {Journal of Applied Crystallography},
  title   = {MATSAS: A small-angle scattering computing tool for porous systems},
  year    = {2021},
  pages   = {697-706},
  volume  = {54},
  url     = {www.scopus.com},
}

@Article{Wessel2021,
  author  = {van Wessel,S. and van Vliet,H. A. A. M. and Schoot,B. C. and Weyers,S. and Hamerlynck,T. W. O.},
  journal = {European Journal of Obstetrics and Gynecology and Reproductive Biology},
  title   = {Hysteroscopic morcellation versus bipolar resection for removal of type 0 and 1 submucous myomas: A randomized trial},
  year    = {2021},
  note    = {Cited By :3},
  pages   = {32-37},
  volume  = {259},
  url     = {www.scopus.com},
}

@Article{Aleixo2021,
  author  = {Aleixo,G. F. P. and Yu,H. and Chen,Y. T. and Nyrop,K. A. and Louie,R. J. and Deal,A. M. and Shachar,S. S. and Muss,H. B. and Williams,G. R.},
  journal = {Breast cancer research and treatment},
  title   = {Myosteatosis evaluation using erector spinae and psoas muscles to predict adverse events during adjuvant chemotherapy for breast cancer},
  year    = {2021},
  number  = {2},
  pages   = {487-495},
  volume  = {186},
  url     = {www.scopus.com},
}

@Article{Atkinson2021,
  author  = {Atkinson,K. D. and Nobles,C. J. and Kanner,J. and Männistö,T. and Mendola,P.},
  journal = {Annals of Epidemiology},
  title   = {Does maternal race or ethnicity modify the association between maternal psychiatric disorders and preterm birth?},
  year    = {2021},
  pages   = {34-39.e2},
  volume  = {56},
  url     = {www.scopus.com},
}

@Article{Oliveira2021,
  author  = {Oliveira,V. C. and Oliveira,P. and Moreira,M. and Correia,M. and Lima,P. and Silva,J. C. and Pereira,R. V. and Fonseca,M.},
  journal = {Annals of Vascular Surgery},
  title   = {Impact of Total Psoas Area and Lean Muscular Area on Mortality after Endovascular Aortic Aneurysm Repair},
  year    = {2021},
  note    = {Cited By :2},
  pages   = {479-487},
  volume  = {72},
  url     = {www.scopus.com},
}

@Article{Xing2021,
  author  = {Xing,W. and Li,C. and Chen,G. and Huang,X. and Chao,J. and Massicotte,J. and Xie,C.},
  journal = {Journal of Educational Computing Research},
  title   = {Automatic Assessment of Students’ Engineering Design Performance Using a Bayesian Network Model},
  year    = {2021},
  number  = {2},
  pages   = {230-256},
  volume  = {59},
  url     = {www.scopus.com},
}

@Article{Pfail2021,
  author  = {Pfail,J. L. and Katims,A. B. and Gul,Z. and Rosenzweig,S. J. and Razdan,S. and Nathaniel,S. and Martini,A. and Mehrazin,R. and Wiklund,P. N. and Loftus,K. and Sim,A. and DeMaria,S. and Sfakianos,J. P.},
  journal = {Urologic Oncology: Seminars and Original Investigations},
  title   = {Can anesthetics affect bladder cancer recurrence? Total intravenous versus volatile anesthesia in patients undergoing robot-assisted radical cystectomy: A single institution retrospective analysis},
  year    = {2021},
  number  = {4},
  pages   = {233.e1-233.e8},
  volume  = {39},
  url     = {www.scopus.com},
}

@Article{Patel2021b,
  author  = {Patel,A. K. and Pan,X. and Vila,D. M. and Frankel,W. L. and Chen,W. and Perry,K. A. and Merritt,R. E. and D'Souza,D. M. and Wuthrick,E. J. and Williams,T. M.},
  journal = {Journal of clinical pathology},
  title   = {Perineural invasion predicts for locoregional failure in patients with oesophageal adenocarcinoma treated with neoadjuvant chemoradiotherapy},
  year    = {2021},
  number  = {4},
  pages   = {228-233},
  volume  = {74},
  url     = {www.scopus.com},
}

@Article{AJISAFE2021,
  author  = {AJISAFE,Y. C.},
  journal = {Contributions to Geophysics and Geodesy},
  title   = {Evaluation of the reservoir architectural elements in deepwater turbidites of Niger Delta - a case study from the /AFUN" Field},
  year    = {2021},
  number  = {1},
  pages   = {83-108},
  volume  = {51},
  url     = {www.scopus.com},
}

@Article{Sowmya2021,
  author  = {Sowmya,K. B. and Thejaswini,A.},
  journal = {International Journal of Reconfigurable and Embedded Systems},
  title   = {Systematising troubleshooting of disputes in network},
  year    = {2021},
  number  = {1},
  pages   = {32-36},
  volume  = {10},
  url     = {www.scopus.com},
}

@Article{2021b,
  journal = {Visual Informatics},
  title   = {Erratum regarding missing Declaration of Competing Interest statements in previously published articles (Visual Informatics (2018) 2(4) (191–197), (S2468502X18300573), (10.1016/j.visinf.2018.12.001))},
  year    = {2021},
  number  = {1},
  pages   = {44},
  volume  = {5},
  url     = {www.scopus.com},
}

@Article{BenAbdallah2021,
  author  = {Ben Abdallah,K. and Souissi,S. and Essaib,H. and Ghomari,S.},
  journal = {Arabian Journal of Geosciences},
  title   = {Hasdrubal Field, Tunisia: geomechanical integrity study},
  year    = {2021},
  number  = {6},
  volume  = {14},
  url     = {www.scopus.com},
}

@Article{Santini2021,
  author  = {Santini,D. and Stellato,M. and De Giorgi,U. and Pantano,F. and De Lisi,D. and Casadei,C. and Maruzzo,M. and Bimbatti,D. and Naglieri,E. and Buti,S. and Bersanelli,M. and De Vivo,R. and Di Lorenzo,G. and Sbrana,A. and Verzoni,E. and Soraru',M. and Fornarini,G. and Mucciarini,C. and Grillone,F. and Mini,E. and Vignani,F. and Attademo,L. and Pignata,S. and Procopio,G.},
  journal = {American Journal of Clinical Oncology: Cancer Clinical Trials},
  title   = {Clinical Outcomes of Metastatic Renal Carcinoma following Disease Progression to Programmed Death (PD)-1 or PD-L1 Inhibitors (IO): A Meet-URO Group Real World Study (Meet-Uro 7)},
  year    = {2021},
  note    = {Cited By :2},
  number  = {3},
  pages   = {121-125},
  volume  = {44},
  url     = {www.scopus.com},
}

@Article{Poghosyan2021,
  author  = {Poghosyan,A. and Harutyunyan,A. and Grigoryan,N. and Pang,C. and Oganesyan,G. and Ghazaryan,S. and Hovhannisyan,N.},
  journal = {Sensors},
  title   = {An enterprise time series forecasting system for cloud applications using transfer learning},
  year    = {2021},
  number  = {5},
  pages   = {1-28},
  volume  = {21},
  url     = {www.scopus.com},
}

@Article{Boekema2021,
  author  = {Boekema,B. and Stoop,M. and Vlig,M. and van Liempt,J. and Sobota,A. and Ulrich,M. and Middelkoop,E.},
  journal = {Applied Microbiology and Biotechnology},
  title   = {Antibacterial and safety tests of a flexible cold atmospheric plasma device for the stimulation of wound healing},
  year    = {2021},
  note    = {Cited By :2},
  number  = {5},
  pages   = {2057-2070},
  volume  = {105},
  url     = {www.scopus.com},
}

@Article{Daltro2021,
  author  = {Daltro,D. D. S. and Negri,R. and Cobuci,J. A.},
  journal = {Livestock Science},
  title   = {Heterosis effects on 305-day milk yield in a Girolando dairy cattle population in different lactation orders},
  year    = {2021},
  volume  = {245},
  url     = {www.scopus.com},
}

@Article{Kotov2021,
  author  = {Kotov,A. and Heidemann,F. and Kuchenbecker,J. and Peters,F. and Marschall,U. and Acar,L. and Debus,E. S. and L'Hoest,H. and Behrendt,C. -.},
  journal = {European Journal of Vascular and Endovascular Surgery},
  title   = {Sex Disparities in Long Term Outcomes After Open Surgery for Chronic Limb Threatening Ischaemia: A Propensity Score Matched Analysis of Health Insurance Claims},
  year    = {2021},
  note    = {Cited By :1},
  number  = {3},
  pages   = {423-429},
  volume  = {61},
  url     = {www.scopus.com},
}

@Article{Li2021c,
  author  = {Li,Q. and Zhu,S. and Liu,S. and Zhang,G. and Li,X.},
  journal = {Journal of Surgical Research},
  title   = {Limited Lymph Node Resection Does Not Decrease Postoperative Mortality After Esophagectomy in Octogenarians With Thoracic Esophageal Cancer},
  year    = {2021},
  pages   = {538-545},
  volume  = {259},
  url     = {www.scopus.com},
}

@Article{Frew2021,
  author  = {Frew,J. W. and Jiang,C. S. and Singh,N. and Grand,D. and Navrazhina,K. and Vaughan,R. and Krueger,J. G.},
  journal = {Clinical and experimental dermatology},
  title   = {Dermal tunnels influence time to clinical response and family history influences time to loss of clinical response in patients with hidradenitis suppurativa treated with adalimumab},
  year    = {2021},
  note    = {Cited By :5},
  number  = {2},
  pages   = {306-313},
  volume  = {46},
  url     = {www.scopus.com},
}

@Article{Yamamoto2021,
  author  = {Yamamoto,H. and Kihara,Y. and Fujimoto,S. and Daida,H. and Kobuke,K. and Iwanaga,Y. and Miyazaki,S. and Kawasaki,T. and Fujii,T. and Kuribayashi,S.},
  journal = {Journal of Cardiovascular Computed Tomography},
  title   = {Predictive value of the coronary artery calcium score and advanced plaque characteristics: Post hoc analysis of the PREDICT registry},
  year    = {2021},
  note    = {Cited By :1},
  number  = {2},
  pages   = {148-153},
  volume  = {15},
  url     = {www.scopus.com},
}

@Article{LaCorte2021,
  author  = {La Corte,E. and Broggi,M. and Raggi,A. and Schiavolin,S. and Acerbi,F. and Danesi,G. and Farinotti,M. and Felisati,G. and Maccari,A. and Pollo,B. and Saini,M. and Toppo,C. and Valvo,F. and Ghidoni,R. and Bruzzone,M. G. and DiMeco,F. and Ferroli,P.},
  journal = {Acta Neurochirurgica},
  title   = {Peri-operative prognostic factors for primary skull base chordomas: results from a single-center cohort.},
  year    = {2021},
  note    = {Cited By :2},
  number  = {3},
  pages   = {689-697},
  volume  = {163},
  url     = {www.scopus.com},
}

@Article{Rezaei2021,
  author  = {Rezaei,M. and Reza,S. and Farnia,V. and Rahmani,S.},
  journal = {Iranian Journal of Psychiatry},
  title   = {Recurrent events model application in determining the risk factors of bipolar disorder recurrence},
  year    = {2021},
  number  = {1},
  pages   = {68-75},
  volume  = {16},
  url     = {www.scopus.com},
}

@Article{Drakoulogkonas2021,
  author  = {Drakoulogkonas,P. and Apostolou,D.},
  journal = {Electronics (Switzerland)},
  title   = {On the selection of process mining tools},
  year    = {2021},
  note    = {Cited By :1},
  number  = {4},
  pages   = {1-24},
  volume  = {10},
  url     = {www.scopus.com},
}

@Article{Yuan2021,
  author  = {Yuan,M. and Singer,M. R. and Moore,L. L.},
  journal = {Nutrients},
  title   = {Yogurt consumption is associated with lower levels of chronic inflammation in the Framingham offspring study},
  year    = {2021},
  number  = {2},
  pages   = {1-13},
  volume  = {13},
  url     = {www.scopus.com},
}

@Article{Utena2021,
  author  = {Utena,Y. and Takatsu,J. and Sugimoto,S. and Sasai,K.},
  journal = {Journal of Applied Clinical Medical Physics},
  title   = {Trajectory log analysis and cone-beam CT-based daily dose calculation to investigate the dosimetric accuracy of intensity-modulated radiotherapy for gynecologic cancer},
  year    = {2021},
  number  = {2},
  pages   = {108-117},
  volume  = {22},
  url     = {www.scopus.com},
}

@Article{Xu2021,
  author  = {Xu,G. and Wu,H. and Xu,Y. and Zhang,Y. and Lin,F. and Baklaushev,V. P. and Chekhonin,V. P. and Peltzer,K. and Wang,X. and Mao,M. and Wang,G. and Cui,P. and Zhang,C.},
  journal = {Orthopaedic Surgery},
  title   = {Homogenous and Heterogenous Prognostic Factors for Patients with Bone Sarcoma},
  year    = {2021},
  number  = {1},
  pages   = {134-144},
  volume  = {13},
  url     = {www.scopus.com},
}

@Article{Ge2021,
  author  = {Ge,Y. and Lv,X. and Ge,X. and Miao,J. and Fan,W. and Rong,D. and Guo,W.},
  journal = {Annals of Vascular Surgery},
  title   = {The Number of Preoperative Abdominal False Lumen–perfused Small Branches Is Related to Abdominal Aortic Remodeling after Thoracic Endovascular Aortic Repair for Type B Aortic Dissection},
  year    = {2021},
  note    = {Cited By :1},
  pages   = {56-64},
  volume  = {71},
  url     = {www.scopus.com},
}

@Article{Migliorini2021,
  author  = {Migliorini,F. and Trivellas,A. and Eschweiler,J. and Driessen,A. and Tingart,M. and Maffulli,N.},
  journal = {Calcified tissue international},
  title   = {NSAIDs for Prophylaxis for Heterotopic Ossification After Total Hip Arthroplasty: A Bayesian Network Meta-analysis},
  year    = {2021},
  note    = {Cited By :1},
  number  = {2},
  pages   = {196-206},
  volume  = {108},
  url     = {www.scopus.com},
}

@Article{Mammana2021,
  author  = {Mammana,M. and Bergamo,F. and Procaccio,L. and Schiavon,M. and Loupakis,F. and Lonardi,S. and Manai,C. and Schirripa,M. and Fassan,M. and Dei Tos,A. P. and Calabrese,F. and Rea,F. and Zagonel,V.},
  journal = {Tumori},
  title   = {Outcome of patients with colorectal cancer undergoing lung metastases resection: a single-institution retrospective analysis},
  year    = {2021},
  note    = {Cited By :1},
  number  = {1},
  pages   = {46-54},
  volume  = {107},
  url     = {www.scopus.com},
}

@Article{Khraishah2021,
  author  = {Khraishah,H. and Alahmad,B. and Alfaddagh,A. and Jeong,S. Y. and Mathenge,N. and Kassab,M. B. and Kolte,D. and Michos,E. D. and Albaghdadi,M.},
  journal = {Open Heart},
  title   = {Sex disparities in the presentation, management and outcomes of patients with acute coronary syndrome: insights from the ACS QUIK trial},
  year    = {2021},
  note    = {Cited By :1},
  number  = {1},
  volume  = {8},
  url     = {www.scopus.com},
}

@Article{Kang2021,
  author  = {Kang,N. and Fang,Y. and Zhu,H. and Shi,Z. and Chen,L. and Lu,Y. and Wang,H. and Lu,J. and Liu,W. and Hu,K.},
  journal = {Frontiers in Oncology},
  title   = {Prognostic Value of CT Imaging-Based Tumor Volume in Patients With Non-Surgical Esophageal Squamous Cell Carcinoma},
  year    = {2021},
  volume  = {10},
  url     = {www.scopus.com},
}

@Article{Taymouri2021,
  author  = {Taymouri,F. and Rosa,M. L. and Dumas,M. and Maggi,F. M.},
  journal = {Knowledge-Based Systems},
  title   = {Business process variant analysis: Survey and classification},
  year    = {2021},
  note    = {Cited By :6},
  volume  = {211},
  url     = {www.scopus.com},
}

@InProceedings{Shah2021,
  author    = {Shah,N. V. and Patel,Y. S. and Bhangaonkar,P. D.},
  booktitle = {Journal of Physics: Conference Series},
  title     = {Assessing impact of climate change on rainfall patterns of Vadodara District, Gujarat, India},
  year      = {2021},
  volume    = {1714},
  chapter   = {1},
  url       = {www.scopus.com},
}

@InProceedings{Karacali2021,
  author    = {Karacali,O. and Elhassi,K. H. and Theuveny,B. and Elmashergai,A. A. Y. and El Gihani,A. L. and Zorgane,A.},
  booktitle = {Proceedings - SPE Annual Technical Conference and Exhibition},
  title     = {Unique underbalanced perforating technique reveals unexpected remaining oil in shut-in wells in Libya},
  year      = {2021},
  volume    = {2021-September},
  url       = {www.scopus.com},
}

@Article{Wang2021b,
  author  = {Wang,R. and Tian,C. and Yan,L.},
  journal = {Scientific Programming},
  title   = {Malware Detection Using CNN via Word Embedding in Cloud Computing Infrastructure},
  year    = {2021},
  volume  = {2021},
  url     = {www.scopus.com},
}

@Article{Alshmrany2021,
  author  = {Alshmrany,S.},
  journal = {Cluster Computing},
  title   = {Adaptive learning style prediction in e-learning environment using levy flight distribution based CNN model},
  year    = {2021},
  url     = {www.scopus.com},
}

@Article{Bezzateev2021,
  author  = {Bezzateev,S. V. and Elina,T. N. and Mylnikov,V. A. and Livshitz,I. I.},
  journal = {Scientific and Technical Journal of Information Technologies, Mechanics and Optics},
  title   = {Risk assessment methodology for information systems, based on the user behavior and it-security incidents analysis},
  year    = {2021},
  number  = {4},
  pages   = {553-561},
  volume  = {21},
  url     = {www.scopus.com},
}

@Article{Zabor2021a,
  author  = {Zabor,E. C. and Reddy,C. A. and Tendulkar,R. D. and Patil,S.},
  journal = {International Journal of Radiation Oncology Biology Physics},
  title   = {Logistic Regression in Clinical Studies},
  year    = {2021},
  url     = {www.scopus.com},
}

@Book{2021c,
  title  = {14th International Conference on the Quality of Information and Communications Technology, QUATIC 2021},
  year   = {2021},
  series = {Communications in Computer and Information Science},
  volume = {1439 CCIS},
  url    = {www.scopus.com},
}

@Book{2021d,
  title  = {25th European Conference on Advances in Databases and Information Systems, ADBIS 2021 co-allocated with Workshops on DOING, SIMPDA, MADEISD, MegaData, CAoNS 2021},
  year   = {2021},
  series = {Communications in Computer and Information Science},
  volume = {1450 CCIS},
  url    = {www.scopus.com},
}

@Book{Corradini2021,
  author = {Corradini,F. and Luciani,C. and Morichetta,A. and Piangerelli,M. and Polini,A.},
  title  = {TLV-dissγ : A Dissimilarity Measure for Public Administration Process Logs},
  year   = {2021},
  series = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  volume = {12850 LNCS},
  pages  = {301-314},
  url    = {www.scopus.com},
}

@Book{Klinkmueller2021,
  author = {Klinkmüller,C. and Seeliger,A. and Müller,R. and Pufahl,L. and Weber,I.},
  title  = {A Method for Debugging Process Discovery Pipelines to Analyze the Consistency of Model Properties},
  year   = {2021},
  series = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  volume = {12875 LNCS},
  pages  = {65-84},
  url    = {www.scopus.com},
}

@Article{Tang2021,
  author  = {Tang,Y. and Li,T. and Zhu,R. and Du,F. and Wang,J. and Ma,Z.},
  journal = {Scientific Programming},
  title   = {A Discovery Method for Hierarchical Software Execution Behavior Models Based on Components},
  year    = {2021},
  volume  = {2021},
  url     = {www.scopus.com},
}

@InProceedings{Ding2021,
  author    = {Ding,H. and Yan,S. and Zhai,J. and Ma,S.},
  booktitle = {Proceedings of the 30th USENIX Security Symposium},
  title     = {ELISE: A storage efficient logging system powered by redundancy reduction and representation learning},
  year      = {2021},
  pages     = {3023-3040},
  url       = {www.scopus.com},
}

@InProceedings{Chen2021c,
  author    = {Chen,H. and Xiao,R. and Jin,S.},
  booktitle = {Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
  title     = {Unsupervised anomaly detection based on system logs},
  year      = {2021},
  pages     = {92-97},
  volume    = {2021-July},
  url       = {www.scopus.com},
}

@InProceedings{Paul2021,
  author    = {Paul,S. and Dukhoo,G. and Phillip,M. and Persadsingh,J.},
  booktitle = {Society of Petroleum Engineers - SPE Trinidad and Tobago Section Energy Resources Conference 2021, TTCE 2021},
  title     = {Improving production forecasting in a mature onshore oilfield brownfield in southern trinidad by making use of software modeling},
  year      = {2021},
  url       = {www.scopus.com},
}

@InProceedings{Magalhaes2021,
  author    = {Magalhaes,A. and Monteiro,J. M. and Brayner,A. and Moraes,G.},
  booktitle = {Advances in Database Technology - EDBT},
  title     = {Indexed log file: Towards main memory database instant recovery},
  year      = {2021},
  pages     = {355-360},
  volume    = {2021-March},
  url       = {www.scopus.com},
}

@Book{Salva2021,
  author = {Salva,S. and Blot,E.},
  title  = {MLCA: A Model-Learning-Checking Approach for IoT Systems},
  year   = {2021},
  series = {Communications in Computer and Information Science},
  volume = {1447},
  pages  = {70-97},
  url    = {www.scopus.com},
}

@Article{Guo2021a,
  author  = {Guo,Y. and Guo,S. and Jin,Z. and Kaul,S. and Gotz,D. and Cao,N.},
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  title   = {Survey on Visual Analysis of Event Sequence Data},
  year    = {2021},
  url     = {www.scopus.com},
}

@Article{Thanaviratananich2021,
  author  = {Thanaviratananich,S. and Cheng,H. and Chirakalwasan,N. and Reutrakul,S.},
  journal = {Sleep and Breathing},
  title   = {Association between nocturnal hypoxemic burden and glucose metabolism},
  year    = {2021},
  url     = {www.scopus.com},
}

@Article{Sandosh2021,
  author  = {Sandosh,S. and Govindasamy,V. and Akila,G.},
  journal = {International Journal of Internet Technology and Secured Transactions},
  title   = {Intelligent intrusion detection system using log cluster decision tree detection mitigation in complex event processing},
  year    = {2021},
  number  = {4},
  pages   = {352-368},
  volume  = {11},
  url     = {www.scopus.com},
}

@Book{Pyke2021,
  author = {Pyke,A. and Barone,B. and Hoffman,B. and Kozak,M. and Buchler,N.},
  title  = {Evaluating the BOLT Application: Supporting Human Observation, Metrics, and Cognitive Work Analysis},
  year   = {2021},
  series = {Lecture Notes in Networks and Systems},
  volume = {268},
  pages  = {247-255},
  url    = {www.scopus.com},
}

@Book{Yin2021,
  author = {Yin,F. and Cao,J. and Chu,J. and Olga,S.},
  title  = {Warehousing Process Mining Research Based on Petri Net},
  year   = {2021},
  series = {Lecture Notes on Data Engineering and Communications Technologies},
  volume = {82},
  pages  = {54-65},
  url    = {www.scopus.com},
}

@Book{2021e,
  title  = {AIOps, CFTIC, STRAPS, AI-PA, AI-IOTS, and Satellite Events held in conjunction with 18th International Conference on Service-Oriented Computing, ICSOC 2020},
  year   = {2021},
  series = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  volume = {12632 LNCS},
  url    = {www.scopus.com},
}

@Book{Azizi2021,
  author = {Azizi,Y. and Azizi,M. and Elboukhari,M.},
  title  = {Anomaly Detection from Log Files Using Multidimensional Analysis Model},
  year   = {2021},
  series = {Lecture Notes in Networks and Systems},
  volume = {211 LNNS},
  pages  = {515-524},
  url    = {www.scopus.com},
}

@Book{Agostinelli2021,
  author = {Agostinelli,S. and Marrella,A. and Mecella,M.},
  title  = {Exploring the Challenge of Automated Segmentation in Robotic Process Automation},
  year   = {2021},
  series = {Lecture Notes in Business Information Processing},
  volume = {415 LNBIP},
  pages  = {38-54},
  url    = {www.scopus.com},
}

@Book{Matsubara2021,
  author = {Matsubara,Y.},
  title  = {torchdistill: A Modular, Configuration-Driven Framework for Knowledge Distillation},
  year   = {2021},
  series = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  volume = {12636 LNCS},
  pages  = {24-44},
  url    = {www.scopus.com},
}

@InProceedings{Heradio2021,
  author    = {Heradio,R. and Fernandez-Amoros,D. and Cerrada,C. and Cobo,M. J.},
  booktitle = {Proceedings of the Annual Hawaii International Conference on System Sciences},
  title     = {Machine learning for software engineering: A bibliometric analysis from 2015 to 2019},
  year      = {2021},
  pages     = {1928-1937},
  volume    = {2020-January},
  url       = {www.scopus.com},
}

@InProceedings{Stephan2021,
  author    = {Stephan,S. and Lahann,J. and Fettke,P.},
  booktitle = {Proceedings of the Annual Hawaii International Conference on System Sciences},
  title     = {A case study on the application of process mining in combination with journal entry tests for financial auditing},
  year      = {2021},
  pages     = {5718-5727},
  volume    = {2020-January},
  url       = {www.scopus.com},
}

@Article{Gujral2021,
  author  = {Gujral,H. and Lal,S. and Li,H.},
  journal = {Journal of Software: Evolution and Process},
  title   = {An exploratory semantic analysis of logging questions},
  year    = {2021},
  url     = {www.scopus.com},
}

@Article{Knybel2021,
  author  = {Knybel,L. and Cvek,J. and Neuwirth,R. and Jiravsky,O. and Hecko,J. and Penhaker,M. and Sramko,M. and Kautzner,J.},
  journal = {Reports of Practical Oncology and Radiotherapy},
  title   = {Real-time measurement of ICD lead motion during stereotactic body radiotherapy of ventricular tachycardia},
  year    = {2021},
  number  = {1},
  pages   = {128-137},
  volume  = {26},
  url     = {www.scopus.com},
}

@Article{Elsayed2021,
  author  = {Elsayed,D. S. I.},
  journal = {Journal of Cultural Heritage Management and Sustainable Development},
  title   = {Inhabiting war craters examining geostatistical modeling within landscape heritage recovery in Aleppo},
  year    = {2021},
  url     = {www.scopus.com},
}

@Article{Verbeek2021,
  author  = {Verbeek,H. M. W.},
  journal = {International Journal on Software Tools for Technology Transfer},
  title   = {The Log Skeleton Visualizer in ProM 6.9: The winning contribution to the process discovery contest 2019},
  year    = {2021},
  url     = {www.scopus.com},
}

@Book{Raffety2021,
  author = {Raffety,J. and Stone,B. and Svacina,J. and Woodahl,C. and Cerny,T. and Tisnovsky,P.},
  title  = {Multi-source Log Clustering in Distributed Systems},
  year   = {2021},
  series = {Lecture Notes in Electrical Engineering},
  volume = {739 LNEE},
  pages  = {31-41},
  url    = {www.scopus.com},
}

@Book{Shershakov2021,
  author = {Shershakov,S. A.},
  title  = {Multi-perspective Process Mining with Embedding Configurations into DB-Based Event Logs},
  year   = {2021},
  series = {Communications in Computer and Information Science},
  volume = {1288 CCIS},
  pages  = {68-80},
  url    = {www.scopus.com},
}

@Book{Carrasquel2021,
  author = {Carrasquel,J. C. and Chuburov,S. A. and Lomazova,I. A.},
  title  = {Pre-processing Network Messages of Trading Systems into Event Logs for Process Mining},
  year   = {2021},
  series = {Communications in Computer and Information Science},
  volume = {1288 CCIS},
  pages  = {88-100},
  url    = {www.scopus.com},
}

@Book{2021f,
  title  = {5th International Conference on Software Testing, Machine Learning and Complex Process Analysis, TMPA 2019},
  year   = {2021},
  series = {Communications in Computer and Information Science},
  volume = {1288 CCIS},
  url    = {www.scopus.com},
}

@Article{Fenta2021,
  author  = {Fenta,D. A. and Wube,T. B. and Nuru,M. M.},
  journal = {Journal of Immunology Research},
  title   = {Long-Term Immunological and Virological Outcomes in Children Receiving Highly Active Antiretroviral Therapy at Hawassa University College of Medicine and Health Sciences, Southern Ethiopia},
  year    = {2021},
  volume  = {2021},
  url     = {www.scopus.com},
}

@Book{Wang2021c,
  author = {Wang,Y. and Zheng,Q.},
  title  = {A Logging Overhead Optimization Method Based on Anomaly Detection Model},
  year   = {2021},
  series = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  volume = {12634 LNCS},
  pages  = {349-359},
  url    = {www.scopus.com},
}

@Article{Chivukula2021,
  author  = {Chivukula,R. and Sajja,M. V. and Lakshmi,T. J. and Harini,M.},
  journal = {International Journal of Advanced Computer Science and Applications},
  title   = {Empirical Study on Microsoft Malware Classification},
  year    = {2021},
  number  = {3},
  pages   = {509-515},
  volume  = {12},
  url     = {www.scopus.com},
}

@Book{2021g,
  title  = {Workshops held at the 26th International Conference on Parallel and Distributed Computing, Euro-Par 2020},
  year   = {2021},
  series = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  volume = {12480 LNCS},
  url    = {www.scopus.com},
}

@Article{Yniesta2021,
  author  = {Yniesta,S. and Janati-Idrissi,M.},
  journal = {Canadian Geotechnical Journal},
  title   = {Integration of viscoplastic effects in a one-dimensional constitutive model for ground response analysis},
  year    = {2021},
  number  = {4},
  pages   = {468-478},
  volume  = {58},
  url     = {www.scopus.com},
}

@Book{Bender2021,
  author = {Bender,A. and Rügamer,D. and Scheipl,F. and Bischl,B.},
  title  = {A General Machine Learning Framework for Survival Analysis},
  year   = {2021},
  series = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  volume = {12459 LNAI},
  pages  = {158-173},
  url    = {www.scopus.com},
}

@Book{Nedelkoski2021,
  author = {Nedelkoski,S. and Bogatinovski,J. and Acker,A. and Cardoso,J. and Kao,O.},
  title  = {Self-supervised Log Parsing},
  year   = {2021},
  series = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  volume = {12460 LNAI},
  pages  = {122-138},
  url    = {www.scopus.com},
}

@Book{Alelaimat2021,
  author = {Alelaimat,A. and Ghose,A. and Dam,H. K.},
  title  = {Abductive Design of BDI Agent-Based Digital Twins of Organizations},
  year   = {2021},
  series = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  volume = {12568 LNAI},
  pages  = {377-385},
  url    = {www.scopus.com},
}

@Article{Kassem2021,
  author  = {Kassem,Y. and Gökçekuş,H. and Gökçekuş,R.},
  journal = {Desalination and Water Treatment},
  title   = {Identification of the most suitable probability distribution models for monthly and annual rainfall series in Güzelyurt Region, Northern Cyprus},
  year    = {2021},
  pages   = {427-451},
  volume  = {215},
  url     = {www.scopus.com},
}

@Book{Latzo2021,
  author = {Latzo,T.},
  title  = {Efficient Fingerprint Matching for Forensic Event Reconstruction},
  year   = {2021},
  series = {Lecture Notes of the Institute for Computer Sciences, Social-Informatics and Telecommunications Engineering, LNICST},
  volume = {351},
  pages  = {98-120},
  url    = {www.scopus.com},
}

@Book{Bromley2021,
  author = {Bromley,S. T. and Sheppard,J. and Scanlon,M. and Le-Khac,N. -.},
  title  = {Retracing the Flow of the Stream: Investigating Kodi Streaming Services},
  year   = {2021},
  series = {Lecture Notes of the Institute for Computer Sciences, Social-Informatics and Telecommunications Engineering, LNICST},
  volume = {351},
  pages  = {231-236},
  url    = {www.scopus.com},
}

@Book{Dey2021,
  author = {Dey,A. and Totel,E. and Navers,S.},
  title  = {Heterogeneous Security Events Prioritization Using Auto-encoders},
  year   = {2021},
  series = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  volume = {12528 LNCS},
  pages  = {164-180},
  url    = {www.scopus.com},
}

@Article{Llimpe2021,
  author  = {Llimpe,Y.},
  journal = {Biomedica},
  title   = {Cytogenetic risk groups in acute pediatric leukemia myeloid from the survival analysis in a reference hospital in cancer in Perú},
  year    = {2021},
  number  = {2},
  pages   = {1-29},
  volume  = {41},
  url     = {www.scopus.com},
}

@Article{Zhang2021a,
  author  = {Zhang,J. and Lin,X. -. and Zhang,S.},
  journal = {Complexity},
  title   = {Correlation Analysis of Sprint Performance and Reaction Time Based on Double Logarithm Model},
  year    = {2021},
  volume  = {2021},
  url     = {www.scopus.com},
}

@Book{Butt2021,
  author = {Butt,A. S. and Fitch,P.},
  title  = {ProvAnalyser: A Framework for Scientific Workflows Provenance},
  year   = {2021},
  series = {Communications in Computer and Information Science},
  volume = {1361},
  pages  = {99-120},
  url    = {www.scopus.com},
}

@Article{Saha2021,
  author  = {Saha,A. and Beasley,M. and Hatton,N. and Dickinson,P. and Franks,K. and Clarke,K. and Jain,P. and Teo,M. and Murray,P. and Lilley,J.},
  journal = {Acta Oncologica},
  title   = {Can dosimetry affect local control and survival in patients with early-stage lung cancer treated with Stereotactic Ablative Radiotherapy (SABR)? An analysis of the UK's largest cohort of lung SABR patients},
  year    = {2021},
  number  = {4},
  pages   = {505-512},
  volume  = {60},
  url     = {www.scopus.com},
}

@Article{Chen2021d,
  author  = {Chen,A. R. and Chen,T. -. and Wang,S.},
  journal = {Empirical Software Engineering},
  title   = {Demystifying the challenges and benefits of analyzing user-reported logs in bug reports},
  year    = {2021},
  note    = {Cited By :1},
  number  = {1},
  volume  = {26},
  url     = {www.scopus.com},
}

@Article{Farrugia2021,
  author  = {Farrugia,M. K. and Jun Ma,S. and Hennon,M. W. and Nwogu,C. E. and Dexter,E. U. and Picone,A. L. and Demmy,T. L. and Gomez-Suescun,J. A. and Fung-Kee-Fung,S. and Yendamuri,S. S. and Singh,A. K.},
  journal = {American Journal of Clinical Oncology: Cancer Clinical Trials},
  title   = {Prior Treatment for Non-small Cell Lung Cancer Is Associated with Improved Survival in Patients who Undergo Definitive Stereotactic Body Radiation Therapy for a Subsequent Lung Malignancy: A Retrospective Multivariate and Matched Pair Analysis},
  year    = {2021},
  note    = {Cited By :2},
  number  = {1},
  pages   = {18-23},
  volume  = {44},
  url     = {www.scopus.com},
}

@Article{Cui2021,
  author  = {Cui,E. and Crainiceanu,C. M. and Leroux,A.},
  journal = {Journal of Computational and Graphical Statistics},
  title   = {Additive Functional Cox Model},
  year    = {2021},
  note    = {Cited By :3},
  number  = {3},
  pages   = {780-793},
  volume  = {30},
  url     = {www.scopus.com},
}

@Article{2021h,
  journal = {Psychophysiology},
  title   = {Corrigendum: Influence of cognitive-motor expertise on brain dynamics of anticipatory-based outcome processing (Psychophysiology, (2019), 57, (e13477), 10.1111/psyp.13477)},
  year    = {2021},
  number  = {1},
  volume  = {58},
  url     = {www.scopus.com},
}

@Book{Ambhore2021,
  author = {Ambhore,P. and Wankhade,A.},
  title  = {Firewall for Intranet Security},
  year   = {2021},
  note   = {Cited By :1},
  series = {EAI/Springer Innovations in Communication and Computing},
  pages  = {653-659},
  url    = {www.scopus.com},
}

@Article{Hu2021,
  author  = {Hu,W. -. and Lin,C. -.},
  journal = {Journal of diabetes and its complications},
  title   = {Impact of atrial fibrillation on stroke, heart failure, and mortality in diabetic patients with coronary artery disease},
  year    = {2021},
  number  = {1},
  volume  = {35},
  url     = {www.scopus.com},
}

@Article{Li2021d,
  author  = {Li,C. and Liu,S. M. and Zheng,L. and Huang,M. W. and Shi,Y. and Lv,X. M. and Zhang,J. G. and Peng,X. and Zhang,J.},
  journal = {Brachytherapy},
  title   = {Comparison of outcomes using radiotherapy or brachytherapy after resection of primary adenoid cystic carcinoma in oral and maxillofacial regions},
  year    = {2021},
  number  = {1},
  pages   = {171-177},
  volume  = {20},
  url     = {www.scopus.com},
}

@Article{Morton2021,
  author  = {Morton,M. and Chambers,L. M. and Costales,A. B. and Chichura,A. and Gruner,M. and Horowitz,M. P. and Rose,P. G. and Yao,M. and Debernardo,R. and Michener,C.},
  journal = {Gynecologic oncology},
  title   = {Assessing feasibility and perioperative outcomes with minimally invasive surgery compared with laparotomy for interval debulking surgery with hyperthermic intraperitoneal chemotherapy for advanced epithelial ovarian cancer},
  year    = {2021},
  note    = {Cited By :3},
  number  = {1},
  pages   = {45-50},
  volume  = {160},
  url     = {www.scopus.com},
}

@Book{Ghosh2021,
  author = {Ghosh,S. and Ansari,D. and Mahasrankintakam,A. B. and Nuli,D. T. and Konjari,R. and Swathi,M. and Dutta,S.},
  title  = {Osdag: A software for structural steel design using is 800:2007},
  year   = {2021},
  volume = {81},
  pages  = {219-231},
  url    = {www.scopus.com},
}

@Book{Lavanya2021,
  author = {Lavanya,B. L. and Srinivasa,M. N.},
  title  = {Designing and Testing of Data Acquisition System for Satellite Using MIL-STD-1553},
  year   = {2021},
  series = {Advances in Intelligent Systems and Computing},
  volume = {1133},
  pages  = {883-898},
  url    = {www.scopus.com},
}

@Article{Ristl2021,
  author  = {Ristl,R. and Ballarini,N. M. and Götte,H. and Schüler,A. and Posch,M. and König,F.},
  journal = {Pharmaceutical Statistics},
  title   = {Delayed treatment effects, treatment switching and heterogeneous patient populations: How to design and analyze RCTs in oncology},
  year    = {2021},
  note    = {Cited By :1},
  number  = {1},
  pages   = {129-145},
  volume  = {20},
  url     = {www.scopus.com},
}

@Article{Rockai2021,
  author   = {Ročkai, Petr and Baranová, Zuzana and Mrázek, Jan and Kejstová, Katarína and Barnat, Jiříí},
  journal  = {Software and Systems Modeling},
  title    = {Reproducible execution of {POSIX} programs with {DiOS}},
  year     = {2021},
  issn     = {1619-1366, 1619-1374},
  month    = apr,
  number   = {2},
  pages    = {363--382},
  volume   = {20},
  doi      = {10.1007/s10270-020-00837-y},
  file     = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\UZF7CWSX\\Ročkai et al. - 2021 - Reproducible execution of POSIX programs with DiOS.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10270-020-00837-y},
  urldate  = {2021-10-24},
}

@Article{Liu2021e,
  author   = {Liu, Jiakun and Huang, Qiao and Xia, Xin and Shihab, Emad and Lo, David and Li, Shanping},
  journal  = {Empirical Software Engineering},
  title    = {An exploratory study on the introduction and removal of different types of technical debt in deep learning frameworks},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = mar,
  number   = {2},
  pages    = {16},
  volume   = {26},
  doi      = {10.1007/s10664-020-09917-5},
  file     = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\XPEUB7MB\\Liu et al. - 2021 - An exploratory study on the introduction and remov.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s10664-020-09917-5},
  urldate  = {2021-10-24},
}

@Article{SotoValero2021,
  author   = {Soto-Valero, César and Harrand, Nicolas and Monperrus, Martin and Baudry, Benoit},
  journal  = {Empirical Software Engineering},
  title    = {A comprehensive study of bloated dependencies in the {Maven} ecosystem},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = may,
  number   = {3},
  pages    = {45},
  volume   = {26},
  abstract = {Abstract
            
              Build automation tools and package managers have a profound influence on software development. They facilitate the reuse of third-party libraries, support a clear separation between the application’s code and its external dependencies, and automate several software development tasks. However, the wide adoption of these tools introduces new challenges related to dependency management. In this paper, we propose an original study of one such challenge: the emergence of bloated dependencies. Bloated dependencies are libraries that are packaged with the application’s compiled code but that are actually not necessary to build and run the application. They artificially grow the size of the built binary and increase maintenance effort. We propose
              DepClean
              , a tool to determine the presence of bloated dependencies in Maven artifacts. We analyze 9,639 Java artifacts hosted on Maven Central, which include a total of 723,444 dependency relationships. Our key result is as follows: 2.7\% of the dependencies directly declared are bloated, 15.4\% of the inherited dependencies are bloated, and 57\% of the transitive dependencies of the studied artifacts are bloated. In other words, it is feasible to reduce the number of dependencies of Maven artifacts to 1/4 of its current count. Our qualitative assessment with 30 notable open-source projects indicates that developers pay attention to their dependencies when they are notified of the problem. They are willing to remove bloated dependencies: 21/26 answered pull requests were accepted and merged by developers, removing 140 dependencies in total: 75 direct and 65 transitive.},
  doi      = {10.1007/s10664-020-09914-8},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\IA6NKM2E\\Soto-Valero et al. - 2021 - A comprehensive study of bloated dependencies in t.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-020-09914-8},
  urldate  = {2021-10-24},
}

@Article{Mahendiran2021,
  author   = {Mahendiran, N. and Deepa, C.},
  journal  = {SN Computer Science},
  title    = {A {Comprehensive} {Analysis} on {Image} {Encryption} and {Compression} {Techniques} with the {Assessment} of {Performance} {Evaluation} {Metrics}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = feb,
  number   = {1},
  pages    = {29},
  volume   = {2},
  doi      = {10.1007/s42979-020-00397-4},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\ZPVBL38S\\Mahendiran and Deepa - 2021 - A Comprehensive Analysis on Image Encryption and C.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s42979-020-00397-4},
  urldate  = {2021-10-24},
}

@Article{Gharibi2021,
  author   = {Gharibi, Gharib and Walunj, Vijay and Nekadi, Raju and Marri, Raj and Lee, Yugyung},
  journal  = {Empirical Software Engineering},
  title    = {Automated end-to-end management of the modeling lifecycle in deep learning},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = mar,
  number   = {2},
  pages    = {17},
  volume   = {26},
  doi      = {10.1007/s10664-020-09894-9},
  language = {en},
  url      = {http://link.springer.com/10.1007/s10664-020-09894-9},
  urldate  = {2021-10-24},
}

@Article{Kim2021a,
  author   = {Kim, Dong Jae and Chen, Tse-Hsun and Yang, Jinqiu},
  journal  = {Empirical Software Engineering},
  title    = {The secret life of test smells - an empirical study on test smell evolution and maintenance},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = sep,
  number   = {5},
  pages    = {100},
  volume   = {26},
  doi      = {10.1007/s10664-021-09969-1},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-09969-1},
  urldate  = {2021-10-24},
}

@Article{Foundjem2021,
  author     = {Foundjem, Armstrong and Adams, Bram},
  journal    = {Empirical Software Engineering},
  title      = {Release synchronization in software ecosystems: {Empirical} {Study} on {OpenStack}},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = may,
  number     = {3},
  pages      = {34},
  volume     = {26},
  doi        = {10.1007/s10664-020-09929-1},
  language   = {en},
  shorttitle = {Release synchronization in software ecosystems},
  url        = {https://link.springer.com/10.1007/s10664-020-09929-1},
  urldate    = {2021-10-24},
}

@Article{GonzalezLopez2021,
  author     = {Gonzalez-Lopez, Fernanda and Pufahl, Luise and Munoz-Gama, Jorge and Herskovic, Valeria and Sepúlveda, Marcos},
  journal    = {Software and Systems Modeling},
  title      = {Case model landscapes: toward an improved representation of knowledge-intensive processes using the {fCM}-language},
  year       = {2021},
  issn       = {1619-1366, 1619-1374},
  month      = oct,
  number     = {5},
  pages      = {1353--1377},
  volume     = {20},
  doi        = {10.1007/s10270-021-00885-y},
  language   = {en},
  shorttitle = {Case model landscapes},
  url        = {https://link.springer.com/10.1007/s10270-021-00885-y},
  urldate    = {2021-10-24},
}

@Article{Pecorelli2021,
  author     = {Pecorelli, Fabiano and Palomba, Fabio and De Lucia, Andrea},
  journal    = {Empirical Software Engineering},
  title      = {The {Relation} of {Test}-{Related} {Factors} to {Software} {Quality}: {A} {Case} {Study} on {Apache} {Systems}},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = mar,
  number     = {2},
  pages      = {18},
  volume     = {26},
  abstract   = {Abstract
            
              Testing represents a crucial activity to ensure software quality. Recent studies have shown that test-related factors (e.g., code coverage) can be reliable predictors of software code quality, as measured by post-release defects. While these studies provided initial compelling evidence on the relation between tests and post-release defects, they considered different test-related factors separately: as a consequence, there is still a lack of knowledge of whether these factors are still good predictors when considering all together. In this paper, we propose a comprehensive case study on how test-related factors relate to production code quality in
              Apache
              systems. We first investigated how the presence of tests relates to post-release defects; then, we analyzed the role played by the test-related factors previously shown as significantly related to post-release defects. The key findings of the study show that, when controlling for other metrics (e.g., size of the production class), test-related factors have a limited connection to post-release defects.},
  doi        = {10.1007/s10664-020-09891-y},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\WPTTAU2M\\Pecorelli et al. - 2021 - The Relation of Test-Related Factors to Software Q.pdf:application/pdf},
  language   = {en},
  shorttitle = {The {Relation} of {Test}-{Related} {Factors} to {Software} {Quality}},
  url        = {http://link.springer.com/10.1007/s10664-020-09891-y},
  urldate    = {2021-10-24},
}

@Article{Temple2021,
  author   = {Temple, Paul and Perrouin, Gilles and Acher, Mathieu and Biggio, Battista and Jézéquel, Jean-Marc and Roli, Fabio},
  journal  = {Empirical Software Engineering},
  title    = {Empirical assessment of generating adversarial configurations for software product lines},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = jan,
  number   = {1},
  pages    = {6},
  volume   = {26},
  doi      = {10.1007/s10664-020-09915-7},
  file     = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\GEJSFMJP\\Temple et al. - 2021 - Empirical assessment of generating adversarial con.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s10664-020-09915-7},
  urldate  = {2021-10-24},
}

@Article{ElHokayem2021,
  author     = {El-Hokayem, Antoine and Falcone, Yliès},
  journal    = {International Journal on Software Tools for Technology Transfer},
  title      = {Bringing runtime verification home: a case study on the hierarchical monitoring of smart homes using decentralized specifications},
  year       = {2021},
  issn       = {1433-2779, 1433-2787},
  month      = may,
  doi        = {10.1007/s10009-021-00614-2},
  file       = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\TT24VDF9\\El-Hokayem and Falcone - 2021 - Bringing runtime verification home a case study o.pdf:application/pdf},
  language   = {en},
  shorttitle = {Bringing runtime verification home},
  url        = {https://link.springer.com/10.1007/s10009-021-00614-2},
  urldate    = {2021-10-24},
}

@Article{Bhatti2021,
  author     = {Bhatti, Baber Majid and Mubarak, Sameera and Nagalingam, Sev},
  journal    = {Automated Software Engineering},
  title      = {Information security implications of using {NLP} in {IT} outsourcing: a {Diffusion} of {Innovation} theory perspective},
  year       = {2021},
  issn       = {0928-8910, 1573-7535},
  month      = nov,
  number     = {2},
  pages      = {12},
  volume     = {28},
  doi        = {10.1007/s10515-021-00286-x},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\3KJIHTQ5\\Bhatti et al. - 2021 - Information security implications of using NLP in .pdf:application/pdf},
  language   = {en},
  shorttitle = {Information security implications of using {NLP} in {IT} outsourcing},
  url        = {https://link.springer.com/10.1007/s10515-021-00286-x},
  urldate    = {2021-10-24},
}

@Article{Paxinou2021,
  author   = {Paxinou, Evgenia and Kalles, Dimitrios and Panagiotakopoulos, Christos T. and Verykios, Vassilios S.},
  journal  = {SN Computer Science},
  title    = {Analyzing {Sequence} {Data} with {Markov} {Chain} {Models} in {Scientific} {Experiments}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = sep,
  number   = {5},
  pages    = {385},
  volume   = {2},
  doi      = {10.1007/s42979-021-00768-5},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\8E224FL5\\Paxinou et al. - 2021 - Analyzing Sequence Data with Markov Chain Models i.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00768-5},
  urldate  = {2021-10-24},
}

@Article{Quach2021,
  author   = {Quach, Sophia and Lamothe, Maxime and Adams, Bram and Kamei, Yasutaka and Shang, Weiyi},
  journal  = {Empirical Software Engineering},
  title    = {Evaluating the impact of falsely detected performance bug-inducing changes in {JIT} models},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = sep,
  number   = {5},
  pages    = {97},
  volume   = {26},
  doi      = {10.1007/s10664-021-10004-6},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-10004-6},
  urldate  = {2021-10-24},
}

@Article{Alpers2021,
  author     = {Alpers, Sascha and Karle, Thomas and Schreiber, Clemens and Schönthaler, Frank and Oberweis, Andreas},
  journal    = {Informatik Spektrum},
  title      = {Process {Mining} bei hybriden {Vorgehensmodellen} zur {Umsetzung} von {Unternehmenssoftware}: {Beitrag} für das {Informatik} {Spektrum}, 2021, {Sonderheft} „{Innovation} in der {Software} {Entwicklung}“},
  year       = {2021},
  issn       = {0170-6012, 1432-122X},
  month      = jun,
  number     = {3},
  pages      = {178--189},
  volume     = {44},
  abstract   = {Zusammenfassung
            Process Mining hat sich in den vergangenen Jahren zur Analyse von Prozessdaten etabliert und wird in verschiedenen Kontexten, wie beispielsweise Industrie 4.0, eingesetzt. Die Potenziale dieser Technologie liegen jedoch nicht nur in der Analyse von Wertschöpfungsprozessen im Kontext von Produktion und Verwaltung. Die Technologie kann darüber hinaus auch für die Verbesserung des Vorgehens bei den dazugehörigen – meist großen und komplexen – Softwareprojekten genutzt werden. Für die Umsetzung der für Industrie‑4.0‑Prozesse erforderlichen Unternehmenssoftware werden häufig agile oder hybride Vorgehensmodelle eingesetzt. Software Innovations unterstützen die Umsetzung in zweierlei Hinsicht. Software Innovations bezeichnen zum einen Innovationen für das Software Engineering durch neue Vorgehensmodelle, Methoden und Werkzeuge. Zum anderen umfasst der Begriff Innovationen, welche durch (neuartige) Software ermöglicht werden. Ausgehend von diesen beiden Aspekten von Software Innovations beschreibt der Beitrag, wie Process Mining zur Analyse und Verbesserung des Vorgehens bei Unternehmenssoftwareprojekten verwendet werden kann. Der Schwerpunkt liegt auf der Anwendung und Verbesserung von hybrid durchgeführten Entwicklungs- und Konfigurationsprojekten. Das vorgestellte Verfahren kann jedoch auch für klassisch oder agil durchgeführte Projekte angewendet werden. Es dient generell dazu, den Prozess zur Softwareerstellung kontinuierlich, anhand von Erkenntnissen aus laufenden und abgeschlossenen Projekten, automatisiert zu analysieren und zu verbessern. Hierzu wird exemplarisch der hybride Referenzprozess aus dem Vorgehensmodell eines mittelständischen Software- und Beratungsunternehmens als Anwendungsfall betrachtet.},
  doi        = {10.1007/s00287-021-01359-7},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\B2DA84DW\\Alpers et al. - 2021 - Process Mining bei hybriden Vorgehensmodellen zur .pdf:application/pdf},
  language   = {de},
  shorttitle = {Process {Mining} bei hybriden {Vorgehensmodellen} zur {Umsetzung} von {Unternehmenssoftware}},
  url        = {https://link.springer.com/10.1007/s00287-021-01359-7},
  urldate    = {2021-10-24},
}

@Article{Riom2021,
  author   = {Riom, Timothé and Sawadogo, Arthur and Allix, Kevin and Bissyandé, Tegawendé F. and Moha, Naouel and Klein, Jacques},
  journal  = {Empirical Software Engineering},
  title    = {Revisiting the {VCCFinder} approach for the identification of vulnerability-contributing commits},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = may,
  number   = {3},
  pages    = {46},
  volume   = {26},
  abstract = {Abstract
            
              Detecting vulnerabilities in software is a constant race between development teams and potential attackers. While many static and dynamic approaches have focused on regularly analyzing the software in its entirety, a recent research direction has focused on the analysis of changes that are applied to the code. VCCFinder is a seminal approach in the literature that builds on machine learning to automatically detect whether an incoming commit will introduce some vulnerabilities. Given the influence of VCCFinder in the literature, we undertake an investigation into its performance as a state-of-the-art system. To that end, we propose to attempt a replication study on the VCCFinder supervised learning approach. The insights of our failure to replicate the results reported in the original publication informed the design of a new approach to identify vulnerability-contributing commits based on a semi-supervised learning technique with an alternate feature set. We provide all artefacts and a clear description of this approach as a
              new reproducible baseline
              for advancing research on machine learning-based identification of vulnerability-introducing commits.},
  doi      = {10.1007/s10664-021-09944-w},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\2GX3ULG8\\Riom et al. - 2021 - Revisiting the VCCFinder approach for the identifi.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-09944-w},
  urldate  = {2021-10-24},
}

@Article{Lim2021,
  author     = {Lim, Sachiko and Henriksson, Aron and Zdravkovic, Jelena},
  journal    = {SN Computer Science},
  title      = {Data-{Driven} {Requirements} {Elicitation}: {A} {Systematic} {Literature} {Review}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = feb,
  number     = {1},
  pages      = {16},
  volume     = {2},
  abstract   = {Abstract
            Requirements engineering has traditionally been stakeholder-driven. In addition to domain knowledge, widespread digitalization has led to the generation of vast amounts of data (Big Data) from heterogeneous digital sources such as the Internet of Things (IoT), mobile devices, and social networks. The digital transformation has spawned new opportunities to consider such data as potentially valuable sources of requirements, although they are not intentionally created for requirements elicitation. A challenge to data-driven requirements engineering concerns the lack of methods to facilitate seamless and autonomous requirements elicitation from such dynamic and unintended digital sources. There are numerous challenges in processing the data effectively to be fully exploited in organizations. This article, thus, reviews the current state-of-the-art approaches to data-driven requirements elicitation from dynamic data sources and identifies research gaps. We obtained 1848 hits when searching six electronic databases. Through a two-level screening and a complementary forward and backward reference search, 68 papers were selected for final analysis. The results reveal that the existing automated requirements elicitation primarily focuses on utilizing human-sourced data, especially online reviews, as requirements sources, and supervised machine learning for data processing. The outcomes of automated requirements elicitation often result in mere identification and classification of requirements-related information or identification of features, without eliciting requirements in a ready-to-use form. This article highlights the need for developing methods to leverage process-mediated and machine-generated data for requirements elicitation and addressing the issues related to variety, velocity, and volume of Big Data for the efficient and effective software development and evolution.},
  doi        = {10.1007/s42979-020-00416-4},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\ZXMQX9C7\\Lim et al. - 2021 - Data-Driven Requirements Elicitation A Systematic.pdf:application/pdf},
  language   = {en},
  shorttitle = {Data-{Driven} {Requirements} {Elicitation}},
  url        = {http://link.springer.com/10.1007/s42979-020-00416-4},
  urldate    = {2021-10-24},
}

@Article{Geffert2021,
  author   = {Geffert, Viliam and Kapoutsis, Christos A. and Zakzok, Mohammad},
  journal  = {Acta Informatica},
  title    = {Complement for two-way alternating automata},
  year     = {2021},
  issn     = {0001-5903, 1432-0525},
  month    = oct,
  number   = {5},
  pages    = {463--495},
  volume   = {58},
  doi      = {10.1007/s00236-020-00373-8},
  language = {en},
  url      = {https://link.springer.com/10.1007/s00236-020-00373-8},
  urldate  = {2021-10-24},
}

@Article{Ibrahim2021,
  author   = {Ibrahim, Md Hasan and Sayagh, Mohammed and Hassan, Ahmed E.},
  journal  = {Empirical Software Engineering},
  title    = {A study of how {Docker} {Compose} is used to compose multi-component systems},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = nov,
  number   = {6},
  pages    = {128},
  volume   = {26},
  doi      = {10.1007/s10664-021-10025-1},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-10025-1},
  urldate  = {2021-10-24},
}

@Article{Steinau2021,
  author   = {Steinau, Sebastian and Andrews, Kevin and Reichert, Manfred},
  journal  = {Software and Systems Modeling},
  title    = {Coordinating large distributed relational process structures},
  year     = {2021},
  issn     = {1619-1366, 1619-1374},
  month    = oct,
  number   = {5},
  pages    = {1403--1435},
  volume   = {20},
  abstract = {Abstract
            Representing a business process as a collaboration of interacting processes has become feasible with the emergence of data-centric business process management paradigms. Usually, these interacting processes have relations and, thereby, form a complex relational process structure. The interactions of processes within this relational process structure need to be coordinated to arrive at a meaningful overall business goal. However, relational process structures may become arbitrarily large. With the use of cloud technology, they may additionally be distributed over multiple nodes, allowing for scalability. Coordination processes have been proposed to coordinate relational process structures, where processes may have one-to-many and many-to-many relations at run-time. This paper shows how multiple coordination processes can be used in a decentralized fashion to more efficiently coordinate large, distributed process structures. The main challenge of using multiple coordination processes is to effectively realize the coordination responsibility of each coordination process. Key components of the solution are the subsidiary principle and the hierarchy of the relational process structure. Finally, an implementation of the coordination process concept based on microservices was developed, which allows for fast and concurrent enactment of multiple, decentralized coordination processes in large, distributed process structures.},
  doi      = {10.1007/s10270-020-00835-0},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\2HDX44BH\\Steinau et al. - 2021 - Coordinating large distributed relational process .pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10270-020-00835-0},
  urldate  = {2021-10-24},
}

@Article{Hata2022,
  author     = {Hata, Hideaki and Novielli, Nicole and Baltes, Sebastian and Kula, Raula Gaikovina and Treude, Christoph},
  journal    = {Empirical Software Engineering},
  title      = {{GitHub} {Discussions}: {An} exploratory study of early adoption},
  year       = {2022},
  issn       = {1382-3256, 1573-7616},
  month      = jan,
  number     = {1},
  pages      = {3},
  volume     = {27},
  abstract   = {Abstract
            Discussions is a new feature of GitHub for asking questions or discussing topics outside of specific Issues or Pull Requests. Before being available to all projects in December 2020, it had been tested on selected open source software projects. To understand how developers use this novel feature, how they perceive it, and how it impacts the development processes, we conducted a mixed-methods study based on early adopters of GitHub discussions from January until July 2020. We found that: (1) errors, unexpected behavior, and code reviews are prevalent discussion categories; (2) there is a positive relationship between project member involvement and discussion frequency; (3) developers consider GitHub Discussions useful but face the problem of topic duplication between Discussions and Issues; (4) Discussions play a crucial role in advancing the development of projects; and (5) positive sentiment in Discussions is more frequent than in Stack Overflow posts. Our findings are a first step towards data-informed guidance for using GitHub Discussions, opening up avenues for future work on this novel communication channel.},
  doi        = {10.1007/s10664-021-10058-6},
  language   = {en},
  shorttitle = {{GitHub} {Discussions}},
  url        = {https://link.springer.com/10.1007/s10664-021-10058-6},
  urldate    = {2021-10-24},
}

@Article{Nakai2021,
  author   = {Nakai, Takeshi and Misawa, Yuto and Tokushige, Yuuki and Iwamoto, Mitsugu and Ohta, Kazuo},
  journal  = {New Generation Computing},
  title    = {How to {Solve} {Millionaires}’ {Problem} with {Two} {Kinds} of {Cards}},
  year     = {2021},
  issn     = {0288-3635, 1882-7055},
  month    = apr,
  number   = {1},
  pages    = {73--96},
  volume   = {39},
  abstract = {Abstract
            Card-based cryptography, introduced by den Boer aims to realize multiparty computation (MPC) by using physical cards. We propose several efficient card-based protocols for the millionaires’ problem by introducing a new operation called Private Permutation (PP) instead of the shuffle used in most of existing card-based cryptography. Shuffle is a useful randomization technique by exploiting the property of card shuffling, but it requires a strong assumption from the viewpoint of arithmetic MPC because shuffle assumes that public randomization is possible. On the other hand, private randomness can be used in PPs, which enables us to design card-based protocols taking ideas of arithmetic MPCs into account. Actually, we show that Yao’s millionaires’ protocol can be easily transformed into a card-based protocol by using PPs, which is not straightforward by using shuffles because Yao’s protocol uses private randomness. Furthermore, we propose entirely novel and efficient card-based millionaire protocols based on PPs by securely updating bitwise comparisons between two numbers, which unveil a power of PPs. As another interest of these protocols, we point out they have a deep connection to the well-known logical puzzle known as “The fork in the road.”},
  doi      = {10.1007/s00354-020-00118-8},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\DZ66UNU5\\Nakai et al. - 2021 - How to Solve Millionaires’ Problem with Two Kinds .pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s00354-020-00118-8},
  urldate  = {2021-10-24},
}

@Article{Nabli2021,
  author   = {Nabli, Hajer and Ben Djemaa, Raoudha and Amous Ben Amor, Ikram},
  journal  = {Service Oriented Computing and Applications},
  title    = {Cloud services description ontology used for service selection},
  year     = {2021},
  issn     = {1863-2386, 1863-2394},
  month    = sep,
  doi      = {10.1007/s11761-021-00328-y},
  language = {en},
  url      = {https://link.springer.com/10.1007/s11761-021-00328-y},
  urldate  = {2021-10-24},
}

@Article{Lionakis2021,
  author   = {Lionakis, Panagiotis and Ortali, Giacomo and Tollis, Ioannis G.},
  journal  = {SN Computer Science},
  title    = {Constant-{Time} {Reachability} in {DAGs} {Using} {Multidimensional} {Dominance} {Drawings}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = jul,
  number   = {4},
  pages    = {320},
  volume   = {2},
  doi      = {10.1007/s42979-021-00713-6},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\GHPMMBBH\\Lionakis et al. - 2021 - Constant-Time Reachability in DAGs Using Multidime.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00713-6},
  urldate  = {2021-10-24},
}

@Article{Lyu2021,
  author   = {Lyu, Chen and Wang, Ruyun and Zhang, Hongyu and Zhang, Hanwen and Hu, Songlin},
  journal  = {Empirical Software Engineering},
  title    = {Embedding {API} dependency graph for neural code generation},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = jul,
  number   = {4},
  pages    = {61},
  volume   = {26},
  doi      = {10.1007/s10664-021-09968-2},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-09968-2},
  urldate  = {2021-10-24},
}

@Article{Mallika2021,
  author   = {Mallika, G. C. and Alsadoon, Abeer and Pham, Duong Thu Hang and Mai, Ha Thi and Abdullah, Salma and Prasad, P.W.C. and Nguyen, Tran Quoc Vinh},
  journal  = {Programming and Computer Software},
  title    = {A {Novel} {Intelligent} {System} for {Detection} of {Type} 2 {Diabetes} with {Modified} {Loss} {Function} and {Regularization}},
  year     = {2021},
  issn     = {0361-7688, 1608-3261},
  month    = sep,
  number   = {5},
  pages    = {402--414},
  volume   = {47},
  doi      = {10.1134/S0361768821050054},
  language = {en},
  url      = {https://link.springer.com/10.1134/S0361768821050054},
  urldate  = {2021-10-24},
}

@Article{Elmasry2021,
  author   = {Elmasry, Amr and Katajainen, Jyrki},
  journal  = {Acta Informatica},
  title    = {Regular numeral systems for data structures},
  year     = {2021},
  issn     = {0001-5903, 1432-0525},
  month    = jul,
  doi      = {10.1007/s00236-021-00407-9},
  language = {en},
  url      = {https://link.springer.com/10.1007/s00236-021-00407-9},
  urldate  = {2021-10-24},
}

@Article{Ghumman2021,
  author   = {Ghumman, Mandeep Kaur and Singh, Satvir and Singh, Navtej and Jindal, Balkrishan},
  journal  = {Journal of Reliable Intelligent Environments},
  title    = {Optimization of parameters for improving the performance of {EEG}-based {BCI} system},
  year     = {2021},
  issn     = {2199-4668, 2199-4676},
  month    = jun,
  number   = {2},
  pages    = {145--156},
  volume   = {7},
  doi      = {10.1007/s40860-020-00117-y},
  language = {en},
  url      = {https://link.springer.com/10.1007/s40860-020-00117-y},
  urldate  = {2021-10-24},
}

@Article{Dondi2021,
  author   = {Dondi, Riccardo and Hosseinzadeh, Mohammad Mehdi},
  journal  = {SN Computer Science},
  title    = {Dense {Sub}-networks {Discovery} in {Temporal} {Networks}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = may,
  number   = {3},
  pages    = {158},
  volume   = {2},
  abstract = {Abstract
            Temporal networks have been successfully applied to analyse dynamics of networks. In this paper we focus on an approach recently introduced to identify dense subgraphs in a temporal network and we present a heuristic, based on the local search technique, for the problem. The experimental results we present on synthetic and real-world datasets show that our heuristic provides mostly better solutions (denser solutions) and that the heuristic is fast (comparable with the fastest method in literature, which is outperformed in terms of quality of the solutions). We present also experimental results of two variants of our method based on two different subroutines to compute a dense subgraph of a given graph.},
  doi      = {10.1007/s42979-021-00593-w},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\C4YZYSES\\Dondi and Hosseinzadeh - 2021 - Dense Sub-networks Discovery in Temporal Networks.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00593-w},
  urldate  = {2021-10-24},
}

@Article{Porteous2021,
  author   = {Porteous, Julie and Ferreira, João F. and Lindsay, Alan and Cavazza, Marc},
  journal  = {Autonomous Agents and Multi-Agent Systems},
  title    = {Automated narrative planning model extension},
  year     = {2021},
  issn     = {1387-2532, 1573-7454},
  month    = oct,
  number   = {2},
  pages    = {19},
  volume   = {35},
  doi      = {10.1007/s10458-021-09501-1},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10458-021-09501-1},
  urldate  = {2021-10-24},
}

@Article{Saha2021a,
  author   = {Saha, Chandan and Hossain, Md. Foisal and Rahman, Md. Asadur},
  journal  = {Iran Journal of Computer Science},
  title    = {{NSCT}-based robust image watermarking in {DC} components of {APDCBT} using singular value decomposition},
  year     = {2021},
  issn     = {2520-8438, 2520-8446},
  month    = sep,
  number   = {3},
  pages    = {133--145},
  volume   = {4},
  doi      = {10.1007/s42044-020-00070-2},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42044-020-00070-2},
  urldate  = {2021-10-24},
}

@Article{Luna2021,
  author     = {Luna, Giuseppe A. Di and Flocchini, Paola and Santoro, Nicola and Viglietta, Giovanni},
  journal    = {Distributed Computing},
  title      = {{TuringMobile}: a turing machine of oblivious mobile robots with limited visibility and its applications},
  year       = {2021},
  issn       = {0178-2770, 1432-0452},
  month      = oct,
  doi        = {10.1007/s00446-021-00406-6},
  language   = {en},
  shorttitle = {{TuringMobile}},
  url        = {https://link.springer.com/10.1007/s00446-021-00406-6},
  urldate    = {2021-10-24},
}

@Article{Vinayaka2021,
  author   = {Vinayaka, K. U. and Puttaswamy, P. S.},
  journal  = {SN Computer Science},
  title    = {Prediction of {Arc} {Voltage} of {Electric} {Arc} {Furnace} {Based} on {Improved} {Back} {Propagation} {Neural} {Network}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = may,
  number   = {3},
  pages    = {167},
  volume   = {2},
  doi      = {10.1007/s42979-021-00556-1},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\23GVPEA5\\Vinayaka and Puttaswamy - 2021 - Prediction of Arc Voltage of Electric Arc Furnace .pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00556-1},
  urldate  = {2021-10-24},
}

@Article{Sarker2021,
  author     = {Sarker, Iqbal H.},
  journal    = {SN Computer Science},
  title      = {Deep {Cybersecurity}: {A} {Comprehensive} {Overview} from {Neural} {Network} and {Deep} {Learning} {Perspective}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = may,
  number     = {3},
  pages      = {154},
  volume     = {2},
  doi        = {10.1007/s42979-021-00535-6},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\JIG5R6YP\\Sarker - 2021 - Deep Cybersecurity A Comprehensive Overview from .pdf:application/pdf},
  language   = {en},
  shorttitle = {Deep {Cybersecurity}},
  url        = {https://link.springer.com/10.1007/s42979-021-00535-6},
  urldate    = {2021-10-24},
}

@Article{Chen2021e,
  author   = {Chen, Yange and Liu, Hequn and Wang, Baocang and Sonompil, Baljinnyam and Ping, Yuan and Zhang, Zhili},
  journal  = {Journal of Cloud Computing},
  title    = {A threshold hybrid encryption method for integrity audit without trusted center},
  year     = {2021},
  issn     = {2192-113X},
  month    = dec,
  number   = {1},
  pages    = {3},
  volume   = {10},
  abstract = {Abstract
            Cloud storage with sharing services is increasingly popular among data owners. However, it is difficult for the users to know if the cloud server providers (CSPs) indeed protect their data. To verify data integrity and preserve data and key privacy in the group, this paper proposes a new threshold hybrid encryption for integrity auditing method without trusted center. The proposed method is developed based on the Advanced Encryption Standard (AES) and the Elliptic Curve Cryptography (ECC) with Shamir secret sharing. In this way, the key can be distributed and managed without trusted center, preserving the privacy of the key of the AES and users’ private key. Besides, we design and implement a novel integrity auditing and re-signature method which verifies the data integrity and solves the collusion question of the cloud and the revoked users. Security analysis and performance evaluation demonstrate that the proposed scheme realizes the correctness, security, and efficiency with a low communication and computation cost.},
  doi      = {10.1186/s13677-020-00222-6},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\SIZXNYJ2\\Chen et al. - 2021 - A threshold hybrid encryption method for integrity.pdf:application/pdf},
  language = {en},
  url      = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-020-00222-6},
  urldate  = {2021-10-24},
}

@Article{Almonte2021,
  author     = {Almonte, Lissette and Guerra, Esther and Cantador, Iván and de Lara, Juan},
  journal    = {Software and Systems Modeling},
  title      = {Recommender systems in model-driven engineering: {A} systematic mapping review},
  year       = {2021},
  issn       = {1619-1366, 1619-1374},
  month      = jul,
  abstract   = {Abstract
            Recommender systems are information filtering systems used in many online applications like music and video broadcasting and e-commerce platforms. They are also increasingly being applied to facilitate software engineering activities. Following this trend, we are witnessing a growing research interest on recommendation approaches that assist with modelling tasks and model-based development processes. In this paper, we report on a systematic mapping review (based on the analysis of 66 papers) that classifies the existing research work on recommender systems for model-driven engineering (MDE). This study aims to serve as a guide for tool builders and researchers in understanding the MDE tasks that might be subject to recommendations, the applicable recommendation techniques and evaluation methods, and the open challenges and opportunities in this field of research.},
  doi        = {10.1007/s10270-021-00905-x},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\C8DCWNBR\\Almonte et al. - 2021 - Recommender systems in model-driven engineering A.pdf:application/pdf},
  language   = {en},
  shorttitle = {Recommender systems in model-driven engineering},
  url        = {https://link.springer.com/10.1007/s10270-021-00905-x},
  urldate    = {2021-10-24},
}

@Article{Kasa2021,
  author   = {Kasa, Siva Rajesh and Bhattacharyya, Malay},
  journal  = {SN Computer Science},
  title    = {A {Statistical} {Test} for {Detecting} {Dependency} {Breakdown} in {Financial} {Markets}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = jul,
  number   = {4},
  pages    = {322},
  volume   = {2},
  doi      = {10.1007/s42979-021-00671-z},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\QMQES49H\\Kasa and Bhattacharyya - 2021 - A Statistical Test for Detecting Dependency Breakd.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00671-z},
  urldate  = {2021-10-24},
}

@Article{Gadelha2021,
  author   = {Gadelha, Guilherme and Ramalho, Franklin and Massoni, Tiago},
  journal  = {Automated Software Engineering},
  title    = {Traceability recovery between bug reports and test cases-a {Mozilla} {Firefox} case study},
  year     = {2021},
  issn     = {0928-8910, 1573-7535},
  month    = nov,
  number   = {2},
  pages    = {8},
  volume   = {28},
  doi      = {10.1007/s10515-021-00287-w},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10515-021-00287-w},
  urldate  = {2021-10-24},
}

@Article{Ferrari2021,
  author   = {Ferrari, Anna and Micucci, Daniela and Mobilio, Marco and Napoletano, Paolo},
  journal  = {Journal of Reliable Intelligent Environments},
  title    = {Trends in human activity recognition using smartphones},
  year     = {2021},
  issn     = {2199-4668, 2199-4676},
  month    = sep,
  number   = {3},
  pages    = {189--213},
  volume   = {7},
  abstract = {Abstract
            Recognizing human activities and monitoring population behavior are fundamental needs of our society. Population security, crowd surveillance, healthcare support and living assistance, and lifestyle and behavior tracking are some of the main applications that require the recognition of human activities. Over the past few decades, researchers have investigated techniques that can automatically recognize human activities. This line of research is commonly known as Human Activity Recognition (HAR). HAR involves many tasks: from signals acquisition to activity classification. The tasks involved are not simple and often require dedicated hardware, sophisticated engineering, and computational and statistical techniques for data preprocessing and analysis. Over the years, different techniques have been tested and different solutions have been proposed to achieve a classification process that provides reliable results. This survey presents the most recent solutions proposed for each task in the human activity classification process, that is, acquisition, preprocessing, data segmentation, feature extraction, and classification. Solutions are analyzed by emphasizing their strengths and weaknesses. For completeness, the survey also presents the metrics commonly used to evaluate the goodness of a classifier and the datasets of inertial signals from smartphones that are mostly used in the evaluation phase.},
  doi      = {10.1007/s40860-021-00147-0},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\68ZXGA8S\\Ferrari et al. - 2021 - Trends in human activity recognition using smartph.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s40860-021-00147-0},
  urldate  = {2021-10-24},
}

@Article{Verma2021,
  author     = {Verma, Nishchal K. and Sharma, Teena and Dixit, Sonal and Agrawal, Pooja and Sengupta, Sourya and Singh, Vikas},
  journal    = {SN Computer Science},
  title      = {{BIDEAL}: {A} {Toolbox} for {Bicluster} {Analysis}—{Generation}, {Visualization} and {Validation}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = feb,
  number     = {1},
  pages      = {24},
  volume     = {2},
  doi        = {10.1007/s42979-020-00411-9},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\SZ47JFC5\\Verma et al. - 2021 - BIDEAL A Toolbox for Bicluster Analysis—Generatio.pdf:application/pdf},
  language   = {en},
  shorttitle = {{BIDEAL}},
  url        = {http://link.springer.com/10.1007/s42979-020-00411-9},
  urldate    = {2021-10-24},
}

@Article{Beyer2021,
  author   = {Beyer, Dirk and Jakobs, Marie-Christine},
  journal  = {International Journal on Software Tools for Technology Transfer},
  title    = {Cooperative verifier-based testing with {CoVeriTest}},
  year     = {2021},
  issn     = {1433-2779, 1433-2787},
  month    = jun,
  number   = {3},
  pages    = {313--333},
  volume   = {23},
  abstract = {Abstract
            
              Testing is a widely applied technique to evaluate software quality, and coverage criteria are often used to assess the adequacy of a generated test suite. However, manually constructing an adequate test suite is typically too expensive, and numerous techniques for automatic test-suite generation were proposed. All of them come with different strengths. To build stronger test-generation tools, different techniques should be combined. In this paper, we study cooperative combinations of verification approaches for test generation, which exchange high-level information. We present
              CoVeriTest
              , a hybrid technique for test-suite generation.
              CoVeriTest
              iteratively applies different conditional model checkers and allows users to adjust the level of cooperation and to configure individual time limits for each conditional model checker. In our experiments, we systematically study different
              CoVeriTest
              cooperation setups, which either use combinations of explicit-state model checking and predicate abstraction, or bounded model checking and symbolic execution. A comparison with state-of-the-art test-generation tools reveals that
              CoVeriTest
              achieves higher coverage for many programs (about 15\%).},
  doi      = {10.1007/s10009-020-00587-8},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\56NXSZIW\\Beyer and Jakobs - 2021 - Cooperative verifier-based testing with CoVeriTest.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10009-020-00587-8},
  urldate  = {2021-10-24},
}

@Article{Huynh2021,
  author     = {Huynh, Kha-Tu and Ly, Tu-Nga and Nguyen, Phuong-Thanh},
  journal    = {SN Computer Science},
  title      = {Improving the {Accuracy} in {Copy}-{Move} {Image} {Detection}: {A} {Model} of {Sharpness} and {Blurriness}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = jul,
  number     = {4},
  pages      = {278},
  volume     = {2},
  doi        = {10.1007/s42979-021-00682-w},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\4XIMCURZ\\Huynh et al. - 2021 - Improving the Accuracy in Copy-Move Image Detectio.pdf:application/pdf},
  language   = {en},
  shorttitle = {Improving the {Accuracy} in {Copy}-{Move} {Image} {Detection}},
  url        = {https://link.springer.com/10.1007/s42979-021-00682-w},
  urldate    = {2021-10-24},
}

@Article{Pilarski2021,
  author     = {Pilarski, Sebastian and Staniszewski, Martin and Bryan, Matthew and Villeneuve, Frederic and Varró, Dániel},
  journal    = {Software and Systems Modeling},
  title      = {Predictions-on-chip: model-based training and automated deployment of machine learning models at runtime: {For} multi-disciplinary design and operation of gas turbines},
  year       = {2021},
  issn       = {1619-1366, 1619-1374},
  month      = jun,
  number     = {3},
  pages      = {685--709},
  volume     = {20},
  doi        = {10.1007/s10270-020-00856-9},
  language   = {en},
  shorttitle = {Predictions-on-chip},
  url        = {https://link.springer.com/10.1007/s10270-020-00856-9},
  urldate    = {2021-10-24},
}

@Article{Kauffman2021,
  author   = {Kauffman, Sean and Havelund, Klaus and Fischmeister, Sebastian},
  journal  = {International Journal on Software Tools for Technology Transfer},
  title    = {What can we monitor over unreliable channels?},
  year     = {2021},
  issn     = {1433-2779, 1433-2787},
  month    = aug,
  number   = {4},
  pages    = {579--600},
  volume   = {23},
  doi      = {10.1007/s10009-021-00625-z},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10009-021-00625-z},
  urldate  = {2021-10-24},
}

@Article{Hensel2021,
  author   = {Hensel, Christian and Junges, Sebastian and Katoen, Joost-Pieter and Quatmann, Tim and Volk, Matthias},
  journal  = {International Journal on Software Tools for Technology Transfer},
  title    = {The probabilistic model checker {Storm}},
  year     = {2021},
  issn     = {1433-2779, 1433-2787},
  month    = jul,
  abstract = {Abstract
            
              We present the probabilistic model checker
              Storm
              .
              Storm
              supports the analysis of discrete- and continuous-time variants of both Markov chains and Markov decision processes.
              Storm
              has three major distinguishing features. It supports multiple input languages for Markov models, including the
              Jani
              and
              Prism
              modeling languages, dynamic fault trees, generalized stochastic Petri nets, and the probabilistic guarded command language. It has a modular setup in which solvers and symbolic engines can easily be exchanged. Its Python API allows for rapid prototyping by encapsulating
              Storm
              ’s fast and scalable algorithms. This paper reports on the main features of
              Storm
              and explains how to effectively use them. A description is provided of the main distinguishing functionalities of
              Storm
              . Finally, an empirical evaluation of different configurations of
              Storm
              on the QComp 2019 benchmark set is presented.},
  doi      = {10.1007/s10009-021-00633-z},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\P5AXW8CK\\Hensel et al. - 2021 - The probabilistic model checker Storm.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10009-021-00633-z},
  urldate  = {2021-10-24},
}

@Article{Assi2021,
  author     = {Assi, Maram and Hassan, Safwat and Tian, Yuan and Zou, Ying},
  journal    = {Empirical Software Engineering},
  title      = {{FeatCompare}: {Feature} comparison for competing mobile apps leveraging user reviews},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = sep,
  number     = {5},
  pages      = {94},
  volume     = {26},
  doi        = {10.1007/s10664-021-09988-y},
  language   = {en},
  shorttitle = {{FeatCompare}},
  url        = {https://link.springer.com/10.1007/s10664-021-09988-y},
  urldate    = {2021-10-24},
}

@Article{Noel2021,
  author   = {Noel, Moses Dogonyaro and Waziri, Victor Onomza and Abdulhamid, Shafii Muhammad and Ojeniyi, Joseph Adebayo},
  journal  = {Journal of Reliable Intelligent Environments},
  title    = {Review and analysis of classical algorithms and hash-based post-quantum algorithm},
  year     = {2021},
  issn     = {2199-4668, 2199-4676},
  month    = oct,
  doi      = {10.1007/s40860-021-00155-0},
  language = {en},
  url      = {https://link.springer.com/10.1007/s40860-021-00155-0},
  urldate  = {2021-10-24},
}

@Article{Stray2021,
  author   = {Stray, Viktoria and Florea, Raluca and Paruch, Lucas},
  journal  = {Software Quality Journal},
  title    = {Exploring human factors of the agile software tester},
  year     = {2021},
  issn     = {0963-9314, 1573-1367},
  month    = jun,
  abstract = {Abstract
            Although extensive research has been conducted on the characteristics of the agile developer, little attention has been given to the features of the software-testing role. This paper explores the human factors of the software testers working in agile projects through a qualitative study focusing on how these factors are perceived. We interviewed 22 agile software practitioners working in three international companies: 14 testers, five developers, and three designers. Additionally, we observed 11 meetings and daily work of 13 participants in one of the companies. Our findings show that the views on the human factors shaping the agile software tester’s role were crystallized into seven traits, which the agile team members saw as central for the software-testing role: the ability to see the whole picture, good communication skills, detail-orientation, structuredness, creativeness, curiosity, and adaptability. The testers spent half their day communicating and learned how to mitigate the fact that they had to bring bad news to other project members. They also facilitated communication between the business side and development. Based on our results, we propose the seven traits as dimensions to consider for organizations recruiting agile software testers, as well as a reference for IT and non-IT professionals considering a software-testing career.},
  doi      = {10.1007/s11219-021-09561-2},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\3NDU8LV2\\Stray et al. - 2021 - Exploring human factors of the agile software test.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s11219-021-09561-2},
  urldate  = {2021-10-24},
}

@Article{Khoury2021,
  author   = {Khoury, Raphaël and Hallé, Sylvain and Lebrun, Yannick},
  journal  = {International Journal on Software Tools for Technology Transfer},
  title    = {Automata-based monitoring for {LTL}-{FO}\$\${\textasciicircum}+\$\$},
  year     = {2021},
  issn     = {1433-2779, 1433-2787},
  month    = apr,
  number   = {2},
  pages    = {137--154},
  volume   = {23},
  doi      = {10.1007/s10009-020-00566-z},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10009-020-00566-z},
  urldate  = {2021-10-24},
}

@Article{Teixeira2021,
  author   = {Teixeira, Márcio J. and Timóteo, Varese S.},
  journal  = {SN Computer Science},
  title    = {A {Predictive} {Resource} {Allocation} for {Wireless} {Communications} {Systems}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = nov,
  number   = {6},
  pages    = {473},
  volume   = {2},
  doi      = {10.1007/s42979-021-00854-8},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\T86IJNXU\\Teixeira and Timóteo - 2021 - A Predictive Resource Allocation for Wireless Comm.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00854-8},
  urldate  = {2021-10-24},
}

@Article{Langdon2021,
  author   = {Langdon, W. B.},
  journal  = {Genetic Programming and Evolvable Machines},
  title    = {Genetic programming convergence},
  year     = {2021},
  issn     = {1389-2576, 1573-7632},
  month    = aug,
  doi      = {10.1007/s10710-021-09405-9},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10710-021-09405-9},
  urldate  = {2021-10-24},
}

@Article{DeSanctis2021,
  author     = {De Sanctis, Martina and Iovino, Ludovico and Rossi, Maria Teresa and Wimmer, Manuel},
  journal    = {Software and Systems Modeling},
  title      = {{MIKADO}: a smart city {KPIs} assessment modeling framework},
  year       = {2021},
  issn       = {1619-1366, 1619-1374},
  month      = aug,
  abstract   = {Abstract
            
              Smart decision making plays a central role for smart city governance. It exploits data analytics approaches applied to collected data, for supporting smart cities stakeholders in understanding and effectively managing a smart city. Smart governance is performed through the management of key performance indicators (KPIs), reflecting the degree of smartness and sustainability of smart cities. Even though KPIs are gaining relevance, e.g., at European level, the existing tools for their calculation are still limited. They mainly consist in dashboards and online spreadsheets that are rigid, thus making the KPIs evolution and customization a tedious and error-prone process. In this paper, we exploit model-driven engineering (MDE) techniques, through metamodel-based domain-specific languages (DSLs), to build a framework called
              MIKADO
               for the automatic assessment of KPIs over smart cities. In particular, the approach provides support for both: (
              i
              ) domain experts, by the definition of a textual DSL for an intuitive KPIs modeling process and (
              ii
              ) smart cities stakeholders, by the definition of graphical editors for smart cities modeling. Moreover, dynamic dashboards are generated to support an intuitive visualization and interpretation of the KPIs assessed by our KPIs evaluation engine. We provide evaluation results by showing a demonstration case as well as studying the scalability of the KPIs evaluation engine and the general usability of the approach with encouraging results. Moreover, the approach is open and extensible to further manage comparison among smart cities, simulations, and KPIs interrelations.},
  doi        = {10.1007/s10270-021-00907-9},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\JDGLRIGR\\De Sanctis et al. - 2021 - MIKADO a smart city KPIs assessment modeling fram.pdf:application/pdf},
  language   = {en},
  shorttitle = {{MIKADO}},
  url        = {https://link.springer.com/10.1007/s10270-021-00907-9},
  urldate    = {2021-10-24},
}

@Article{PerezCastillo2021,
  author   = {Pérez-Castillo, Ricardo and Delgado, Andrea and Ruiz, Francisco and Bacigalupe, Virginia and Piattini, Mario},
  journal  = {Software and Systems Modeling},
  title    = {A method for transforming knowledge discovery metamodel to {ArchiMate} models},
  year     = {2021},
  issn     = {1619-1366, 1619-1374},
  month    = aug,
  abstract = {Abstract
            Enterprise architecture has become an important driver to facilitate digital transformation in companies, since it allows to manage IT and business in a holistic and integrated manner by establishing connections among technology concerns and strategical/motivational ones. Enterprise architecture modelling is critical to accurately represent business and their IT assets in combination. This modelling is important when companies start to manage their enterprise architecture, but also when it is remodelled so that the enterprise architecture is realigned in a changing world. Enterprise architecture is commonly modelled by few experts in a manual way, which is error-prone and time-consuming and makes continuous realignment difficult. In contrast, other enterprise architecture modelling proposal automatically analyses some artefacts like source code, databases, services, etc. Previous automated modelling proposals focus on the analysis of individual artefacts with isolated transformations toward ArchiMate or other enterprise architecture notations and/or frameworks. We propose the usage of Knowledge Discovery Metamodel (KDM) to represent all the intermediate information retrieved from information systems’ artefacts, which is then transformed into ArchiMate models. Thus, the core contribution of this paper is the model transformation between KDM and ArchiMate metamodels. The main implication of this proposal is that ArchiMate models are automatically generated from a common knowledge repository. Thereby, the relationships between different-nature artefacts can be exploited to get more complete and accurate enterprise architecture representations.},
  doi      = {10.1007/s10270-021-00912-y},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\3ANJPZ4X\\Pérez-Castillo et al. - 2021 - A method for transforming knowledge discovery meta.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10270-021-00912-y},
  urldate  = {2021-10-24},
}

@Article{Chen2021f,
  author     = {Chen, Jiachi and Xia, Xin and Lo, David and Grundy, John and Yang, Xiaohu},
  journal    = {Empirical Software Engineering},
  title      = {Maintenance-related concerns for post-deployed {Ethereum} smart contract development: issues, techniques, and future challenges},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = nov,
  number     = {6},
  pages      = {117},
  volume     = {26},
  doi        = {10.1007/s10664-021-10018-0},
  language   = {en},
  shorttitle = {Maintenance-related concerns for post-deployed {Ethereum} smart contract development},
  url        = {https://link.springer.com/10.1007/s10664-021-10018-0},
  urldate    = {2021-10-24},
}

@Article{Rheindt2021,
  author     = {Rheindt, Sven and Maier, Sebastian and Pohle, Nora and Nolte, Lars and Lenke, Oliver and Schmaus, Florian and Wild, Thomas and Schröder-Preikschat, Wolfgang and Herkersdorf, Andreas},
  journal    = {International Journal of Parallel Programming},
  title      = {{DySHARQ}: {Dynamic} {Software}-{Defined} {Hardware}-{Managed} {Queues} for {Tile}-{Based} {Architectures}},
  year       = {2021},
  issn       = {0885-7458, 1573-7640},
  month      = aug,
  number     = {4},
  pages      = {506--540},
  volume     = {49},
  doi        = {10.1007/s10766-020-00687-7},
  language   = {en},
  shorttitle = {{DySHARQ}},
  url        = {https://link.springer.com/10.1007/s10766-020-00687-7},
  urldate    = {2021-10-24},
}

@Article{Levi2021,
  author   = {Levi, Reut and Medina, Moti and Ron, Dana},
  journal  = {Distributed Computing},
  title    = {Property testing of planarity in the {CONGEST} model},
  year     = {2021},
  issn     = {0178-2770, 1432-0452},
  month    = feb,
  number   = {1},
  pages    = {15--32},
  volume   = {34},
  doi      = {10.1007/s00446-020-00382-3},
  file     = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\5EHP8R65\\Levi et al. - 2021 - Property testing of planarity in the CONGEST model.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s00446-020-00382-3},
  urldate  = {2021-10-24},
}

@Article{Pereira2021,
  author     = {Pereira, Rui and Matalonga, Hugo and Couto, Marco and Castor, Fernando and Cabral, Bruno and Carvalho, Pedro and de Sousa, Simão Melo and Fernandes, João Paulo},
  journal    = {Empirical Software Engineering},
  title      = {{GreenHub}: a large-scale collaborative dataset to battery consumption analysis of android devices},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = may,
  number     = {3},
  pages      = {38},
  volume     = {26},
  doi        = {10.1007/s10664-020-09925-5},
  language   = {en},
  shorttitle = {{GreenHub}},
  url        = {https://link.springer.com/10.1007/s10664-020-09925-5},
  urldate    = {2021-10-24},
}

@Article{Prana2021,
  author     = {Prana, Gede Artha Azriadi and Sharma, Abhishek and Shar, Lwin Khin and Foo, Darius and Santosa, Andrew E. and Sharma, Asankhaya and Lo, David},
  journal    = {Empirical Software Engineering},
  title      = {Out of sight, out of mind? {How} vulnerable dependencies affect open-source projects},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = jul,
  number     = {4},
  pages      = {59},
  volume     = {26},
  doi        = {10.1007/s10664-021-09959-3},
  language   = {en},
  shorttitle = {Out of sight, out of mind?},
  url        = {https://link.springer.com/10.1007/s10664-021-09959-3},
  urldate    = {2021-10-24},
}

@Article{RamosGutierrez2021,
  author   = {Ramos-Gutiérrez, Belén and Varela-Vaca, Ángel Jesús and Galindo, José A. and Gómez-López, María Teresa and Benavides, David},
  journal  = {Empirical Software Engineering},
  title    = {Discovering configuration workflows from existing logs using process mining},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = jan,
  number   = {1},
  pages    = {11},
  volume   = {26},
  doi      = {10.1007/s10664-020-09911-x},
  file     = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\TYLWDB7R\\Ramos-Gutiérrez et al. - 2021 - Discovering configuration workflows from existing .pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s10664-020-09911-x},
  urldate  = {2021-10-24},
}

@Article{Farzad2021,
  author   = {Farzad, Amir and Gulliver, T. Aaron},
  journal  = {SN Computer Science},
  title    = {Two {Class} {Pruned} {Log} {Message} {Anomaly} {Detection}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = sep,
  number   = {5},
  pages    = {391},
  volume   = {2},
  doi      = {10.1007/s42979-021-00772-9},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\RZE9WSKM\\Farzad and Gulliver - 2021 - Two Class Pruned Log Message Anomaly Detection.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00772-9},
  urldate  = {2021-10-24},
}

@Article{Demongivert2021,
  author   = {Demongivert, Cédric and Bouchard, Kévin and Gaboury, Sébastien and Bouchard, Bruno and Lussier, Maxime and Parenteau, Maxime and Laliberté, Catherine and Couture, Mélanie and Bier, Nathalie and Giroux, Sylvain},
  journal  = {Journal of Reliable Intelligent Environments},
  title    = {A distributable event-oriented architecture for activity recognition in smart homes},
  year     = {2021},
  issn     = {2199-4668, 2199-4676},
  month    = sep,
  number   = {3},
  pages    = {215--231},
  volume   = {7},
  doi      = {10.1007/s40860-020-00125-y},
  language = {en},
  url      = {https://link.springer.com/10.1007/s40860-020-00125-y},
  urldate  = {2021-10-24},
}

@Article{Rai2021,
  author   = {Rai, Bipin Kumar and Verma, Ravi and Tiwari, Shiva},
  journal  = {SN Computer Science},
  title    = {Using {Open} {Source} {Intelligence} as a {Tool} for {Reliable} {Web} {Searching}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = sep,
  number   = {5},
  pages    = {402},
  volume   = {2},
  doi      = {10.1007/s42979-021-00777-4},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\DX5EF5TT\\Rai et al. - 2021 - Using Open Source Intelligence as a Tool for Relia.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00777-4},
  urldate  = {2021-10-24},
}

@Article{Karhapaeae2021,
  author     = {Karhapää, Pertti and Behutiye, Woubshet and Rodríguez, Pilar and Oivo, Markku and Costal, Dolors and Franch, Xavier and Aaramaa, Sanja and Choraś, Michał and Partanen, Jari and Abherve, Antonin},
  journal    = {Empirical Software Engineering},
  title      = {Strategies to manage quality requirements in agile software development: a multiple case study},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = mar,
  number     = {2},
  pages      = {28},
  volume     = {26},
  abstract   = {Abstract
            Agile methods can deliver software that fulfills customer needs rapidly and continuously. Quality requirements (QRs) are important in this regard; however, detailed studies on how companies applying agile methods to manage QRs are limited, as are studies on the rationale for choosing specific QR management practices and related challenges. The aim of this study was to address why practitioners manage QRs as they do and what challenges they face. We also analyzed how existing practices mitigate some of the found challenges. Lastly, we connect the contextual elements of the companies with their practices and challenges. We conducted 36 interviews with practitioners from four companies of varying sizes. Since each company operates in different domains, comparing QR management strategies and related challenges in different contexts was possible. We found that the companies apply proactive, reactive, and interactive strategies to manage QRs. Additionally, our study revealed 40 challenges in six categories that companies applying agile methods may face in QR management. We also identified nine contextual elements that affect QR management practice choices and which, importantly, can explain many related challenges. Based on these findings, we constructed a theoretical model about the connection between context, QR management practices, and challenges. Practitioners in similar contexts can learn from the practices identified in this study. Our preliminary theoretical model can help other practitioners identify what challenges they can expect to face in QR management in different developmental contexts as well as which practices to apply to mitigate these challenges.},
  doi        = {10.1007/s10664-020-09903-x},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\72G3MC9J\\Karhapää et al. - 2021 - Strategies to manage quality requirements in agile.pdf:application/pdf},
  language   = {en},
  shorttitle = {Strategies to manage quality requirements in agile software development},
  url        = {http://link.springer.com/10.1007/s10664-020-09903-x},
  urldate    = {2021-10-24},
}

@Article{Chang2021,
  author   = {Chang, Zuling and Ezerman, Martianus Frederic and Fahreza, Adamas Aqsa and Ling, San and Szmidt, Janusz and Wang, Huaxiong},
  journal  = {SN Computer Science},
  title    = {Binary de {Bruijn} {Sequences} via {Zech}’s {Logarithms}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = jul,
  number   = {4},
  pages    = {314},
  volume   = {2},
  doi      = {10.1007/s42979-021-00683-9},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\JBZ9X8L6\\Chang et al. - 2021 - Binary de Bruijn Sequences via Zech’s Logarithms.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00683-9},
  urldate  = {2021-10-24},
}

@Article{Nguyen2021,
  author   = {Nguyen, Duong and Yingchareonthawornchai, Sorrachai and Tekken Valapil, Vidhya and Kulkarni, Sandeep S. and Demirbas, Murat},
  journal  = {Distributed Computing},
  title    = {Precision, recall, and sensitivity of monitoring partially synchronous distributed programs},
  year     = {2021},
  issn     = {0178-2770, 1432-0452},
  month    = oct,
  number   = {5},
  pages    = {319--348},
  volume   = {34},
  doi      = {10.1007/s00446-021-00402-w},
  language = {en},
  url      = {https://link.springer.com/10.1007/s00446-021-00402-w},
  urldate  = {2021-10-24},
}

@Article{Soremekun2021,
  author     = {Soremekun, Ezekiel and Kirschner, Lukas and Böhme, Marcel and Zeller, Andreas},
  journal    = {Empirical Software Engineering},
  title      = {Locating faults with program slicing: an empirical analysis},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = may,
  number     = {3},
  pages      = {51},
  volume     = {26},
  doi        = {10.1007/s10664-020-09931-7},
  file       = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\IZPY6BMN\\Soremekun et al. - 2021 - Locating faults with program slicing an empirical.pdf:application/pdf},
  language   = {en},
  shorttitle = {Locating faults with program slicing},
  url        = {https://link.springer.com/10.1007/s10664-020-09931-7},
  urldate    = {2021-10-24},
}

@Article{Bolotnikov2021,
  author   = {Bolotnikov, I. V. and Borodin, A. E.},
  journal  = {Programming and Computer Software},
  title    = {Interprocedural {Static} {Analysis} for {Finding} {Bugs} in {Go} {Programs}},
  year     = {2021},
  issn     = {0361-7688, 1608-3261},
  month    = sep,
  number   = {5},
  pages    = {344--352},
  volume   = {47},
  doi      = {10.1134/S0361768821050030},
  language = {en},
  url      = {https://link.springer.com/10.1134/S0361768821050030},
  urldate  = {2021-10-24},
}

@Article{TizpazNiari2021,
  author   = {Tizpaz-Niari, Saeid and Černý, Pavol and Sankaranarayanan, Sriram and Trivedi, Ashutosh},
  journal  = {International Journal on Software Tools for Technology Transfer},
  title    = {Quantitative estimation of side-channel leaks with neural networks},
  year     = {2021},
  issn     = {1433-2779, 1433-2787},
  month    = aug,
  number   = {4},
  pages    = {641--654},
  volume   = {23},
  doi      = {10.1007/s10009-021-00622-2},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10009-021-00622-2},
  urldate  = {2021-10-24},
}

@Article{Jayanti2021,
  author   = {Jayanti, Siddhartha V. and Tarjan, Robert E.},
  journal  = {Distributed Computing},
  title    = {Concurrent disjoint set union},
  year     = {2021},
  issn     = {0178-2770, 1432-0452},
  month    = apr,
  abstract = {Abstract
            
              We develop and analyze concurrent algorithms for the disjoint set union (“union-find” ) problem in the shared memory, asynchronous multiprocessor model of computation, with CAS (compare and swap) or DCAS (double compare and swap) as the synchronization primitive. We give a deterministic bounded wait-free algorithm that uses DCAS and has a total work bound of
              
                
                  \$\$O{\textbackslash}biggl ( m {\textbackslash}cdot {\textbackslash}left( {\textbackslash}log \{{\textbackslash}left( {\textbackslash}frac\{np\}\{m\} + 1 {\textbackslash}right) \} + {\textbackslash}alpha \{{\textbackslash}left( n, {\textbackslash}frac\{m\}\{np\} {\textbackslash}right) \} {\textbackslash}right) {\textbackslash}biggr )\$\$
                  
                    
                      O
                      
                        (
                      
                      m
                      ·
                      
                        log
                        
                          
                            
                              np
                            
                            m
                          
                          +
                          1
                        
                        +
                        α
                        
                          n
                          ,
                          
                            m
                            
                              np
                            
                          
                        
                      
                      
                        )
                      
                    
                  
                
              
              for a problem with
              n
              elements and
              m
              operations solved by
              p
              processes, where
              
                
                  \$\${\textbackslash}alpha \$\$
                  
                    α
                  
                
              
              is a functional inverse of Ackermann’s function. We give two randomized algorithms that use only CAS and have the same work bound in expectation. The analysis of the second randomized algorithm is valid even if the scheduler is adversarial. Our DCAS and randomized algorithms take
              
                
                  \$\$O({\textbackslash}log n)\$\$
                  
                    
                      O
                      (
                      log
                      n
                      )
                    
                  
                
              
              steps per operation, worst-case for the DCAS algorithm, high-probability for the randomized algorithms. Our work and step bounds grow only logarithmically with
              p
              , making our algorithms truly scalable. We prove that for a class of symmetric algorithms that includes ours, no better step or work bound is possible. Our work is theoretical, but Alistarh et al (In search of the fastest concurrent union-find algorithm, 2019), Dhulipala et al (A framework for static and incremental parallel graph connectivity algorithms, 2020) and Hong et al (Exploring the design space of static and incremental graph connectivity algorithms on gpus, 2020) have implemented some of our algorithms on CPUs and GPUs and experimented with them. On many realistic data sets, our algorithms run as fast or faster than all others.},
  doi      = {10.1007/s00446-020-00388-x},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\8Z4MRPYN\\Jayanti and Tarjan - 2021 - Concurrent disjoint set union.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s00446-020-00388-x},
  urldate  = {2021-10-24},
}

@Article{Laaber2021,
  author   = {Laaber, Christoph and Gall, Harald C. and Leitner, Philipp},
  journal  = {Empirical Software Engineering},
  title    = {Applying test case prioritization to software microbenchmarks},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = nov,
  number   = {6},
  pages    = {133},
  volume   = {26},
  abstract = {Abstract
            
              Regression testing comprises techniques which are applied during software evolution to uncover faults effectively and efficiently. While regression testing is widely studied for functional tests, performance regression testing, e.g., with software microbenchmarks, is hardly investigated. Applying test case prioritization (TCP), a regression testing technique, to software microbenchmarks may help capturing large performance regressions sooner upon new versions. This may especially be beneficial for microbenchmark suites, because they take considerably longer to execute than unit test suites. However, it is unclear whether traditional unit testing TCP techniques work equally well for software microbenchmarks. In this paper, we empirically study coverage-based TCP techniques, employing
              total
              and
              additional
              greedy strategies, applied to software microbenchmarks along multiple parameterization dimensions, leading to 54 unique technique instantiations. We find that TCP techniques have a mean
              APFD-P
              (average percentage of fault-detection on performance) effectiveness between 0.54 and 0.71 and are able to capture the three largest performance changes after executing 29\% to 66\% of the whole microbenchmark suite. Our efficiency analysis reveals that the runtime overhead of TCP varies considerably depending on the exact parameterization. The most effective technique has an overhead of 11\% of the total microbenchmark suite execution time, making TCP a viable option for performance regression testing. The results demonstrate that the
              total
              strategy is superior to the
              additional
              strategy. Finally,
              dynamic-coverage
              techniques should be favored over
              static-coverage
              techniques due to their acceptable analysis overhead; however, in settings where the time for prioritzation is limited,
              static-coverage
              techniques provide an attractive alternative.},
  doi      = {10.1007/s10664-021-10037-x},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\6AE2GXNI\\Laaber et al. - 2021 - Applying test case prioritization to software micr.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-10037-x},
  urldate  = {2021-10-24},
}

@Article{Schulz2021,
  author     = {Schulz, Oliver and Beaujean, Frederik and Caldwell, Allen and Grunwald, Cornelius and Hafych, Vasyl and Kröninger, Kevin and Cagnina, Salvatore La and Röhrig, Lars and Shtembari, Lolian},
  journal    = {SN Computer Science},
  title      = {{BAT}.jl: {A} {Julia}-{Based} {Tool} for {Bayesian} {Inference}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = may,
  number     = {3},
  pages      = {210},
  volume     = {2},
  abstract   = {Abstract
            We describe the development of a multi-purpose software for Bayesian statistical inference, BAT.jl, written in the Julia language. The major design considerations and implemented algorithms are summarized here, together with a test suite that ensures the proper functioning of the algorithms. We also give an extended example from the realm of physics that demonstrates the functionalities of BAT.jl.},
  doi        = {10.1007/s42979-021-00626-4},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\4MKEWDHN\\Schulz et al. - 2021 - BAT.jl A Julia-Based Tool for Bayesian Inference.pdf:application/pdf},
  language   = {en},
  shorttitle = {{BAT}.jl},
  url        = {https://link.springer.com/10.1007/s42979-021-00626-4},
  urldate    = {2021-10-24},
}

@Article{Fakeeroodeen2021,
  author   = {Fakeeroodeen, Y. N. and Beeharry, Y.},
  journal  = {SN Computer Science},
  title    = {Hybrid {Data} {Privacy} and {Anonymization} {Algorithms} for {Smart} {Health} {Applications}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = apr,
  number   = {2},
  pages    = {126},
  volume   = {2},
  doi      = {10.1007/s42979-021-00547-2},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\CL5MWIUR\\Fakeeroodeen and Beeharry - 2021 - Hybrid Data Privacy and Anonymization Algorithms f.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s42979-021-00547-2},
  urldate  = {2021-10-24},
}

@Article{Aranega2021,
  author     = {Aranega, Vincent and Delplanque, Julien and Martinez, Matias and Black, Andrew P. and Ducasse, Stéphane and Etien, Anne and Fuhrman, Christopher and Polito, Guillermo},
  journal    = {Empirical Software Engineering},
  title      = {Rotten green tests in {Java}, {Pharo} and {Python}: {An} empirical study},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = nov,
  number     = {6},
  pages      = {130},
  volume     = {26},
  doi        = {10.1007/s10664-021-10016-2},
  file       = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\CT9X9SRT\\Aranega et al. - 2021 - Rotten green tests in Java, Pharo and Python An e.pdf:application/pdf},
  language   = {en},
  shorttitle = {Rotten green tests in {Java}, {Pharo} and {Python}},
  url        = {https://link.springer.com/10.1007/s10664-021-10016-2},
  urldate    = {2021-10-24},
}

@Article{Kermansaravi2021,
  author   = {Kermansaravi, Zeinab Azadeh and Rahman, Md Saidur and Khomh, Foutse and Jaafar, Fehmi and Guéhéneuc, Yann-Gaël},
  journal  = {Empirical Software Engineering},
  title    = {Investigating design anti-pattern and design pattern mutations and their change- and fault-proneness},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = jan,
  number   = {1},
  pages    = {9},
  volume   = {26},
  doi      = {10.1007/s10664-020-09900-0},
  file     = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\GC3M5ZIL\\Kermansaravi et al. - 2021 - Investigating design anti-pattern and design patte.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s10664-020-09900-0},
  urldate  = {2021-10-24},
}

@Article{Huang2022,
  author   = {Huang, Yuan and Liang, Xingjian and Chen, Zhihao and Jia, Nan and Luo, Xiapu and Chen, Xiangping and Zheng, Zibin and Zhou, Xiaocong},
  journal  = {Empirical Software Engineering},
  title    = {Reviewing rounds prediction for code patches},
  year     = {2022},
  issn     = {1382-3256, 1573-7616},
  month    = jan,
  number   = {1},
  pages    = {7},
  volume   = {27},
  abstract = {Abstract
            
              Code review is one of the common activities to guarantee the reliability of software, while code review is time-consuming as it requires reviewers to inspect the source code of each patch. A patch may be reviewed more than once before it is eventually merged or abandoned, and then such a patch may tighten the development schedule of the developers and further affect the development progress of a project. Thus, a tool that predicts early on how long a patch will be reviewed can help developers take self-inspection beforehand for the patches that require long-time review. In this paper, we propose a novel method,
              PMCost
              , to predict the reviewing rounds of a patch.
              PMCost
              uses a number of features, including patch meta-features, code diff features, personal experience features and patch textual features, to better reflect code changes and review process. To examine the benefits of
              PMCost
              , we perform experiments on three large open source projects, namely Eclipse, OpenDaylight and OpenStack. The encouraging experimental results demonstrate the feasibility and effectiveness of our approach. Besides, we further study the why the proposed features contribute to the reviewing rounds prediction.},
  doi      = {10.1007/s10664-021-10035-z},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-10035-z},
  urldate  = {2021-10-24},
}

@Article{Back2021,
  author     = {Back, Christoffer Olling and Slaats, Tijs and Hildebrandt, Thomas Troels and Marquard, Morten},
  journal    = {International Journal on Software Tools for Technology Transfer},
  title      = {{DisCoveR}: accurate and efficient discovery of declarative process models},
  year       = {2021},
  issn       = {1433-2779, 1433-2787},
  month      = jun,
  doi        = {10.1007/s10009-021-00616-0},
  language   = {en},
  shorttitle = {{DisCoveR}},
  url        = {https://link.springer.com/10.1007/s10009-021-00616-0},
  urldate    = {2021-10-24},
}

@Article{Ghaffari2021,
  author   = {Ghaffari, Mohsen and Hirvonen, Juho and Kuhn, Fabian and Maus, Yannic},
  journal  = {Distributed Computing},
  title    = {Improved distributed \$\${\textbackslash}{Delta} \$\$-coloring},
  year     = {2021},
  issn     = {0178-2770, 1432-0452},
  month    = aug,
  number   = {4},
  pages    = {239--258},
  volume   = {34},
  abstract = {Abstract
            
              We present a randomized distributed algorithm that computes a
              
                
                  \$\${\textbackslash}Delta \$\$
                  
                    Δ
                  
                
              
              -coloring in any non-complete graph with maximum degree
              
                
                  \$\${\textbackslash}Delta {\textbackslash}ge 4\$\$
                  
                    
                      Δ
                      ≥
                      4
                    
                  
                
              
              in
              
                
                  \$\$O({\textbackslash}log {\textbackslash}Delta ) + 2{\textasciicircum}\{O({\textbackslash}sqrt\{{\textbackslash}log {\textbackslash}log n\})\}\$\$
                  
                    
                      O
                      
                        (
                        log
                        Δ
                        )
                      
                      +
                      
                        2
                        
                          O
                          (
                          
                            
                              log
                              log
                              n
                            
                          
                          )
                        
                      
                    
                  
                
              
              rounds, as well as a randomized algorithm that computes a
              
                
                  \$\${\textbackslash}Delta \$\$
                  
                    Δ
                  
                
              
              -coloring in
              
                
                  \$\$O(({\textbackslash}log {\textbackslash}log n){\textasciicircum}2)\$\$
                  
                    
                      O
                      (
                      
                        
                          (
                          log
                          log
                          n
                          )
                        
                        2
                      
                      )
                    
                  
                
              
              rounds when
              
                
                  \$\${\textbackslash}Delta {\textbackslash}in [3, O(1)]\$\$
                  
                    
                      Δ
                      ∈
                      [
                      3
                      ,
                      O
                      (
                      1
                      )
                      ]
                    
                  
                
              
              . Both these algorithms improve on an
              
                
                  \$\$O({\textbackslash}log {\textasciicircum}3 n / {\textbackslash}log {\textbackslash}Delta )\$\$
                  
                    
                      O
                      (
                      
                        log
                        3
                      
                      n
                      /
                      log
                      Δ
                      )
                    
                  
                
              
              -round algorithm of Panconesi and Srinivasan (STOC’93), which has remained the state of the art for the past 25 years. Moreover, the latter algorithm gets (exponentially) closer to an
              
                
                  \$\${\textbackslash}Omega ({\textbackslash}log {\textbackslash}log n)\$\$
                  
                    
                      Ω
                      (
                      log
                      log
                      n
                      )
                    
                  
                
              
              round lower bound of Brandt et al. (STOC’16).},
  doi      = {10.1007/s00446-021-00397-4},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\7PD746UP\\Ghaffari et al. - 2021 - Improved distributed \$\$Delta \$\$-coloring.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s00446-021-00397-4},
  urldate  = {2021-10-24},
}

@Article{Bogner2021,
  author     = {Bogner, Justus and Fritzsch, Jonas and Wagner, Stefan and Zimmermann, Alfred},
  journal    = {Empirical Software Engineering},
  title      = {Industry practices and challenges for the evolvability assurance of microservices: {An} interview study and systematic grey literature review},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = sep,
  number     = {5},
  pages      = {104},
  volume     = {26},
  abstract   = {Abstract
            
              Context
              Microservices as a lightweight and decentralized architectural style with fine-grained services promise several beneficial characteristics for sustainable long-term software evolution. Success stories from early adopters like Netflix, Amazon, or Spotify have demonstrated that it is possible to achieve a high degree of flexibility and evolvability with these systems. However, the described advantageous characteristics offer no concrete guidance and little is known about evolvability assurance processes for microservices in industry as well as challenges in this area. Insights into the current state of practice are a very important prerequisite for relevant research in this field.
            
            
              Objective
              We therefore wanted to explore how practitioners structure the evolvability assurance processes for microservices, what tools, metrics, and patterns they use, and what challenges they perceive for the evolvability of their systems.
            
            
              Method
              We first conducted 17 semi-structured interviews and discussed 14 different microservice-based systems and their assurance processes with software professionals from 10 companies. Afterwards, we performed a systematic grey literature review (GLR) and used the created interview coding system to analyze 295 practitioner online resources.
            
            
              Results
              
                The combined analysis revealed the importance of finding a sensible balance between decentralization and standardization. Guidelines like architectural principles were seen as valuable to ensure a base consistency for evolvability and specialized test automation was a prevalent theme. Source code quality was the primary target for the usage of tools and metrics for our interview participants, while testing tools and productivity metrics were the focus of our GLR resources. In both studies, practitioners did not mention architectural or service-oriented tools and metrics, even though the most crucial challenges like
                Service Cutting
                or
                Microservices Integration
                were of an architectural nature.
              
            
            
              Conclusions
              
                Practitioners relied on guidelines, standardization, or patterns like
                Event-Driven Messaging
                to partially address some reported evolvability challenges. However, specialized techniques, tools, and metrics are needed to support industry with the continuous evaluation of service granularity and dependencies. Future microservices research in the areas of maintenance, evolution, and technical debt should take our findings and the reported industry sentiments into account.},
  doi        = {10.1007/s10664-021-09999-9},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\2SSIE7E7\\Bogner et al. - 2021 - Industry practices and challenges for the evolvabi.pdf:application/pdf},
  language   = {en},
  shorttitle = {Industry practices and challenges for the evolvability assurance of microservices},
  url        = {https://link.springer.com/10.1007/s10664-021-09999-9},
  urldate    = {2021-10-24},
}

@Article{Sarker2021a,
  author     = {Sarker, Iqbal H.},
  journal    = {SN Computer Science},
  title      = {Data {Science} and {Analytics}: {An} {Overview} from {Data}-{Driven} {Smart} {Computing}, {Decision}-{Making} and {Applications} {Perspective}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = sep,
  number     = {5},
  pages      = {377},
  volume     = {2},
  doi        = {10.1007/s42979-021-00765-8},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\3ZLNR8ZN\\Sarker - 2021 - Data Science and Analytics An Overview from Data-.pdf:application/pdf},
  language   = {en},
  shorttitle = {Data {Science} and {Analytics}},
  url        = {https://link.springer.com/10.1007/s42979-021-00765-8},
  urldate    = {2021-10-24},
}

@Article{Yin2021a,
  author     = {Yin, Fei and Shi, Feng},
  journal    = {International Journal of Parallel Programming},
  title      = {A {Comparative} {Survey} of {Big} {Data} {Computing} and {HPC}: {From} a {Parallel} {Programming} {Model} to a {Cluster} {Architecture}},
  year       = {2021},
  issn       = {0885-7458, 1573-7640},
  month      = may,
  doi        = {10.1007/s10766-021-00717-y},
  language   = {en},
  shorttitle = {A {Comparative} {Survey} of {Big} {Data} {Computing} and {HPC}},
  url        = {https://link.springer.com/10.1007/s10766-021-00717-y},
  urldate    = {2021-10-24},
}

@Article{Brito2021,
  author   = {Brito, Aline and Hora, Andre and Valente, Marco Tulio},
  journal  = {Empirical Software Engineering},
  title    = {Characterizing refactoring graphs in {Java} and {JavaScript} projects},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = nov,
  number   = {6},
  pages    = {125},
  volume   = {26},
  doi      = {10.1007/s10664-021-10023-3},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-10023-3},
  urldate  = {2021-10-24},
}

@Article{Nogueira2021,
  author   = {Nogueira, Ana Filipa and Zenha-Rela, Mário},
  journal  = {SN Computer Science},
  title    = {Monitoring a {CI}/{CD} {Workflow} {Using} {Process} {Mining}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = nov,
  number   = {6},
  pages    = {448},
  volume   = {2},
  doi      = {10.1007/s42979-021-00830-2},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\CJXMHN4V\\Nogueira and Zenha-Rela - 2021 - Monitoring a CICD Workflow Using Process Mining.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00830-2},
  urldate  = {2021-10-24},
}

@Article{Kong2021,
  author     = {Kong, Pingfan and Li, Li and Gao, Jun and Riom, Timothée and Zhao, Yanjie and Bissyandé, Tegawendé F. and Klein, Jacques},
  journal    = {Automated Software Engineering},
  title      = {{ANCHOR}: locating android framework-specific crashing faults},
  year       = {2021},
  issn       = {0928-8910, 1573-7535},
  month      = nov,
  number     = {2},
  pages      = {10},
  volume     = {28},
  doi        = {10.1007/s10515-021-00290-1},
  file       = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\IMSSUTXM\\Kong et al. - 2021 - ANCHOR locating android framework-specific crashi.pdf:application/pdf},
  language   = {en},
  shorttitle = {{ANCHOR}},
  url        = {https://link.springer.com/10.1007/s10515-021-00290-1},
  urldate    = {2021-10-24},
}

@Article{Silva2021,
  author   = {Silva, Camila Costa and Galster, Matthias and Gilson, Fabian},
  journal  = {Empirical Software Engineering},
  title    = {Topic modeling in software engineering research},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = nov,
  number   = {6},
  pages    = {120},
  volume   = {26},
  abstract = {Abstract
            Topic modeling using models such as Latent Dirichlet Allocation (LDA) is a text mining technique to extract human-readable semantic “topics” (i.e., word clusters) from a corpus of textual documents. In software engineering, topic modeling has been used to analyze textual data in empirical studies (e.g., to find out what developers talk about online), but also to build new techniques to support software engineering tasks (e.g., to support source code comprehension). Topic modeling needs to be applied carefully (e.g., depending on the type of textual data analyzed and modeling parameters). Our study aims at describing how topic modeling has been applied in software engineering research with a focus on four aspects: (1) which topic models and modeling techniques have been applied, (2) which textual inputs have been used for topic modeling, (3) how textual data was “prepared” (i.e., pre-processed) for topic modeling, and (4) how generated topics (i.e., word clusters) were named to give them a human-understandable meaning. We analyzed topic modeling as applied in 111 papers from ten highly-ranked software engineering venues (five journals and five conferences) published between 2009 and 2020. We found that (1) LDA and LDA-based techniques are the most frequent topic modeling techniques, (2) developer communication and bug reports have been modelled most, (3) data pre-processing and modeling parameters vary quite a bit and are often vaguely reported, and (4) manual topic naming (such as deducting names based on frequent words in a topic) is common.},
  doi      = {10.1007/s10664-021-10026-0},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\3IHVMXEK\\Silva et al. - 2021 - Topic modeling in software engineering research.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-10026-0},
  urldate  = {2021-10-24},
}

@Article{Sartaj2021,
  author   = {Sartaj, Hassan and Iqbal, Muhammad Zohaib and Khan, Muhammad Uzair},
  journal  = {Software and Systems Modeling},
  title    = {Testing cockpit display systems of aircraft using a model-based approach},
  year     = {2021},
  issn     = {1619-1366, 1619-1374},
  month    = jan,
  doi      = {10.1007/s10270-020-00844-z},
  language = {en},
  url      = {http://link.springer.com/10.1007/s10270-020-00844-z},
  urldate  = {2021-10-24},
}

@Article{Maoz2021,
  author     = {Maoz, Shahar and Ringert, Jan Oliver},
  journal    = {Software and Systems Modeling},
  title      = {Spectra: a specification language for reactive systems},
  year       = {2021},
  issn       = {1619-1366, 1619-1374},
  month      = oct,
  number     = {5},
  pages      = {1553--1586},
  volume     = {20},
  abstract   = {Abstract
            We introduce Spectra, a new specification language for reactive systems, specifically tailored for the context of reactive synthesis. The meaning of Spectra is defined by a translation to a kernel language. Spectra comes with the Spectra Tools, a set of analyses, including a synthesizer to obtain a correct-by-construction implementation, several means for executing the resulting controller, and additional analyses aimed at helping engineers write higher-quality specifications. We present the language in detail and give an overview of its tool set. Together with the language and its tool set, we present four collections of many, non-trivial, large specifications, written by undergraduate computer science students for the development of autonomous Lego robots and additional example reactive systems. The collected specifications can serve as benchmarks for future studies on reactive synthesis. We present the specifications, with observations and lessons learned about the potential use of reactive synthesis by software engineers.},
  doi        = {10.1007/s10270-021-00868-z},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\XYWIC5ZM\\Maoz and Ringert - 2021 - Spectra a specification language for reactive sys.pdf:application/pdf},
  language   = {en},
  shorttitle = {Spectra},
  url        = {https://link.springer.com/10.1007/s10270-021-00868-z},
  urldate    = {2021-10-24},
}

@Article{Augusto2021,
  author   = {Augusto, Adriano and Dumas, Marlon and La Rosa, Marcello and Leemans, Sander J. J. and vanden Broucke, Seppe K. L. M.},
  journal  = {Software and Systems Modeling},
  title    = {Optimization framework for {DFG}-based automated process discovery approaches},
  year     = {2021},
  issn     = {1619-1366, 1619-1374},
  month    = aug,
  number   = {4},
  pages    = {1245--1270},
  volume   = {20},
  abstract = {Abstract
            The problem of automatically discovering business process models from event logs has been intensely investigated in the past two decades, leading to a wide range of approaches that strike various trade-offs between accuracy, model complexity, and execution time. A few studies have suggested that the accuracy of automated process discovery approaches can be enhanced by means of metaheuristic optimization techniques. However, these studies have remained at the level of proposals without validation on real-life datasets or they have only considered one metaheuristic in isolation. This article presents a metaheuristic optimization framework for automated process discovery. The key idea of the framework is to construct a directly-follows graph (DFG) from the event log, to perturb this DFG so as to generate new candidate solutions, and to apply a DFG-based automated process discovery approach in order to derive a process model from each DFG. The framework can be instantiated by linking it to an automated process discovery approach, an optimization metaheuristic, and the quality measure to be optimized (e.g., fitness, precision, F-score). The article considers several instantiations of the framework corresponding to four optimization metaheuristics, three automated process discovery approaches (Inductive Miner—directly-follows, Fodina, and Split Miner), and one accuracy measure (Markovian F-score). These framework instances are compared using a set of 20 real-life event logs. The evaluation shows that metaheuristic optimization consistently yields visible improvements in F-score for all the three automated process discovery approaches, at the cost of execution times in the order of minutes, versus seconds for the baseline approaches.},
  doi      = {10.1007/s10270-020-00846-x},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\A4C84B6R\\Augusto et al. - 2021 - Optimization framework for DFG-based automated pro.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10270-020-00846-x},
  urldate  = {2021-10-24},
}

@Article{Madani2021,
  author   = {Madani, Sina and Kolovos, Dimitris and Paige, Richard F.},
  journal  = {Software and Systems Modeling},
  title    = {Distributed model validation with {Epsilon}},
  year     = {2021},
  issn     = {1619-1366, 1619-1374},
  month    = oct,
  number   = {5},
  pages    = {1689--1712},
  volume   = {20},
  abstract = {Abstract
            
              Scalable performance is a major challenge with current model management tools. As the size and complexity of models and model management programs increases and the cost of computing falls, one solution for improving performance of model management programs is to perform computations on multiple computers. In this paper, we demonstrate a low-overhead data-parallel approach for distributed model validation in the context of an OCL-like language. Our approach minimises communication costs by exploiting the deterministic structure of programs and can take advantage of multiple cores on each (heterogeneous) machine with highly configurable computational granularity. Our performance evaluation shows that the implementation is extremely low overhead, achieving a speed up of 24.5
              
                
                  \$\${\textbackslash}times \$\$
                  
                    ×
                  
                
              
              with 26 computers over the sequential case, and 122
              
                
                  \$\${\textbackslash}times \$\$
                  
                    ×
                  
                
              
              when utilising all six cores on each computer.},
  doi      = {10.1007/s10270-021-00878-x},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\9JZPR99W\\Madani et al. - 2021 - Distributed model validation with Epsilon.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10270-021-00878-x},
  urldate  = {2021-10-24},
}

@Article{Lima2021,
  author   = {Lima, Luan P. and Rocha, Lincoln S. and Bezerra, Carla I. M. and Paixao, Matheus},
  journal  = {Empirical Software Engineering},
  title    = {Assessing exception handling testing practices in open-source libraries},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = sep,
  number   = {5},
  pages    = {85},
  volume   = {26},
  doi      = {10.1007/s10664-021-09983-3},
  file     = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\KYF5QS9P\\Lima et al. - 2021 - Assessing exception handling testing practices in .pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-09983-3},
  urldate  = {2021-10-24},
}

@Article{Ulan2021,
  author   = {Ulan, Maria and Löwe, Welf and Ericsson, Morgan and Wingkvist, Anna},
  journal  = {Software Quality Journal},
  title    = {Copula-based software metrics aggregation},
  year     = {2021},
  issn     = {0963-9314, 1573-1367},
  month    = aug,
  abstract = {Abstract
            
              A quality model is a conceptual decomposition of an abstract notion of quality into relevant, possibly conflicting characteristics and further into measurable metrics. For quality assessment and decision making, metrics values are aggregated to characteristics and ultimately to quality scores. Aggregation has often been problematic as quality models do not provide the semantics of aggregation. This makes it hard to formally reason about metrics, characteristics, and quality. We argue that aggregation needs to be interpretable and mathematically well defined in order to assess, to compare, and to improve quality. To address this challenge, we propose a probabilistic approach to aggregation and define quality scores based on joint distributions of absolute metrics values. To evaluate the proposed approach and its implementation under realistic conditions, we conduct empirical studies on
              bug prediction
              of ca. 5000 software classes,
              maintainability
              of ca. 15000 open-source software systems, and on the
              information quality
              of ca. 100000 real-world technical documents. We found that our approach is feasible, accurate, and scalable in performance.},
  doi      = {10.1007/s11219-021-09568-9},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\VYRXZU3X\\Ulan et al. - 2021 - Copula-based software metrics aggregation.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s11219-021-09568-9},
  urldate  = {2021-10-24},
}

@Article{Ahammad2021,
  author     = {Ahammad, Ishtiaq and Khan, Md. Ashikur Rahman and Salehin, Zayed Us},
  journal    = {SN Computer Science},
  title      = {Software-{Defined} {Dew}, {Roof}, {Fog} and {Cloud} ({SD}-{DRFC}) {Framework} for {IoT} {Ecosystem}: {The} {Journey}, {Novel} {Framework} {Architecture}, {Simulation}, and {Use} {Cases}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = may,
  number     = {3},
  pages      = {159},
  volume     = {2},
  doi        = {10.1007/s42979-021-00521-y},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\QGMGLE2C\\Ahammad et al. - 2021 - Software-Defined Dew, Roof, Fog and Cloud (SD-DRFC.pdf:application/pdf},
  language   = {en},
  shorttitle = {Software-{Defined} {Dew}, {Roof}, {Fog} and {Cloud} ({SD}-{DRFC}) {Framework} for {IoT} {Ecosystem}},
  url        = {https://link.springer.com/10.1007/s42979-021-00521-y},
  urldate    = {2021-10-24},
}

@Article{Falcone2021,
  author   = {Falcone, Yliès and Krstić, Srđan and Reger, Giles and Traytel, Dmitriy},
  journal  = {International Journal on Software Tools for Technology Transfer},
  title    = {A taxonomy for classifying runtime verification tools},
  year     = {2021},
  issn     = {1433-2779, 1433-2787},
  month    = apr,
  number   = {2},
  pages    = {255--284},
  volume   = {23},
  doi      = {10.1007/s10009-021-00609-z},
  file     = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\ACWR8DA9\\Falcone et al. - 2021 - A taxonomy for classifying runtime verification to.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10009-021-00609-z},
  urldate  = {2021-10-24},
}

@Article{Hatamian2021,
  author   = {Hatamian, Majid and Wairimu, Samuel and Momen, Nurul and Fritsch, Lothar},
  journal  = {Empirical Software Engineering},
  title    = {A privacy and security analysis of early-deployed {COVID}-19 contact tracing {Android} apps},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = may,
  number   = {3},
  pages    = {36},
  volume   = {26},
  abstract = {Abstract
            As this article is being drafted, the SARS-CoV-2/COVID-19 pandemic is causing harm and disruption across the world. Many countries aimed at supporting their contact tracers with the use of digital contact tracing apps in order to manage and control the spread of the virus. Their idea is the automatic registration of meetings between smartphone owners for the quicker processing of infection chains. To date, there are many contact tracing apps that have already been launched and used in 2020. There has been a lot of speculations about the privacy and security aspects of these apps and their potential violation of data protection principles. Therefore, the developers of these apps are constantly criticized because of undermining users’ privacy, neglecting essential privacy and security requirements, and developing apps under time pressure without considering privacy- and security-by-design. In this study, we analyze the privacy and security performance of 28 contact tracing apps available on Android platform from various perspectives, including their code’s privileges, promises made in their privacy policies, and static and dynamic performances. Our methodology is based on the collection of various types of data concerning these 28 apps, namely permission requests, privacy policy texts, run-time resource accesses, and existing security vulnerabilities. Based on the analysis of these data, we quantify and assess the impact of these apps on users’ privacy. We aimed at providing a quick and systematic inspection of the earliest contact tracing apps that have been deployed on multiple continents. Our findings have revealed that the developers of these apps need to take more cautionary steps to ensure code quality and to address security and privacy vulnerabilities. They should more consciously follow legal requirements with respect to apps’ permission declarations, privacy principles, and privacy policy contents.},
  doi      = {10.1007/s10664-020-09934-4},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\U8GZIVHF\\Hatamian et al. - 2021 - A privacy and security analysis of early-deployed .pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-020-09934-4},
  urldate  = {2021-10-24},
}

@Article{Cogo2021,
  author   = {Cogo, Filipe R. and Oliva, Gustavo A. and Bezemer, Cor-Paul and Hassan, Ahmed E.},
  journal  = {Empirical Software Engineering},
  title    = {An empirical study of same-day releases of popular packages in the npm ecosystem},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = sep,
  number   = {5},
  pages    = {89},
  volume   = {26},
  doi      = {10.1007/s10664-021-09980-6},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-09980-6},
  urldate  = {2021-10-24},
}

@Article{Abid2021,
  author     = {Abid, Shamsa and Shamail, Shafay and Basit, Hamid Abdul and Nadi, Sarah},
  journal    = {Empirical Software Engineering},
  title      = {{FACER}: {An} {API} usage-based code-example recommender for opportunistic reuse},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = nov,
  number     = {6},
  pages      = {110},
  volume     = {26},
  doi        = {10.1007/s10664-021-10000-w},
  language   = {en},
  shorttitle = {{FACER}},
  url        = {https://link.springer.com/10.1007/s10664-021-10000-w},
  urldate    = {2021-10-24},
}

@Article{Wu2021b,
  author   = {Wu, Chao and Horiuchi, Shingo and Murase, Kenji and Kikushima, Hiroaki and Tayama, Kenichi},
  journal  = {Journal of Cloud Computing},
  title    = {Intent-driven cloud resource design framework to meet cloud performance requirements and its application to a cloud-sensor system},
  year     = {2021},
  issn     = {2192-113X},
  month    = dec,
  number   = {1},
  pages    = {30},
  volume   = {10},
  abstract = {Abstract
            In cloud service delivery, the cloud user is concerned about “what” function and performance the cloud service could provide, while the cloud provider is concerned about “how” to design proper underlying cloud resources to meet the cloud user’s requirements. We take the cloud user’s requirement as intent and aim to translate the intent autonomously into cloud resource decisions. In recent years, intent-driven management has been a widely spread management concept which aims to close the gap between the operator’s high-level requirements and the underlying infrastructure configuration complexity. Intent-driven management has drawn attention from telecommunication industries, standards organizations, the open source software community and academic research. There are various application of intent-driven management which are being studied and implemented, including intent-driven Software Defined Network (SDN), intent-driven wireless network configuration, etc. However, application of intent-driven management into the cloud domain, especially the translation of cloud performance-related intent into the amount of cloud resource, has not been addressed by existing studies. In this work, we have proposed an Intent-based Cloud Service Management (ICSM) framework, and focused on realizing the RDF (Resource Design Function) to translate cloud performance-related intent into concrete cloud computation resource amount settings that are able  to meet the intended performance requirement. Furthermore, we have also proposed an intent breach prevention mechanism, P-mode, which is essential for commercial cloud service delivery. We have validated the proposals in a sensor-cloud system, designed to meet the user’s intent to process a large quantity of images collected by the sensors in a restricted time interval. The validation results show that the framework achieved 88.93 {\textasciitilde} 90.63\% precision for performance inference, and exceeds the conventional resource approach in the aspects of human cost, time cost and design results. Furthermore, the intent breach prevention mechanism P-mode significantly reduced the breach risk, at the same time keeping a high level of precision.},
  doi      = {10.1186/s13677-021-00242-w},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\FBX8L4YL\\Wu et al. - 2021 - Intent-driven cloud resource design framework to m.pdf:application/pdf},
  language = {en},
  url      = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-021-00242-w},
  urldate  = {2021-10-24},
}

@Article{Kitamura2021,
  author   = {Kitamura, Naoki and Kitagawa, Hirotaka and Otachi, Yota and Izumi, Taisuke},
  journal  = {Distributed Computing},
  title    = {Low-congestion shortcut and graph parameters},
  year     = {2021},
  issn     = {0178-2770, 1432-0452},
  month    = oct,
  number   = {5},
  pages    = {349--365},
  volume   = {34},
  abstract = {Abstract
            
              Distributed graph algorithms in the standard CONGEST model often exhibit the time-complexity lower bound of
              
                
                  \$\$\{{\textbackslash}tilde\{{\textbackslash}Omega \}\}({\textbackslash}sqrt\{n\} + D)\$\$
                  
                    
                      
                        Ω
                        {\textasciitilde}
                      
                      
                        (
                        
                          n
                        
                        +
                        D
                        )
                      
                    
                  
                
              
              rounds for several global problems, where
              n
              denotes the number of nodes and
              D
              the diameter of the input graph. Because such a lower bound is derived from special “hard-core” instances, it does not necessarily apply to specific popular graph classes such as planar graphs. The concept of
              low-congestion shortcuts
              was initiated by Ghaffari and Haeupler [SODA2016] for addressing the design of CONGEST algorithms running fast in restricted network topologies. In particular, given a graph class
              
                
                  \$\$\{{\textbackslash}mathcal \{C\}\}\$\$
                  
                    C
                  
                
              
              , an
              f
              -round algorithm for constructing shortcuts of quality
              q
              for any instance in
              
                
                  \$\$\{{\textbackslash}mathcal \{C\}\}\$\$
                  
                    C
                  
                
              
              results in
              
                
                  \$\$\{{\textbackslash}tilde\{O\}\}(q + f)\$\$
                  
                    
                      
                        O
                        {\textasciitilde}
                      
                      
                        (
                        q
                        +
                        f
                        )
                      
                    
                  
                
              
              -round algorithms for solving several fundamental graph problems such as minimum spanning tree and minimum cut, for
              
                
                  \$\$\{{\textbackslash}mathcal \{C\}\}\$\$
                  
                    C
                  
                
              
              . The main interest on this line is to identify the graph classes allowing the shortcuts that are efficient in the sense of breaking
              
                
                  \$\$\{{\textbackslash}tilde\{O\}\}({\textbackslash}sqrt\{n\}+D)\$\$
                  
                    
                      
                        O
                        {\textasciitilde}
                      
                      
                        (
                        
                          n
                        
                        +
                        D
                        )
                      
                    
                  
                
              
              -round general lower bounds. In this study, we consider the relationship between the quality of low-congestion shortcuts and the following four major graph parameters: doubling dimension, chordality, diameter, and clique-width. The key ingredient of the upper-bound side is a novel shortcut construction technique known as
              short-hop extension
              , which might be of independent interest.},
  doi      = {10.1007/s00446-021-00401-x},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\2S6S3I8F\\Kitamura et al. - 2021 - Low-congestion shortcut and graph parameters.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s00446-021-00401-x},
  urldate  = {2021-10-24},
}

@Article{Yin2021b,
  author   = {Yin, Huishi and Pfahl, Dietmar},
  journal  = {Software Quality Journal},
  title    = {Application of the {OIRE} method—tool support and initial feedback from two chinese companies},
  year     = {2021},
  issn     = {0963-9314, 1573-1367},
  month    = jun,
  doi      = {10.1007/s11219-021-09562-1},
  language = {en},
  url      = {https://link.springer.com/10.1007/s11219-021-09562-1},
  urldate  = {2021-10-24},
}

@Article{Kugele2021,
  author   = {Kugele, Stefan and Obergfell, Philipp and Sax, Eric},
  journal  = {Software and Systems Modeling},
  title    = {Model-based resource analysis and synthesis of service-oriented automotive software architectures},
  year     = {2021},
  issn     = {1619-1366, 1619-1374},
  month    = sep,
  abstract = {Abstract
            
              Context
              Automotive software architectures describe distributed functionality by an interaction of software components. One drawback of today’s architectures is their strong integration into the onboard communication network based on predefined dependencies at design time. The idea is to reduce this rigid integration and technological dependencies. To this end, service-oriented architecture offers a suitable methodology since network communication is dynamically established at run-time.
            
            
              Aim
              We target to provide a methodology for analysing hardware resources and synthesising automotive service-oriented architectures based on platform-independent service models. Subsequently, we focus on transforming these models into a platform-specific architecture realisation process following AUTOSAR Adaptive.
            
            
              Approach
              For the platform-independent part, we apply the concepts of design space exploration and simulation to analyse and synthesise deployment configurations, i. e., mapping services to hardware resources at an early development stage. We refine these configurations to AUTOSAR Adaptive software architecture models representing the necessary input for a subsequent implementation process for the platform-specific part.
            
            
              Result
              We present deployment configurations that are optimal for the usage of a given set of computing resources currently under consideration for our next generation of E/E architecture. We also provide simulation results that demonstrate the ability of these configurations to meet the run time requirements. Both results helped us to decide whether a particular configuration can be implemented. As a possible software toolchain for this purpose, we finally provide a prototype.
            
            
              Conclusion
              The use of models and their analysis are proper means to get there, but the quality and speed of development must also be considered.},
  doi      = {10.1007/s10270-021-00896-9},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\FBR44UYS\\Kugele et al. - 2021 - Model-based resource analysis and synthesis of ser.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10270-021-00896-9},
  urldate  = {2021-10-24},
}

@Article{Oyetoyan2021,
  author   = {Oyetoyan, Tosin Daniel and Morrison, Patrick},
  journal  = {Software Quality Journal},
  title    = {An improved text classification modelling approach to identify security messages in heterogeneous projects},
  year     = {2021},
  issn     = {0963-9314, 1573-1367},
  month    = jun,
  number   = {2},
  pages    = {509--553},
  volume   = {29},
  abstract = {Abstract
            Security remains under-addressed in many organisations, illustrated by the number of large-scale software security breaches. Preventing breaches can begin during software development if attention is paid to security during the software’s design and implementation. One approach to security assurance during software development is to examine communications between developers as a means of studying the security concerns of the project. Prior research has investigated models for classifying project communication messages (e.g., issues or commits) as security related or not. A known problem is that these models are project-specific, limiting their use by other projects or organisations. We investigate whether we can build a generic classification model that can generalise across projects. We define a set of security keywords by extracting them from relevant security sources, dividing them into four categories: asset, attack/threat, control/mitigation, and implicit. Using different combinations of these categories and including them in the training dataset, we built a classification model and evaluated it on industrial, open-source, and research-based datasets containing over 45 different products. Our model based on harvested security keywords as a feature set shows average recall from 55 to 86\%, minimum recall from 43 to 71\% and maximum recall from 60 to 100\%. An average f-score between 3.4 and 88\%, an average g-measure of at least 66\% across all the dataset, and an average AUC of ROC from 69 to 89\%. In addition, models that use externally sourced features outperformed models that use project-specific features on average by a margin of 26–44\% in recall, 22–50\% in g-measure, 0.4–28\% in f-score, and 15–19\% in AUC of ROC. Further, our results outperform a state-of-the-art prediction model for security bug reports in all cases. We find using sound statistical and effect size tests that (1) using harvested security keywords as features to train a text classification model improve classification models and generalise to other projects significantly. (2) Including features in the training dataset before model construction improve classification models significantly. (3) Different security categories represent predictors for different projects. Finally, we introduce new and promising approaches to construct models that can generalise across different independent projects.},
  doi      = {10.1007/s11219-020-09546-7},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\JAMQXKJ9\\Oyetoyan and Morrison - 2021 - An improved text classification modelling approach.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s11219-020-09546-7},
  urldate  = {2021-10-24},
}

@Article{Olianas2021,
  author     = {Olianas, Dario and Leotta, Maurizio and Ricca, Filippo},
  journal    = {Software Quality Journal},
  title      = {{MATTER}: {A} tool for generating end-to-end {IoT} test scripts},
  year       = {2021},
  issn       = {0963-9314, 1573-1367},
  month      = aug,
  abstract   = {Abstract
            In the last few years, Internet of Things (IoT) systems have drastically increased their relevance in many fundamental sectors. For this reason, assuring their quality is of paramount importance, especially in safety-critical contexts. Unfortunately, few quality assurance proposals for assuring the quality of these complex systems are present in the literature. In this paper, we extended and improved our previous approach for semi-automated model-based generation of executable test scripts. Our proposal is oriented to system-level acceptance testing of IoT systems. We have implemented a prototype tool taking in input a UML model of the system under test and some additional artefacts, and producing in output a test suite that checks if the system’s behaviour is compliant with such a model. We empirically evaluated our tool employing two IoT systems: a mobile health IoT system for diabetic patients and a smart park management system part of a smart city project. Both systems involve sensors or actuators, smartphones, and a remote cloud server. Results show that the test suites generated with our tool have been able to kill 91\% of the overall 260 generated mutants (i.e. artificial bugged versions of the two considered systems). Moreover, the optimisation introduced in this novel version of our prototype, based on a minimisation post-processing step, allowed to reduce the time required for executing the entire test suites (about -20/25\%) with no adverse effect on the bug-detection capability.},
  doi        = {10.1007/s11219-021-09565-y},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\6WB7ZDKD\\Olianas et al. - 2021 - MATTER A tool for generating end-to-end IoT test .pdf:application/pdf},
  language   = {en},
  shorttitle = {{MATTER}},
  url        = {https://link.springer.com/10.1007/s11219-021-09565-y},
  urldate    = {2021-10-24},
}

@Article{Sanchez2021,
  author     = {Sanchez, Beatriz A. and Zolotas, Athanasios and Hoyos Rodriguez, Horacio and Kolovos, Dimitris and Paige, Richard F. and Cooper, Justin C. and Hampson, Jason},
  journal    = {Software and Systems Modeling},
  title      = {Runtime translation of {OCL}-like statements on {Simulink} models: {Expanding} domains and optimising queries},
  year       = {2021},
  issn       = {1619-1366, 1619-1374},
  month      = aug,
  abstract   = {Abstract
            Open-source model management frameworks such as OCL and ATL tend to focus on manipulating models built atop the Eclipse Modelling Framework (EMF), a de facto standard for domain specific modelling. MATLAB Simulink is a widely used proprietary modelling framework for dynamic systems that is built atop an entirely different technical stack to EMF. To leverage the facilities of open-source model management frameworks with Simulink models, these can be transformed into an EMF-compatible representation. Downsides of this approach include the synchronisation of the native Simulink model and its EMF representation as they evolve; the completeness of the EMF representation, and the transformation cost which can be crippling for large Simulink models. We propose an alternative approach to bridge Simulink models with open-source model management frameworks that uses an “on-the-fly” translation of model management constructs into MATLAB statements. Our approach does not require an EMF representation and can mitigate the cost of the upfront transformation on large models. To evaluate both approaches we measure the performance of a model validation process with Epsilon (a model management framework) on a sample of large Simulink models available on GitHub. Our previous results suggest that, with our approach, the total validation time can be reduced by up to 80\%. In this paper, we expand our approach to support the management of Simulink requirements and dictionaries, and we improve the approach to perform queries on collections of model elements more efficiently. We demonstrate the use of the Simulink requirements and dictionaries with a case study and we evaluate the optimisations on collection queries with an experiment that compares the performance of a set of queries on models with different sizes. Our results suggest an improvement by up to 99\% on some queries.},
  doi        = {10.1007/s10270-021-00910-0},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\AE6M86DX\\Sanchez et al. - 2021 - Runtime translation of OCL-like statements on Simu.pdf:application/pdf},
  language   = {en},
  shorttitle = {Runtime translation of {OCL}-like statements on {Simulink} models},
  url        = {https://link.springer.com/10.1007/s10270-021-00910-0},
  urldate    = {2021-10-24},
}

@Article{Schneider2021,
  author   = {Schneider, Joshua and Basin, David and Brix, Frederik and Krstić, Srđan and Traytel, Dmitriy},
  journal  = {International Journal on Software Tools for Technology Transfer},
  title    = {Scalable online first-order monitoring},
  year     = {2021},
  issn     = {1433-2779, 1433-2787},
  month    = apr,
  number   = {2},
  pages    = {185--208},
  volume   = {23},
  abstract = {Abstract
            Online monitoring is the task of identifying complex temporal patterns while incrementally processing streams of data-carrying events. Existing state-of-the-art monitors for first-order patterns, which may refer to and quantify over data values, can process streams of modest velocity in real-time. We show how to scale up first-order monitoring to substantially higher velocities by slicing the stream, based on the events’ data values, into substreams that can be monitored independently. Because monitoring is not embarrassingly parallel in general, slicing can lead to data duplication. To reduce this overhead, we adapt hash-based partitioning techniques from databases to the monitoring setting. We implement these techniques in an automatic data slicer based on Apache Flink and empirically evaluate its performance using two tools—MonPoly and DejaVu—to monitor the substreams. Our evaluation attests to substantial scalability improvements for both tools.},
  doi      = {10.1007/s10009-021-00607-1},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\XPNWH457\\Schneider et al. - 2021 - Scalable online first-order monitoring.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10009-021-00607-1},
  urldate  = {2021-10-24},
}

@Article{Alani2021,
  author     = {Alani, Mohammed M.},
  journal    = {Journal of Reliable Intelligent Environments},
  title      = {Big data in cybersecurity: a survey of applications and future trends},
  year       = {2021},
  issn       = {2199-4668, 2199-4676},
  month      = jun,
  number     = {2},
  pages      = {85--114},
  volume     = {7},
  doi        = {10.1007/s40860-020-00120-3},
  language   = {en},
  shorttitle = {Big data in cybersecurity},
  url        = {https://link.springer.com/10.1007/s40860-020-00120-3},
  urldate    = {2021-10-24},
}

@Article{Havelund2021,
  author   = {Havelund, Klaus and Peled, Doron},
  journal  = {International Journal on Software Tools for Technology Transfer},
  title    = {An extension of first-order {LTL} with rules with application to runtime verification},
  year     = {2021},
  issn     = {1433-2779, 1433-2787},
  month    = aug,
  number   = {4},
  pages    = {547--563},
  volume   = {23},
  doi      = {10.1007/s10009-021-00626-y},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10009-021-00626-y},
  urldate  = {2021-10-24},
}

@Article{Peruma2022,
  author     = {Peruma, Anthony and Simmons, Steven and AlOmar, Eman Abdullah and Newman, Christian D. and Mkaouer, Mohamed Wiem and Ouni, Ali},
  journal    = {Empirical Software Engineering},
  title      = {How do i refactor this? {An} empirical study on refactoring trends and topics in {Stack} {Overflow}},
  year       = {2022},
  issn       = {1382-3256, 1573-7616},
  month      = jan,
  number     = {1},
  pages      = {11},
  volume     = {27},
  doi        = {10.1007/s10664-021-10045-x},
  language   = {en},
  shorttitle = {How do i refactor this?},
  url        = {https://link.springer.com/10.1007/s10664-021-10045-x},
  urldate    = {2021-10-24},
}

@Article{Beyer2021a,
  author   = {Beyer, Dirk},
  journal  = {International Journal on Software Tools for Technology Transfer},
  title    = {First international competition on software testing},
  year     = {2021},
  issn     = {1433-2779, 1433-2787},
  month    = jun,
  abstract = {Abstract
            
              Tool competitions are a special form of comparative evaluation, where each tool has a team of developers or supporters associated that makes sure the tool is properly configured to show its best possible performance. In several research areas, tool competitions have been a driving force for the development of mature tools that represent the state of the art in their field. This paper describes and reports the results of the 1
              
                
                  \$\${\textasciicircum}\{{\textbackslash}text \{st\}\}\$\$
                  
                    
                      
                      st
                    
                  
                
              
              International Competition on Software Testing (Test-Comp 2019), a comparative evaluation of automatic tools for software test generation. Test-Comp 2019 was presented as part of TOOLympics 2019, a satellite event of the conference TACAS. Nine test generators were evaluated on 2 356 test-generation tasks. There were two test specifications, one for generating a test that covers a particular function call and one for generating a test suite that tries to cover the branches of the program.},
  doi      = {10.1007/s10009-021-00613-3},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\TQCNG58C\\Beyer - 2021 - First international competition on software testin.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10009-021-00613-3},
  urldate  = {2021-10-24},
}

@Article{Cranefield2021,
  author     = {Cranefield, Stephen},
  journal    = {Autonomous Agents and Multi-Agent Systems},
  title      = {Enabling {BDI} group plans with coordination middleware: semantics and implementation},
  year       = {2021},
  issn       = {1387-2532, 1573-7454},
  month      = oct,
  number     = {2},
  pages      = {45},
  volume     = {35},
  doi        = {10.1007/s10458-021-09525-7},
  language   = {en},
  shorttitle = {Enabling {BDI} group plans with coordination middleware},
  url        = {https://link.springer.com/10.1007/s10458-021-09525-7},
  urldate    = {2021-10-24},
}

@Article{Ahmed2021,
  author   = {Ahmed, Toufique and Devanbu, Premkumar and Hellendoorn, Vincent J},
  journal  = {Empirical Software Engineering},
  title    = {Learning lenient parsing \& typing via indirect supervision},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = mar,
  number   = {2},
  pages    = {29},
  volume   = {26},
  doi      = {10.1007/s10664-021-09942-y},
  file     = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\6RJZT4QQ\\Ahmed et al. - 2021 - Learning lenient parsing & typing via indirect sup.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s10664-021-09942-y},
  urldate  = {2021-10-24},
}

@Article{Veizaga2021,
  author   = {Veizaga, Alvaro and Alferez, Mauricio and Torre, Damiano and Sabetzadeh, Mehrdad and Briand, Lionel},
  journal  = {Empirical Software Engineering},
  title    = {On systematically building a controlled natural language for functional requirements},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = jul,
  number   = {4},
  pages    = {79},
  volume   = {26},
  abstract = {Abstract
            Natural language (NL) is pervasive in software requirements specifications (SRSs). However, despite its popularity and widespread use, NL is highly prone to quality issues such as vagueness, ambiguity, and incompleteness. Controlled natural languages (CNLs) have been proposed as a way to prevent quality problems in requirements documents, while maintaining the flexibility to write and communicate requirements in an intuitive and universally understood manner. In collaboration with an industrial partner from the financial domain, we systematically develop and evaluate a CNL, named Rimay, intended at helping analysts write functional requirements. We rely on Grounded Theory for building Rimay and follow well-known guidelines for conducting and reporting industrial case study research. Our main contributions are: (1) a qualitative methodology to systematically define a CNL for functional requirements; this methodology is intended to be general for use across information-system domains, (2) a CNL grammar to represent functional requirements; this grammar is derived from our experience in the financial domain, but should be applicable, possibly with adaptations, to other information-system domains, and (3) an empirical evaluation of our CNL (Rimay) through an industrial case study. Our contributions draw on 15 representative SRSs, collectively containing 3215 NL requirements statements from the financial domain. Our evaluation shows that Rimay is expressive enough to capture, on average, 88\% (405 out of 460) of the NL requirements statements in four previously unseen SRSs from the financial domain.},
  doi      = {10.1007/s10664-021-09956-6},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\29YLA8FU\\Veizaga et al. - 2021 - On systematically building a controlled natural la.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-09956-6},
  urldate  = {2021-10-24},
}

@Article{Siavvas2021,
  author   = {Siavvas, Miltiadis and Kehagias, Dionysios and Tzovaras, Dimitrios and Gelenbe, Erol},
  journal  = {Software Quality Journal},
  title    = {A hierarchical model for quantifying software security based on static analysis alerts and software metrics},
  year     = {2021},
  issn     = {0963-9314, 1573-1367},
  month    = jun,
  number   = {2},
  pages    = {431--507},
  volume   = {29},
  doi      = {10.1007/s11219-021-09555-0},
  file     = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\47DZU75H\\Siavvas et al. - 2021 - A hierarchical model for quantifying software secu.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s11219-021-09555-0},
  urldate  = {2021-10-24},
}

@Article{Kaeppel2021,
  author   = {Käppel, Martin and Ackermann, Lars and Schönig, Stefan and Jablonski, Stefan},
  journal  = {Software and Systems Modeling},
  title    = {Language-independent look-ahead for checking multi-perspective declarative process models},
  year     = {2021},
  issn     = {1619-1366, 1619-1374},
  month    = oct,
  number   = {5},
  pages    = {1379--1401},
  volume   = {20},
  abstract = {Abstract
            Declarative process modelling languages focus on describing a process by restrictions over the behaviour, which must be satisfied throughout the whole process execution. Hence, they are well suited for modelling knowledge-intensive processes with many decision points. However, such models can be hard to read and understand, which affect the modelling and maintenance of the process models tremendously as well as their execution. When executing such declarative (multi-perspective) process models, it may happen that the execution of activities or the change of data values may result in the non-executability of crucial activities. Hence, it would be beneficial to know all consequences of decisions to give recommendations to the process participants. A look-ahead attempts to predict the effects of executing an activity towards possible consequences within an a priori defined time window. The prediction is based on the current state of the process execution, the intended next event and the underlying process model. While execution engines for single-perspective imperative process models already implement such functionality, execution approaches, for multi-perspective declarative process models that involve constraints on data and resources, are less mature. In this paper, we introduce a simulation-based look-ahead approach for multi-perspective declarative process models. This approach transforms the problem of a context-aware process simulation into a SAT problem, by translating a declarative multi-perspective process model and the current state of a process execution into a specification of the logic language Alloy. Via a SAT solver, process trajectories are generated that either satisfy or violate this specification. The simulated process trajectories are used to derive consequences and effects of certain decisions at any time of process execution. We evaluate our approach by means of three examples and give some advice for further optimizations.},
  doi      = {10.1007/s10270-020-00857-8},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\RUHBF9YH\\Käppel et al. - 2021 - Language-independent look-ahead for checking multi.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10270-020-00857-8},
  urldate  = {2021-10-24},
}

@Article{Ulan2021a,
  author   = {Ulan, Maria and Löwe, Welf and Ericsson, Morgan and Wingkvist, Anna},
  journal  = {Empirical Software Engineering},
  title    = {Weighted software metrics aggregation and its application to defect prediction},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = sep,
  number   = {5},
  pages    = {86},
  volume   = {26},
  abstract = {Abstract
            It is a well-known practice in software engineering to aggregate software metrics to assess software artifacts for various purposes, such as their maintainability or their proneness to contain bugs. For different purposes, different metrics might be relevant. However, weighting these software metrics according to their contribution to the respective purpose is a challenging task. Manual approaches based on experts do not scale with the number of metrics. Also, experts get confused if the metrics are not independent, which is rarely the case. Automated approaches based on supervised learning require reliable and generalizable training data, a ground truth, which is rarely available. We propose an automated approach to weighted metrics aggregation that is based on unsupervised learning. It sets metrics scores and their weights based on probability theory and aggregates them. To evaluate the effectiveness, we conducted two empirical studies on defect prediction, one on ca. 200 000 code changes, and another ca. 5 000 software classes. The results show that our approach can be used as an agnostic unsupervised predictor in the absence of a ground truth.},
  doi      = {10.1007/s10664-021-09984-2},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\DDAYUM78\\Ulan et al. - 2021 - Weighted software metrics aggregation and its appl.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-09984-2},
  urldate  = {2021-10-24},
}

@Article{Singh2021,
  author     = {Singh, Paras Nath and Gowdar, Tara P.},
  journal    = {SN Computer Science},
  title      = {Searching {String} in {Big}-{Data}: {A} {Better} {Approach} by {Applied} {Machine} {Learning}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = may,
  number     = {3},
  pages      = {192},
  volume     = {2},
  doi        = {10.1007/s42979-021-00569-w},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\P7BAB3QQ\\Singh and Gowdar - 2021 - Searching String in Big-Data A Better Approach by.pdf:application/pdf},
  language   = {en},
  shorttitle = {Searching {String} in {Big}-{Data}},
  url        = {https://link.springer.com/10.1007/s42979-021-00569-w},
  urldate    = {2021-10-24},
}

@Article{Ashfaq2021,
  author   = {Ashfaq, Fariha and Bajwa, Imran Sarwar},
  journal  = {Automated Software Engineering},
  title    = {Natural language ambiguity resolution by intelligent semantic annotation of software requirements},
  year     = {2021},
  issn     = {0928-8910, 1573-7535},
  month    = nov,
  number   = {2},
  pages    = {13},
  volume   = {28},
  doi      = {10.1007/s10515-021-00291-0},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10515-021-00291-0},
  urldate  = {2021-10-24},
}

@Article{Bessghaier2021,
  author   = {Bessghaier, Narjes and Ouni, Ali and Mkaouer, Mohamed Wiem},
  journal  = {Software Quality Journal},
  title    = {A longitudinal exploratory study on code smells in server side web applications},
  year     = {2021},
  issn     = {0963-9314, 1573-1367},
  month    = aug,
  doi      = {10.1007/s11219-021-09567-w},
  language = {en},
  url      = {https://link.springer.com/10.1007/s11219-021-09567-w},
  urldate  = {2021-10-24},
}

@Article{Akiki2021,
  author     = {Akiki, Pierre A. and Maalouf, Hoda W.},
  journal    = {Software and Systems Modeling},
  title      = {{CHECKSUM}: tracking changes and measuring contributions in cooperative systems modeling},
  year       = {2021},
  issn       = {1619-1366, 1619-1374},
  month      = aug,
  number     = {4},
  pages      = {1079--1122},
  volume     = {20},
  doi        = {10.1007/s10270-020-00840-3},
  language   = {en},
  shorttitle = {{CHECKSUM}},
  url        = {https://link.springer.com/10.1007/s10270-020-00840-3},
  urldate    = {2021-10-24},
}

@Article{Wijerathna2022,
  author   = {Wijerathna, Laksri and Aleti, Aldeida and Bi, Tingting and Tang, Antony},
  journal  = {Empirical Software Engineering},
  title    = {Mining and relating design contexts and design patterns from {Stack} {Overflow}},
  year     = {2022},
  issn     = {1382-3256, 1573-7616},
  month    = jan,
  number   = {1},
  pages    = {8},
  volume   = {27},
  doi      = {10.1007/s10664-021-10034-0},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-10034-0},
  urldate  = {2021-10-24},
}

@Article{Wang2021d,
  author     = {Wang, Yi and Redmiles, David},
  journal    = {Automated Software Engineering},
  title      = {{IIAG}: a data-driven and theory-inspired approach for advising how to interact with new remote collaborators in {OSS} teams},
  year       = {2021},
  issn       = {0928-8910, 1573-7535},
  month      = nov,
  number     = {2},
  pages      = {5},
  volume     = {28},
  doi        = {10.1007/s10515-021-00283-0},
  language   = {en},
  shorttitle = {{IIAG}},
  url        = {https://link.springer.com/10.1007/s10515-021-00283-0},
  urldate    = {2021-10-24},
}

@Article{Samhi2021,
  author   = {Samhi, Jordan and Allix, Kevin and Bissyandé, Tegawendé F. and Klein, Jacques},
  journal  = {Empirical Software Engineering},
  title    = {A first look at {Android} applications in {Google} {Play} related to {COVID}-19},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = jul,
  number   = {4},
  pages    = {57},
  volume   = {26},
  abstract = {Abstract
            Due to the convenience of access-on-demand to information and business solutions, mobile apps have become an important asset in the digital world. In the context of the COVID-19 pandemic, app developers have joined the response effort in various ways by releasing apps that target different user bases (e.g., all citizens or journalists), offer different services (e.g., location tracking or diagnostic-aid), provide generic or specialized information, etc. While many apps have raised some concerns by spreading misinformation or even malware, the literature does not yet provide a clear landscape of the different apps that were developed. In this study, we focus on the Android ecosystem and investigate Covid-related Android apps. In a best-effort scenario, we attempt to systematically identify all relevant apps and study their characteristics with the objective to provide a first taxonomy of Covid-related apps, broadening the relevance beyond the implementation of contact tracing. Overall, our study yields a number of empirical insights that contribute to enlarge the knowledge on Covid-related apps: (1) Developer communities contributed rapidly to the COVID-19, with dedicated apps released as early as January 2020; (2) Covid-related apps deliver digital tools to users (e.g., health diaries), serve to broadcast information to users (e.g., spread statistics), and collect data from users (e.g., for tracing); (3) Covid-related apps are less complex than standard apps; (4) they generally do not seem to leak sensitive data; (5) in the majority of cases, Covid-related apps are released by entities with past experience on the market, mostly official government entities or public health organizations.},
  doi      = {10.1007/s10664-021-09943-x},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\FRZTE94B\\Samhi et al. - 2021 - A first look at Android applications in Google Pla.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-09943-x},
  urldate  = {2021-10-24},
}

@Article{Hassan2021,
  author   = {Hassan, Hassan B. and Barakat, Saman A. and Sarhan, Qusay I.},
  journal  = {Journal of Cloud Computing},
  title    = {Survey on serverless computing},
  year     = {2021},
  issn     = {2192-113X},
  month    = dec,
  number   = {1},
  pages    = {39},
  volume   = {10},
  abstract = {Abstract
            Serverless computing has gained importance over the last decade as an exciting new field, owing to its large influence in reducing costs, decreasing latency, improving scalability, and eliminating server-side management, to name a few. However, to date there is a lack of in-depth survey that would help developers and researchers better understand the significance of serverless computing in different contexts. Thus, it is essential to present research evidence that has been published in this area. In this systematic survey, 275 research papers that examined serverless computing from well-known literature databases were extensively reviewed to extract useful data. Then, the obtained data were analyzed to answer several research questions regarding state-of-the-art contributions of serverless computing, its concepts, its platforms, its usage, etc. We moreover discuss the challenges that serverless computing faces nowadays and how future research could enable its implementation and usage.},
  doi      = {10.1186/s13677-021-00253-7},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\4QZJVGWE\\Hassan et al. - 2021 - Survey on serverless computing.pdf:application/pdf},
  language = {en},
  url      = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-021-00253-7},
  urldate  = {2021-10-24},
}

@Article{SanchezFerreres2021,
  author   = {Sànchez-Ferreres, Josep and Burattin, Andrea and Carmona, Josep and Montali, Marco and Padró, Lluís and Quishpi, Luís},
  journal  = {Software and Systems Modeling},
  title    = {Unleashing textual descriptions of business processes},
  year     = {2021},
  issn     = {1619-1366, 1619-1374},
  month    = may,
  doi      = {10.1007/s10270-021-00886-x},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10270-021-00886-x},
  urldate  = {2021-10-24},
}

@Article{LopezMartin2021,
  author   = {López-Martín, Cuauhtémoc},
  journal  = {Software Quality Journal},
  title    = {Machine learning techniques for software testing effort prediction},
  year     = {2021},
  issn     = {0963-9314, 1573-1367},
  month    = feb,
  doi      = {10.1007/s11219-020-09545-8},
  language = {en},
  url      = {http://link.springer.com/10.1007/s11219-020-09545-8},
  urldate  = {2021-10-24},
}

@Article{AlHawari2021,
  author   = {Al-Hawari, Assem and Najadat, Hassan and Shatnawi, Raed},
  journal  = {Software Quality Journal},
  title    = {Classification of application reviews into software maintenance tasks using data mining techniques},
  year     = {2021},
  issn     = {0963-9314, 1573-1367},
  month    = sep,
  number   = {3},
  pages    = {667--703},
  volume   = {29},
  doi      = {10.1007/s11219-020-09529-8},
  language = {en},
  url      = {https://link.springer.com/10.1007/s11219-020-09529-8},
  urldate  = {2021-10-24},
}

@Article{Amit2021,
  author     = {Amit, Idan and Feitelson, Dror G.},
  journal    = {Software Quality Journal},
  title      = {Corrective commit probability: a measure of the effort invested in bug fixing},
  year       = {2021},
  issn       = {0963-9314, 1573-1367},
  month      = aug,
  doi        = {10.1007/s11219-021-09564-z},
  language   = {en},
  shorttitle = {Corrective commit probability},
  url        = {https://link.springer.com/10.1007/s11219-021-09564-z},
  urldate    = {2021-10-24},
}

@Article{Tahir2021,
  author     = {Tahir, Amjed and Bennin, Kwabena E. and Xiao, Xun and MacDonell, Stephen G.},
  journal    = {Empirical Software Engineering},
  title      = {Does class size matter? {An} in-depth assessment of the effect of class size in software defect prediction},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = sep,
  number     = {5},
  pages      = {106},
  volume     = {26},
  doi        = {10.1007/s10664-021-09991-3},
  file       = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\UJUNJAYV\\Tahir et al. - 2021 - Does class size matter An in-depth assessment of .pdf:application/pdf},
  language   = {en},
  shorttitle = {Does class size matter?},
  url        = {https://link.springer.com/10.1007/s10664-021-09991-3},
  urldate    = {2021-10-24},
}

@Article{DiRocco2021,
  author     = {Di Rocco, Juri and Di Ruscio, Davide and Di Sipio, Claudio and Nguyen, Phuong T. and Rubei, Riccardo},
  journal    = {Empirical Software Engineering},
  title      = {Development of recommendation systems for software engineering: the {CROSSMINER} experience},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = jul,
  number     = {4},
  pages      = {69},
  volume     = {26},
  abstract   = {Abstract
            To perform their daily tasks, developers intensively make use of existing resources by consulting open source software (OSS) repositories. Such platforms contain rich data sources, e.g., code snippets, documentations, and user discussions, that can be useful for supporting development activities. Over the last decades, several techniques and tools have been promoted to provide developers with innovative features, aiming to bring in improvements in terms of development effort, cost savings, and productivity. In the context of the EU H2020 CROSSMINER project, a set of recommendation systems has been conceived to assist software programmers in different phases of the development process. The systems provide developers with various artifacts, such as third-party libraries, documentation about how to use the APIs being adopted, or relevant API function calls. To develop such recommendations, various technical choices have been made to overcome issues related to several aspects including the lack of baselines, limited data availability, decisions about the performance measures, and evaluation approaches. This paper is an experience report to present the knowledge pertinent to the set of recommendation systems developed through the CROSSMINER project. We explain in detail the challenges we had to deal with, together with the related lessons learned when developing and evaluating these systems. Our aim is to provide the research community with concrete takeaway messages that are expected to be useful for those who want to develop or customize their own recommendation systems. The reported experiences can facilitate interesting discussions and research work, which in the end contribute to the advancement of recommendation systems applied to solve different issues in Software Engineering.},
  doi        = {10.1007/s10664-021-09963-7},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\AY2NI9DE\\Di Rocco et al. - 2021 - Development of recommendation systems for software.pdf:application/pdf},
  language   = {en},
  shorttitle = {Development of recommendation systems for software engineering},
  url        = {https://link.springer.com/10.1007/s10664-021-09963-7},
  urldate    = {2021-10-24},
}

@Article{Shrikanth2021,
  author   = {Shrikanth, N. C. and Nichols, William and Fahid, Fahmid Morshed and Menzies, Tim},
  journal  = {Empirical Software Engineering},
  title    = {Assessing practitioner beliefs about software engineering},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = jul,
  number   = {4},
  pages    = {73},
  volume   = {26},
  doi      = {10.1007/s10664-021-09957-5},
  file     = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\SCSJ4SRI\\Shrikanth et al. - 2021 - Assessing practitioner beliefs about software engi.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-09957-5},
  urldate  = {2021-10-24},
}

@Article{Mashreghi2021,
  author   = {Mashreghi, Ali and King, Valerie},
  journal  = {Distributed Computing},
  title    = {Broadcast and minimum spanning tree with o(m) messages in the asynchronous {CONGEST} model},
  year     = {2021},
  issn     = {0178-2770, 1432-0452},
  month    = aug,
  number   = {4},
  pages    = {283--299},
  volume   = {34},
  doi      = {10.1007/s00446-020-00387-y},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\RW48UZI7\\Mashreghi and King - 2021 - Broadcast and minimum spanning tree with o(m) mess.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s00446-020-00387-y},
  urldate  = {2021-10-24},
}

@Article{Choetkiertikul2021,
  author   = {Choetkiertikul, Morakot and Dam, Hoa Khanh and Tran, Truyen and Pham, Trang and Ragkhitwetsagul, Chaiyong and Ghose, Aditya},
  journal  = {Empirical Software Engineering},
  title    = {Automatically recommending components for issue reports using deep learning},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = mar,
  number   = {2},
  pages    = {14},
  volume   = {26},
  doi      = {10.1007/s10664-020-09898-5},
  language = {en},
  url      = {http://link.springer.com/10.1007/s10664-020-09898-5},
  urldate  = {2021-10-24},
}

@Article{Feuilloley2021,
  author   = {Feuilloley, Laurent and Fraigniaud, Pierre and Hirvonen, Juho and Paz, Ami and Perry, Mor},
  journal  = {Distributed Computing},
  title    = {Redundancy in distributed proofs},
  year     = {2021},
  issn     = {0178-2770, 1432-0452},
  month    = apr,
  number   = {2},
  pages    = {113--132},
  volume   = {34},
  abstract = {Abstract
            
              Distributed proofs are mechanisms that enable the nodes of a network to collectively and efficiently check the correctness of Boolean predicates on the structure of the network (e.g., having a specific diameter), or on objects distributed over the nodes (e.g., a spanning tree). We consider well known mechanisms consisting of two components: a
              prover
              that assigns a
              certificate
              to each node, and a distributed algorithm called a
              verifier
              that is in charge of verifying the distributed proof formed by the collection of all certificates. We show that many network predicates have distributed proofs offering a high level of redundancy, explicitly or implicitly. We use this remarkable property of distributed proofs to establish perfect tradeoffs between the
              size of the certificate
              stored at every node, and the
              number of rounds
              of the verification protocol.},
  doi      = {10.1007/s00446-020-00386-z},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\M53VBTXA\\Feuilloley et al. - 2021 - Redundancy in distributed proofs.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s00446-020-00386-z},
  urldate  = {2021-10-24},
}

@Article{MahdaviHezaveh2021,
  author     = {Mahdavi-Hezaveh, Rezvan and Dremann, Jacob and Williams, Laurie},
  journal    = {Empirical Software Engineering},
  title      = {Software development with feature toggles: practices used by practitioners},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = jan,
  number     = {1},
  pages      = {1},
  volume     = {26},
  doi        = {10.1007/s10664-020-09901-z},
  file       = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\4HYF7KAB\\Mahdavi-Hezaveh et al. - 2021 - Software development with feature toggles practic.pdf:application/pdf},
  language   = {en},
  shorttitle = {Software development with feature toggles},
  url        = {http://link.springer.com/10.1007/s10664-020-09901-z},
  urldate    = {2021-10-24},
}

@Article{Aleti2021,
  author     = {Aleti, Aldeida and Martinez, Matias},
  journal    = {Empirical Software Engineering},
  title      = {E-{APR}: {Mapping} the effectiveness of automated program repair techniques},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = sep,
  number     = {5},
  pages      = {99},
  volume     = {26},
  doi        = {10.1007/s10664-021-09989-x},
  language   = {en},
  shorttitle = {E-{APR}},
  url        = {https://link.springer.com/10.1007/s10664-021-09989-x},
  urldate    = {2021-10-24},
}

@Article{Kim2021b,
  author     = {Kim, Misoo and Lee, Eunseok},
  journal    = {Empirical Software Engineering},
  title      = {Are datasets for information retrieval-based bug localization techniques trustworthy?: {Impact} analysis of bug types on {IRBL}},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = may,
  number     = {3},
  pages      = {35},
  volume     = {26},
  doi        = {10.1007/s10664-021-09946-8},
  language   = {en},
  shorttitle = {Are datasets for information retrieval-based bug localization techniques trustworthy?},
  url        = {https://link.springer.com/10.1007/s10664-021-09946-8},
  urldate    = {2021-10-24},
}

@Article{Rani2021,
  author     = {Rani, Pooja and Panichella, Sebastiano and Leuenberger, Manuel and Ghafari, Mohammad and Nierstrasz, Oscar},
  journal    = {Empirical Software Engineering},
  title      = {What do class comments tell us? {An} investigation of comment evolution and practices in {Pharo} {Smalltalk}},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = nov,
  number     = {6},
  pages      = {112},
  volume     = {26},
  abstract   = {Abstract
            
              Context
              Previous studies have characterized code comments in various programming languages, showing how high quality of code comments is crucial to support program comprehension activities, and to improve the effectiveness of maintenance tasks. However, very few studies have focused on understanding developer practices to write comments. None of them has compared such developer practices to the standard comment guidelines to study the extent to which developers follow the guidelines.
            
            
              Objective
              Therefore, our goal is to investigate developer commenting practices and compare them to the comment guidelines.
            
            
              Method
              
                This paper reports the first empirical study investigating commenting practices in Pharo Smalltalk. First, we analyze class comment evolution over seven Pharo versions. Then, we quantitatively and qualitatively investigate the information types embedded in class comments. Finally, we study the adherence of developer commenting practices to the official
                class comment template
                over Pharo versions.
              
            
            
              Results
              Our results show that there is a rapid increase in class comments in the initial three Pharo versions, while in subsequent versions developers added comments to both new and old classes, thus maintaining a similar code to comment ratio. We furthermore found three times as many information types in class comments as those suggested by the template. However, the information types suggested by the template tend to be present more often than other types of information. Additionally, we find that a substantial proportion of comments follow the writing style of the template in writing these information types, but they are written and formatted in a non-uniform way.
            
            
              Conclusion
              The results suggest the need to standardize the commenting guidelines for formatting the text, and to provide headers for the different information types to ensure a consistent style and to identify the information easily. Given the importance of high-quality code comments, we draw numerous implications for developers and researchers to improve the support for comment quality assessment tools.},
  doi        = {10.1007/s10664-021-09981-5},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\Y7KNK4MC\\Rani et al. - 2021 - What do class comments tell us An investigation o.pdf:application/pdf},
  language   = {en},
  shorttitle = {What do class comments tell us?},
  url        = {https://link.springer.com/10.1007/s10664-021-09981-5},
  urldate    = {2021-10-24},
}

@Article{Sangeeta2021,
  author   = {{Sangeeta} and {Sitender} and Sharma, Kapil and Bala, Manju},
  journal  = {Automated Software Engineering},
  title    = {New failure rate model for iterative software development life cycle process},
  year     = {2021},
  issn     = {0928-8910, 1573-7535},
  month    = nov,
  number   = {2},
  pages    = {9},
  volume   = {28},
  doi      = {10.1007/s10515-021-00288-9},
  file     = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\XZS56NFY\\Sangeeta et al. - 2021 - New failure rate model for iterative software deve.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10515-021-00288-9},
  urldate  = {2021-10-24},
}

@Article{Hammoudeh Garcia2021,
  author     = {Hammoudeh García, Nadia and Deshpande, Harshavardhan and Santos, André and Kahl, Björn and Bordignon, Mirko},
  journal    = {Software and Systems Modeling},
  title      = {Bootstrapping {MDE} development from {ROS} manual code: {Part} 2—{Model} generation and leveraging models at runtime},
  year       = {2021},
  issn       = {1619-1366, 1619-1374},
  month      = apr,
  abstract   = {Abstract
            Model-driven engineering (MDE) addresses central aspects of robotics software development. MDE could enable domain experts to leverage the expressiveness of models, while implementation details on different hardware platforms would be handled by automatic code generation. Today, despite strong MDE efforts in the robotics research community, most evidence points to manual code development being the norm. A possible reason for MDE not being accepted by robot software developers could be the wide range of applications and target platforms, which make all-encompassing MDE IDEs hard to develop and maintain. Therefore, we chose to leverage a large corpus of open-source software widely adopted by the robotics community to extract common structures and gain insight on how and where MDE can support the developers to work more efficiently. We pursue modeling as a complement, rather than imposing MDE as separate solution. Our previous work introduced metamodels to describe components, their interactions, and their resulting composition. In this paper, we present two methods based on metamodels for automated generation of models from manually written artifacts: (1) through static code analysis and (2) by monitoring the execution of a running system. For both methods, we present tools that leverage the potentials of our contributions, with a special focus on their application at runtime to observe and diagnose a real system during its execution. A comprehensive example is provided as a walk-through for robotics software practitioners.},
  doi        = {10.1007/s10270-021-00873-2},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\GS2A7L3Z\\Hammoudeh García et al. - 2021 - Bootstrapping MDE development from ROS manual code.pdf:application/pdf},
  language   = {en},
  shorttitle = {Bootstrapping {MDE} development from {ROS} manual code},
  url        = {https://link.springer.com/10.1007/s10270-021-00873-2},
  urldate    = {2021-10-24},
}

@Article{Luna2021a,
  author   = {Luna, Ryan and Islam, Sheikh Ariful},
  journal  = {SN Computer Science},
  title    = {Security and {Reliability} of {Safety}-{Critical} {RTOS}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = sep,
  number   = {5},
  pages    = {356},
  volume   = {2},
  doi      = {10.1007/s42979-021-00753-y},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\QA4QQZD2\\Luna and Islam - 2021 - Security and Reliability of Safety-Critical RTOS.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00753-y},
  urldate  = {2021-10-24},
}

@Article{Granada2021,
  author     = {Granada, David and Vara, Juan M. and Merayo, Mercedes and Marcos, Esperanza},
  journal    = {Software and Systems Modeling},
  title      = {{CEViNEdit}: improving the process of creating cognitively effective graphical editors with {GMF}},
  year       = {2021},
  issn       = {1619-1366, 1619-1374},
  month      = jun,
  number     = {3},
  pages      = {867--895},
  volume     = {20},
  doi        = {10.1007/s10270-020-00833-2},
  language   = {en},
  shorttitle = {{CEViNEdit}},
  url        = {https://link.springer.com/10.1007/s10270-020-00833-2},
  urldate    = {2021-10-24},
}

@Article{Adamo2021,
  author     = {Adamo, Greta and Ghidini, Chiara and Di Francescomarino, Chiara},
  journal    = {Software and Systems Modeling},
  title      = {What is a process model composed of?: {A} systematic literature review of meta-models in {BPM}},
  year       = {2021},
  issn       = {1619-1366, 1619-1374},
  month      = aug,
  number     = {4},
  pages      = {1215--1243},
  volume     = {20},
  doi        = {10.1007/s10270-020-00847-w},
  language   = {en},
  shorttitle = {What is a process model composed of?},
  url        = {https://link.springer.com/10.1007/s10270-020-00847-w},
  urldate    = {2021-10-24},
}

@Article{Fan2021,
  author   = {Fan, Yuanrui and Xia, Xin and Lo, David and Hassan, Ahmed E. and Li, Shanping},
  journal  = {Empirical Software Engineering},
  title    = {What makes a popular academic {AI} repository?},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = jan,
  number   = {1},
  pages    = {2},
  volume   = {26},
  doi      = {10.1007/s10664-020-09916-6},
  file     = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\2QB93LZH\\Fan et al. - 2021 - What makes a popular academic AI repository.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s10664-020-09916-6},
  urldate  = {2021-10-24},
}

@Article{Zhou2021,
  author   = {Zhou, Naweiluo and Georgiou, Yiannis and Pospieszny, Marcin and Zhong, Li and Zhou, Huan and Niethammer, Christoph and Pejak, Branislav and Marko, Oskar and Hoppe, Dennis},
  journal  = {Journal of Cloud Computing},
  title    = {Container orchestration on {HPC} systems through {Kubernetes}},
  year     = {2021},
  issn     = {2192-113X},
  month    = dec,
  number   = {1},
  pages    = {16},
  volume   = {10},
  abstract = {Abstract
            
              Containerisation demonstrates its efficiency in application deployment in Cloud Computing. Containers can encapsulate complex programs with their dependencies in isolated environments making applications more portable, hence are being adopted in High Performance Computing (HPC) clusters.
              Singularity
              , initially designed for HPC systems, has become their
              de facto
              standard container runtime. Nevertheless, conventional HPC workload managers lack micro-service support and deeply-integrated container management, as opposed to container orchestrators. We introduce a Torque-Operator which serves as a bridge between HPC workload manager (TORQUE) and container orchestrator (Kubernetes). We propose a hybrid architecture that integrates HPC and Cloud clusters seamlessly with little interference to HPC systems where container orchestration is performed on two levels.},
  doi      = {10.1186/s13677-021-00231-z},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\WGEA2MH3\\Zhou et al. - 2021 - Container orchestration on HPC systems through Kub.pdf:application/pdf},
  language = {en},
  url      = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-021-00231-z},
  urldate  = {2021-10-24},
}

@Article{CabreraLozoya2021,
  author     = {Cabrera Lozoya, Rocío and Baumann, Arnaud and Sabetta, Antonino and Bezzi, Michele},
  journal    = {SN Computer Science},
  title      = {{Commit2Vec}: {Learning} {Distributed} {Representations} of {Code} {Changes}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = may,
  number     = {3},
  pages      = {150},
  volume     = {2},
  doi        = {10.1007/s42979-021-00566-z},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\DBLZZQRF\\Cabrera Lozoya et al. - 2021 - Commit2Vec Learning Distributed Representations o.pdf:application/pdf},
  language   = {en},
  shorttitle = {{Commit2Vec}},
  url        = {https://link.springer.com/10.1007/s42979-021-00566-z},
  urldate    = {2021-10-24},
}

@Article{NgongaNgomo2021,
  author     = {Ngonga Ngomo, Axel-Cyrille and Sherif, Mohamed Ahmed and Georgala, Kleanthi and Hassan, Mofeed Mohamed and Dreßler, Kevin and Lyko, Klaus and Obraczka, Daniel and Soru, Tommaso},
  journal    = {KI - Künstliche Intelligenz},
  title      = {{LIMES}: {A} {Framework} for {Link} {Discovery} on the {Semantic} {Web}},
  year       = {2021},
  issn       = {0933-1875, 1610-1987},
  month      = mar,
  abstract   = {Abstract
            
              The Linked Data paradigm builds upon the backbone of distributed knowledge bases connected by typed links. The mere volume of current knowledge bases as well as their sheer number pose two major challenges when aiming to support the computation of links across and within them. The first is that tools for link discovery have to be time-efficient when they compute links. Secondly, these tools have to produce links of high quality to serve the applications built upon Linked Data well. Solutions to the second problem build upon efficient computational approaches developed to solve the first and combine these with dedicated machine learning techniques. The current version of the
              Limes
              framework is the product of seven years of research on these two challenges. A series of machine learning techniques and efficient computation approaches were developed and integrated into this framework to address the link discovery problem. The framework combines these diverse algorithms within a generic and extensible architecture. In this article, we give an overview of version 1.7.4 of the open-source release of the framework. In particular, we focus on an overview of the architecture of the framework, an intuition of its inner workings and a brief overview of the approaches it contains. Some descriptions of the applications within which the framework was used complete the paper. Our framework is open-source and available under a GNU license at
              https://github.com/dice-group/LIMES
              together with a user manual and a developer manual.},
  doi        = {10.1007/s13218-021-00713-x},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\QR49JH69\\Ngonga Ngomo et al. - 2021 - LIMES A Framework for Link Discovery on the Seman.pdf:application/pdf},
  language   = {en},
  shorttitle = {{LIMES}},
  url        = {http://link.springer.com/10.1007/s13218-021-00713-x},
  urldate    = {2021-10-24},
}

@Article{Priyadarshini2021,
  author   = {Priyadarshini, Ishaani and Kumar, Raghvendra and Tuan, Le Minh and Son, Le Hoang and Long, Hoang Viet and Sharma, Rohit and Rai, Sakshi},
  journal  = {SICS Software-Intensive Cyber-Physical Systems},
  title    = {A new enhanced cyber security framework for medical cyber physical systems},
  year     = {2021},
  issn     = {2524-8510, 2524-8529},
  month    = mar,
  doi      = {10.1007/s00450-021-00427-3},
  language = {en},
  url      = {http://link.springer.com/10.1007/s00450-021-00427-3},
  urldate  = {2021-10-24},
}

@Article{Faieq2021,
  author   = {Faieq, Soufiane and Saidi, Rajaa and El Ghazi, Hamid and Front, Agnès and Rahmani, Moulay Driss},
  journal  = {Service Oriented Computing and Applications},
  title    = {Building adaptive context-aware service-based smart systems},
  year     = {2021},
  issn     = {1863-2386, 1863-2394},
  month    = mar,
  number   = {1},
  pages    = {21--42},
  volume   = {15},
  doi      = {10.1007/s11761-020-00310-0},
  language = {en},
  url      = {http://link.springer.com/10.1007/s11761-020-00310-0},
  urldate  = {2021-10-24},
}

@Article{Rocha2021,
  author   = {Rocha, Mauricio and Simão, Adenilso and Sousa, Thiago},
  journal  = {Software Quality Journal},
  title    = {Model-based test case generation from {UML} sequence diagrams using extended finite state machines},
  year     = {2021},
  issn     = {0963-9314, 1573-1367},
  month    = sep,
  number   = {3},
  pages    = {597--627},
  volume   = {29},
  doi      = {10.1007/s11219-020-09531-0},
  language = {en},
  url      = {https://link.springer.com/10.1007/s11219-020-09531-0},
  urldate  = {2021-10-24},
}

@Article{Bartocci2021,
  author     = {Bartocci, Ezio and Manjunath, Niveditha and Mariani, Leonardo and Mateis, Cristinel and Ničković, Dejan},
  journal    = {International Journal on Software Tools for Technology Transfer},
  title      = {{CPSDebug}: {Automatic} failure explanation in {CPS} models},
  year       = {2021},
  issn       = {1433-2779, 1433-2787},
  month      = jan,
  abstract   = {Abstract
            Debugging cyber-physical system (CPS) models is a cumbersome and costly activity. CPS models combine continuous and discrete dynamics—a fault in a physical component manifests itself in a very different way than a fault in a state machine. Furthermore, faults can propagate both in time and space before they can be detected at the observable interface of the model. As a consequence, explaining the reason of an observed failure is challenging and often requires domain-specific knowledge. In this paper, we propose approach, a novel CPSDebug that combines testing, specification mining, and failure analysis, to automatically explain failures in Simulink/Stateflow models. In particular, we address the hybrid nature of CPS models by using different methods to infer properties from continuous and discrete state variables of the model. We evaluate CPSDebug on two case studies, involving two main scenarios and several classes of faults, demonstrating the potential value of our approach.},
  doi        = {10.1007/s10009-020-00599-4},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\RUPEBWU3\\Bartocci et al. - 2021 - CPSDebug Automatic failure explanation in CPS mod.pdf:application/pdf},
  language   = {en},
  shorttitle = {{CPSDebug}},
  url        = {http://link.springer.com/10.1007/s10009-020-00599-4},
  urldate    = {2021-10-24},
}

@Article{Nicolau2021,
  author   = {Nicolau, Miguel and Agapitos, Alexandros},
  journal  = {Genetic Programming and Evolvable Machines},
  title    = {Choosing function sets with better generalisation performance for symbolic regression models},
  year     = {2021},
  issn     = {1389-2576, 1573-7632},
  month    = mar,
  number   = {1},
  pages    = {73--100},
  volume   = {22},
  doi      = {10.1007/s10710-020-09391-4},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10710-020-09391-4},
  urldate  = {2021-10-24},
}

@Article{Alhawi2021,
  author   = {Alhawi, Omar M. and Rocha, Herbert and Gadelha, Mikhail R. and Cordeiro, Lucas C. and Batista, Eddie},
  journal  = {International Journal on Software Tools for Technology Transfer},
  title    = {Verification and refutation of {C} programs based on k-induction and invariant inference},
  year     = {2021},
  issn     = {1433-2779, 1433-2787},
  month    = apr,
  number   = {2},
  pages    = {115--135},
  volume   = {23},
  abstract = {Abstract
            
              DepthK is a source-to-source transformation tool that employs bounded model checking (BMC) to verify and falsify safety properties in single- and multi-threaded C programs, without manual annotation of loop invariants. Here, we describe and evaluate a proof-by-induction algorithm that combines
              k
              -induction with invariant inference to prove and refute safety properties. We apply two invariant generators to produce program invariants and feed these into a
              k
              -induction-based verification algorithm implemented in DepthK, which uses the efficient SMT-based context-bounded model checker (ESBMC) as sequential verification back-end. A set of C benchmarks from the International Competition on Software Verification (SV-COMP) and embedded-system applications extracted from the available literature are used to evaluate the effectiveness of the proposed approach. Experimental results show that
              k
              -induction with invariants can handle a wide variety of safety properties, in typical programs with loops and embedded software applications from the telecommunications, control systems, and medical domains. The results of our comparative evaluation extend the knowledge about approaches that rely on both BMC and
              k
              -induction for software verification, in the following ways. (1) The proposed method outperforms the existing implementations that use
              k
              -induction with an interval-invariant generator (
              e.g.
              , 2LS and ESBMC), in the category ConcurrencySafety, and overcame, in others categories, such as SoftwareSystems, other software verifiers that use plain BMC (
              e.g.
              , CBMC). Also, (2) it is more precise than other verifiers based on the property-directed reachability (PDR) algorithm (
              i.e.
              , SeaHorn, Vvt and CPAchecker-CTIGAR). This way, our methodology demonstrated improvement over existing BMC and
              k
              -induction-based approaches.},
  doi      = {10.1007/s10009-020-00564-1},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\D5F8T5NN\\Alhawi et al. - 2021 - Verification and refutation of C programs based on.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10009-020-00564-1},
  urldate  = {2021-10-24},
}

@Article{Cruciani2021,
  author   = {Cruciani, Emilio and Natale, Emanuele and Nusser, André and Scornavacca, Giacomo},
  journal  = {Distributed Computing},
  title    = {Phase transition of the 2-{Choices} dynamics on core–periphery networks},
  year     = {2021},
  issn     = {0178-2770, 1432-0452},
  month    = jun,
  number   = {3},
  pages    = {207--225},
  volume   = {34},
  abstract = {Abstract
            
              The
              2-Choices
              dynamics is a process that models voting behavior on networks and works as follows: Each agent initially holds either opinion
              blue
              or
              red
              ; then, in each round, each agent looks at two random neighbors and, if the two have the same opinion, the agent adopts it. We study its behavior on a class of networks with core–periphery structure. Assume that a densely-connected subset of agents, the
              core
              , holds a different opinion from the rest of the network, the
              periphery
              . We prove that, depending on the strength of the cut between core and periphery, a phase-transition phenomenon occurs: Either the core’s opinion rapidly spreads across the network, or a
              metastability
              phase takes place in which both opinions coexist for superpolynomial time. The interest of our result, which we also validate with extensive experiments on real networks, is twofold. First, it sheds light on the
              influence
              of the core on the rest of the network as a function of its connectivity toward the latter. Second, it is one of the first analytical results which shows a heterogeneous behavior of a simple dynamics as a function of structural parameters of the network.},
  doi      = {10.1007/s00446-021-00396-5},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\RHSBBCV8\\Cruciani et al. - 2021 - Phase transition of the 2-Choices dynamics on core.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s00446-021-00396-5},
  urldate  = {2021-10-24},
}

@Article{Naqash2021,
  author   = {Naqash, Talha and Shah, Sajjad Hussain and Islam, Muhammad Najam Ul},
  journal  = {International Journal of Parallel Programming},
  title    = {Statistical {Analysis} {Based} {Intrusion} {Detection} {System} for {Ultra}-{High}-{Speed} {Software} {Defined} {Network}},
  year     = {2021},
  issn     = {0885-7458, 1573-7640},
  month    = aug,
  doi      = {10.1007/s10766-021-00715-0},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10766-021-00715-0},
  urldate  = {2021-10-24},
}

@Article{BouGhantous2021,
  author   = {Bou Ghantous, Georges and Gill, Asif Qumer},
  journal  = {SN Computer Science},
  title    = {Evaluating the {DevOps} {Reference} {Architecture} for {Multi}-cloud {IoT}-{Applications}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = apr,
  number   = {2},
  pages    = {123},
  volume   = {2},
  abstract = {Abstract
            DevOps originated in the context of the agile development aims to enable the continuous deployment of software applications in small releases. Most recently, organizations are taking a significant interest in adopting DevOps for automatically deploying IoT applications to multi-cloud. The interest is there; however, the challenge is how to achieve this. A new DevOps reference architecture (DRA) framework has been iteratively developed to address this challenge. This paper presents the updated DRA framework and its empirical evaluation results. The empirical evaluation is composed of two phases: (1) industry case study evaluation conducted in an IT organization, and (2) industry field survey with a cohort of experts in software engineering. The evaluation aims to determine the applicability and novelty of the DRA framework. The evaluation results indicate that the DRA is fit for its intended purpose and is expected to help both researchers and practitioners. The DRA uses can architect complex design models for the purpose of supporting the automated development stage of software applications. Software engineers can implement the DRA models for deploying complex IoT application to the multi-cloud environment in the current organization development parameters.},
  doi      = {10.1007/s42979-021-00519-6},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\M5NE6IZA\\Bou Ghantous and Gill - 2021 - Evaluating the DevOps Reference Architecture for M.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s42979-021-00519-6},
  urldate  = {2021-10-24},
}

@Article{Vidgof2021,
  author   = {Vidgof, Maxim and Djurica, Djordje and Bala, Saimir and Mendling, Jan},
  journal  = {Software and Systems Modeling},
  title    = {Interactive log-delta analysis using multi-range filtering},
  year     = {2021},
  issn     = {1619-1366, 1619-1374},
  month    = sep,
  abstract = {Abstract
            
              Process mining is a family of analytical techniques that extract insights from an event log and present them to an analyst. A key analysis task is to understand the distinctive features of different variants of the process and their impact on process performance. Techniques for log-delta analysis (or variant analysis) put a strong emphasis on automatically extracting explanations for differences between variants. A weakness of them is, however, their limited support for interactively exploring the dividing line between typical and atypical behavior. In this paper, we address this research gap by developing and evaluating an interactive technique for log-delta analysis, which we call
              InterLog
              . This technique is developed based on the idea that the analyst can interactively define filter ranges and that these filters are used to partition the log
              L
              into sub-logs
              
                
                  \$\$L\_1\$\$
                  
                    
                      L
                      1
                    
                  
                
              
              for the selected cases and
              
                
                  \$\$L\_2\$\$
                  
                    
                      L
                      2
                    
                  
                
              
              for the deselected cases. In this way, the analyst can step-by-step explore the log and manually separate the typical behavior from the atypical. We prototypically implement InterLog and demonstrate its application for a real-world event log. Furthermore, we evaluate it in a preliminary design study with process mining experts for usefulness and ease of use.},
  doi      = {10.1007/s10270-021-00902-0},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\74Y567DV\\Vidgof et al. - 2021 - Interactive log-delta analysis using multi-range f.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10270-021-00902-0},
  urldate  = {2021-10-24},
}

@Article{Supreeth2021,
  author     = {R, Supreeth and Kamath, Ajay S and A N, Srinidhi and R, Kumaraswamy},
  journal    = {SN Computer Science},
  title      = {Fully {Responsive} {Image} and {Speech} {Detection} {Artificial} {Yankee} ({FRIDAY}): {Human} {Assistant}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = jul,
  number     = {4},
  pages      = {243},
  volume     = {2},
  doi        = {10.1007/s42979-021-00630-8},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\VISPSKJD\\R et al. - 2021 - Fully Responsive Image and Speech Detection Artifi.pdf:application/pdf},
  language   = {en},
  shorttitle = {Fully {Responsive} {Image} and {Speech} {Detection} {Artificial} {Yankee} ({FRIDAY})},
  url        = {https://link.springer.com/10.1007/s42979-021-00630-8},
  urldate    = {2021-10-24},
}

@Article{Parthasarathy2021,
  author   = {Parthasarathy, R. and Prabhu, E. and Venkatramanan, K. and Gnanasekaran, T.},
  journal  = {CSI Transactions on ICT},
  title    = {Development of educational model of power compensated differential scanning calorimeter ({PC}-{DSC})},
  year     = {2021},
  issn     = {2277-9078, 2277-9086},
  month    = mar,
  number   = {1},
  pages    = {59--70},
  volume   = {9},
  doi      = {10.1007/s40012-020-00320-5},
  language = {en},
  url      = {http://link.springer.com/10.1007/s40012-020-00320-5},
  urldate  = {2021-10-24},
}

@Article{Ye2021,
  author   = {Ye, Kangfeng and Cavalcanti, Ana and Foster, Simon and Miyazawa, Alvaro and Woodcock, Jim},
  journal  = {Software and Systems Modeling},
  title    = {Probabilistic modelling and verification using {RoboChart} and {PRISM}},
  year     = {2021},
  issn     = {1619-1366, 1619-1374},
  month    = oct,
  abstract = {Abstract
            RoboChart is a timed domain-specific language for robotics, distinctive in its support for automated verification by model checking and theorem proving. Since uncertainty is an essential part of robotic systems, we present here an extension to RoboChart to model uncertainty using probabilism. The extension enriches RoboChart state machines with probability through a new construct: probabilistic junctions as the source of transitions with a probability value. RoboChart has an accompanying tool, called RoboTool, for modelling and verification of functional and real-time behaviour. We present here also an automatic technique, implemented in RoboTool, to transform a RoboChart model into a PRISM model for verification. We have extended the property language of RoboTool so that probabilistic properties expressed in temporal logic can be written using controlled natural language.},
  doi      = {10.1007/s10270-021-00916-8},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\WVFXPJWW\\Ye et al. - 2021 - Probabilistic modelling and verification using Rob.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10270-021-00916-8},
  urldate  = {2021-10-24},
}

@Article{Vangipuram2021,
  author     = {Vangipuram, Sukrutha L. T. and Mohanty, Saraju P. and Kougianos, Elias},
  journal    = {SN Computer Science},
  title      = {{CoviChain}: {A} {Blockchain} {Based} {Framework} for {Nonrepudiable} {Contact} {Tracing} in {Healthcare} {Cyber}-{Physical} {Systems} {During} {Pandemic} {Outbreaks}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = sep,
  number     = {5},
  pages      = {346},
  volume     = {2},
  doi        = {10.1007/s42979-021-00746-x},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\TPE672VU\\Vangipuram et al. - 2021 - CoviChain A Blockchain Based Framework for Nonrep.pdf:application/pdf},
  language   = {en},
  shorttitle = {{CoviChain}},
  url        = {https://link.springer.com/10.1007/s42979-021-00746-x},
  urldate    = {2021-10-24},
}

@Article{Dai2021,
  author   = {Dai, H. K. and Su, H. C.},
  journal  = {SN Computer Science},
  title    = {Studies of {Norm}-{Based} {Locality} {Measures} of {Two}-{Dimensional} {Hilbert} {Curves}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = sep,
  number   = {5},
  pages    = {403},
  volume   = {2},
  doi      = {10.1007/s42979-021-00711-8},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\G49FT8MM\\Dai and Su - 2021 - Studies of Norm-Based Locality Measures of Two-Dim.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00711-8},
  urldate  = {2021-10-24},
}

@Article{Singh2021a,
  author   = {Singh, Vandana and Bongiovanni, Brice and Brandon, William},
  journal  = {Software Quality Journal},
  title    = {Codes of conduct in {Open} {Source} {Software}—for warm and fuzzy feelings or equality in community?},
  year     = {2021},
  issn     = {0963-9314, 1573-1367},
  month    = feb,
  doi      = {10.1007/s11219-020-09543-w},
  language = {en},
  url      = {http://link.springer.com/10.1007/s11219-020-09543-w},
  urldate  = {2021-10-24},
}

@Article{Revoredo2021,
  author   = {Revoredo, Kate and Djurica, Djordje and Mendling, Jan},
  journal  = {Empirical Software Engineering},
  title    = {A study into the practice of reporting software engineering experiments},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = nov,
  number   = {6},
  pages    = {113},
  volume   = {26},
  abstract = {Abstract
            It has been argued that reporting software engineering experiments in a standardized way helps researchers find relevant information, understand how experiments were conducted and assess the validity of their results. Various guidelines have been proposed specifically for software engineering experiments. The benefits of such guidelines have often been emphasized, but the actual uptake and practice of reporting have not yet been investigated since the introduction of many of the more recent guidelines. In this research, we utilize a mixed-method study design including sequence analysis techniques for evaluating to which extent papers follow such guidelines. Our study focuses on the four most prominent software engineering journals and the time period from 2000 to 2020. Our results show that many experimental papers miss information suggested by guidelines, that no de facto standard sequence for reporting exists, and that many papers do not cite any guidelines. We discuss these findings and implications for the discipline of experimental software engineering focusing on the review process and the potential to refine and extend guidelines, among others, to account for theory explicitly.},
  doi      = {10.1007/s10664-021-10007-3},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\QA89PM6K\\Revoredo et al. - 2021 - A study into the practice of reporting software en.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-10007-3},
  urldate  = {2021-10-24},
}

@Article{Gote2021,
  author   = {Gote, Christoph and Scholtes, Ingo and Schweitzer, Frank},
  journal  = {Empirical Software Engineering},
  title    = {Analysing {Time}-{Stamped} {Co}-{Editing} {Networks} in {Software} {Development} {Teams} using git2net},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = jul,
  number   = {4},
  pages    = {75},
  volume   = {26},
  abstract = {Abstract
            
              Data from software repositories have become an important foundation for the empirical study of software engineering processes. A recurring theme in the repository mining literature is the inference of developer networks capturing e.g. collaboration, coordination, or communication from the commit history of projects. Many works in this area studied networks of
              co-authorship
              of software artefacts, neglecting detailed information on code changes and code ownership available in software repositories. To address this issue, we introduce , a scalable  software that facilitates the extraction of fine-grained
              co-editing networks
              in large  repositories. It uses text mining techniques to analyse the detailed history of textual modifications
              within
              files. We apply our tool in two case studies using  repositories of multiple Open Source as well as a proprietary software project. Specifically, we use data on more than 1.2 million commits and more than 25,000 developers to test a hypothesis on the relation between developer productivity and co-editing patterns in software teams. We argue that  opens up an important new source of high-resolution data on human collaboration patterns that can be used to advance theory in empirical software engineering, computational social science, and organisational studies.},
  doi      = {10.1007/s10664-020-09928-2},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\4GQKWX5T\\Gote et al. - 2021 - Analysing Time-Stamped Co-Editing Networks in Soft.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-020-09928-2},
  urldate  = {2021-10-24},
}

@Article{Giallorenzo2021,
  author     = {Giallorenzo, Saverio and Mauro, Jacopo and Poulsen, Martin Gyde and Siroky, Filip},
  journal    = {SN Computer Science},
  title      = {Virtualization {Costs}: {Benchmarking} {Containers} and {Virtual} {Machines} {Against} {Bare}-{Metal}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = sep,
  number     = {5},
  pages      = {404},
  volume     = {2},
  doi        = {10.1007/s42979-021-00781-8},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\WCLCU2LG\\Giallorenzo et al. - 2021 - Virtualization Costs Benchmarking Containers and .pdf:application/pdf},
  language   = {en},
  shorttitle = {Virtualization {Costs}},
  url        = {https://link.springer.com/10.1007/s42979-021-00781-8},
  urldate    = {2021-10-24},
}

@Article{Hoyos2021,
  author     = {Hoyos, Juan and Abdalkareem, Rabe and Mujahid, Suhaib and Shihab, Emad and Bedoya, Albeiro Espinosa},
  journal    = {Empirical Software Engineering},
  title      = {On the {Removal} of {Feature} {Toggles}: {A} {Study} of {Python} {Projects} and {Practitioners} {Motivations}},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = mar,
  number     = {2},
  pages      = {15},
  volume     = {26},
  doi        = {10.1007/s10664-020-09902-y},
  language   = {en},
  shorttitle = {On the {Removal} of {Feature} {Toggles}},
  url        = {http://link.springer.com/10.1007/s10664-020-09902-y},
  urldate    = {2021-10-24},
}

@Article{Yang2021b,
  author     = {Yang, Nan and Cuijpers, Pieter and Schiffelers, Ramon and Lukkien, Johan and Serebrenik, Alexander},
  journal    = {Empirical Software Engineering},
  title      = {Single-state state machines in model-driven software engineering: an exploratory study},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = nov,
  number     = {6},
  pages      = {124},
  volume     = {26},
  abstract   = {Abstract
            
              Context
              Models, as the main artifact in model-driven engineering, have been extensively used in the area of embedded systems for code generation and verification. One of the most popular behavioral modeling techniques is the state machine. Many state machine modeling guidelines recommend that a state machine should have more than one state in order to be meaningful. However, single-state state machines (SSSMs) violating this recommendation have been used in modeling cases reported in the literature.
            
            
              Objective
              We aim for understanding the phenomenon of using SSSMs in practice as understanding why developers violate the modeling guidelines is the first step towards improvement of modeling tools and practice.
            
            
              Method
              To study the phenomenon, we conducted an exploratory study which consists of two complementary studies. The first study investigated the prevalence and role of SSSMs in the domain of embedded systems, as well as the reasons why developers use them and their perceived advantages and disadvantages. We employed the sequential explanatory strategy, including repository mining and interview, to study 1500 state machines from 26 components at ASML, a leading company in manufacturing lithography machines from the semiconductor industry. In the second study, we investigated the evolutionary aspects of SSSMs, exploring when SSSMs are introduced to the systems and how developers modify them by mining the largest state-machine-based component from the company.
            
            
              Results
              We observe that 25 out of 26 components contain SSSMs. Our interviews suggest that SSSMs are used to interface with the existing code, to deal with tool limitations, to facilitate maintenance and to ease verification. Our study on the evolutionary aspects of SSSMs reveals that the need for SSSMs to deal with tool limitations grew continuously over the years. Moreover, only a minority of SSSMs have been changed between SSSM and multiple-state state machine (MSSM) during their evolution. The most frequent modifications developers made to SSSMs is inserting events with constraints on the execution of the events.
            
            
              Conclusions
              Based on our results, we provide implications for developers and tool builders. Furthermore, we formulate hypotheses about the effectiveness of SSSMs, the impacts of SSSMs on development, maintenance and verification as well as the evolution of SSSMs.},
  doi        = {10.1007/s10664-021-10015-3},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\5TZBYHYF\\Yang et al. - 2021 - Single-state state machines in model-driven softwa.pdf:application/pdf},
  language   = {en},
  shorttitle = {Single-state state machines in model-driven software engineering},
  url        = {https://link.springer.com/10.1007/s10664-021-10015-3},
  urldate    = {2021-10-24},
}

@Article{Pimentel2021,
  author   = {Pimentel, João Felipe and Murta, Leonardo and Braganholo, Vanessa and Freire, Juliana},
  journal  = {Empirical Software Engineering},
  title    = {Understanding and improving the quality and reproducibility of {Jupyter} notebooks},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = jul,
  number   = {4},
  pages    = {65},
  volume   = {26},
  doi      = {10.1007/s10664-021-09961-9},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\I6S235WS\\Pimentel et al. - 2021 - Understanding and improving the quality and reprod.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-09961-9},
  urldate  = {2021-10-24},
}

@Article{Geng2021,
  author   = {Geng, Tongsheng and Amaris, Marcos and Zuckerman, Stéphane and Goldman, Alfredo and Gao, Guang R. and Gaudiot, Jean-Luc},
  journal  = {International Journal of Parallel Programming},
  title    = {A {Profile}-{Based} {AI}-{Assisted} {Dynamic} {Scheduling} {Approach} for {Heterogeneous} {Architectures}},
  year     = {2021},
  issn     = {0885-7458, 1573-7640},
  month    = aug,
  doi      = {10.1007/s10766-021-00721-2},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10766-021-00721-2},
  urldate  = {2021-10-24},
}

@Article{BenBasat2021,
  author   = {Ben-Basat, Ran and Even, Guy and Kawarabayashi, Ken-ichi and Schwartzman, Gregory},
  journal  = {Distributed Computing},
  title    = {Optimal distributed covering algorithms},
  year     = {2021},
  issn     = {0178-2770, 1432-0452},
  month    = apr,
  abstract = {Abstract
            
              We present a time-optimal deterministic distributed algorithm for approximating a minimum weight vertex cover in hypergraphs of rank
              f
              . This problem is equivalent to the Minimum Weight Set Cover problem in which the frequency of every element is bounded by
              f
              . The approximation factor of our algorithm is
              
                
                  \$\$(f+{\textbackslash}varepsilon )\$\$
                  
                    
                      (
                      f
                      +
                      ε
                      )
                    
                  
                
              
              . Let
              
                
                  \$\${\textbackslash}varDelta \$\$
                  
                    Δ
                  
                
              
              denote the maximum degree in the hypergraph. Our algorithm runs in the
              congest
              model and requires
              
                
                  \$\$O({\textbackslash}log \{{\textbackslash}varDelta \} / {\textbackslash}log {\textbackslash}log {\textbackslash}varDelta )\$\$
                  
                    
                      O
                      (
                      log
                      Δ
                      /
                      log
                      log
                      Δ
                      )
                    
                  
                
              
              rounds, for constants
              
                
                  \$\${\textbackslash}varepsilon {\textbackslash}in (0,1]\$\$
                  
                    
                      ε
                      ∈
                      (
                      0
                      ,
                      1
                      ]
                    
                  
                
              
              and
              
                
                  \$\$f{\textbackslash}in \{{\textbackslash}mathbb \{N\}\}{\textasciicircum}+\$\$
                  
                    
                      f
                      ∈
                      
                        
                          N
                        
                        +
                      
                    
                  
                
              
              . This is the first distributed algorithm for this problem whose running time does not depend on the vertex weights nor the number of vertices. Thus adding another member to the exclusive family of
              provably optimal
              distributed algorithms. For constant values of
              f
              and
              
                
                  \$\${\textbackslash}varepsilon \$\$
                  
                    ε
                  
                
              
              , our algorithm improves over the
              
                
                  \$\$(f+{\textbackslash}varepsilon )\$\$
                  
                    
                      (
                      f
                      +
                      ε
                      )
                    
                  
                
              
              -approximation algorithm of Kuhn et al. (SODA, 2006)whose running time is
              
                
                  \$\$O({\textbackslash}log {\textbackslash}varDelta + {\textbackslash}log W)\$\$
                  
                    
                      O
                      (
                      log
                      Δ
                      +
                      log
                      W
                      )
                    
                  
                
              
              , where
              W
              is the ratio between the largest and smallest vertex weights in the graph. Our algorithm also achieves an
              f
              -approximation for the problem in
              
                
                  \$\$O(f{\textbackslash}log n)\$\$
                  
                    
                      O
                      (
                      f
                      log
                      n
                      )
                    
                  
                
              
              rounds, improving over the classical result of Khuller et al. (J Algorithms, 1994) that achieves a running time of
              
                
                  \$\$O(f{\textbackslash}log {\textasciicircum}2 n)\$\$
                  
                    
                      O
                      (
                      f
                      
                        log
                        2
                      
                      n
                      )
                    
                  
                
              
              . Finally, for weighted vertex cover (
              
                
                  \$\$f=2\$\$
                  
                    
                      f
                      =
                      2
                    
                  
                
              
              ) our algorithm achieves a
              deterministic
              running time of
              
                
                  \$\$O({\textbackslash}log n)\$\$
                  
                    
                      O
                      (
                      log
                      n
                      )
                    
                  
                
              
              , matching the
              randomized
              previously best result of Koufogiannakis and Young (Distrib Comput, 2011). We also show that integer covering-programs can be reduced to the Minimum Weight Set Cover problem in the distributed setting. This allows us to achieve an
              
                
                  \$\$(f{\textbackslash}lceil {\textbackslash}log \_2(M)+1 {\textbackslash}rceil +{\textbackslash}varepsilon )\$\$
                  
                    
                      (
                      f
                      
                        ⌈
                        
                          log
                          2
                        
                        
                          (
                          M
                          )
                        
                        +
                        1
                        ⌉
                      
                      +
                      ε
                      )
                    
                  
                
              
              -approximate integral solution in
              
                
                  \$\${\textbackslash}begin\{aligned\} O{\textbackslash}left( (1+f/{\textbackslash}log n){\textbackslash}cdot {\textbackslash}left( \{{\textbackslash}frac\{{\textbackslash}log {\textbackslash}varDelta \}\{ {\textbackslash}log {\textbackslash}log {\textbackslash}varDelta \} + (\{f{\textbackslash}cdot {\textbackslash}log M\}){\textasciicircum}\{1.01\}{\textbackslash}cdot {\textbackslash}log {\textbackslash}varepsilon {\textasciicircum}\{-1\}{\textbackslash}cdot ({\textbackslash}log {\textbackslash}varDelta ){\textasciicircum}\{0.01\}\}{\textbackslash}right) {\textbackslash}right) {\textbackslash}end\{aligned\}\$\$
                  
                    
                      
                        
                          
                            
                              O
                              
                                
                                  (
                                  1
                                  +
                                  f
                                  /
                                  log
                                  n
                                  )
                                
                                ·
                                
                                  
                                    
                                      
                                        log
                                        Δ
                                      
                                      
                                        log
                                        log
                                        Δ
                                      
                                    
                                    +
                                    
                                      
                                        (
                                        
                                          f
                                          ·
                                          log
                                          M
                                        
                                        )
                                      
                                      
                                        1.01
                                      
                                    
                                    ·
                                    log
                                    
                                      ε
                                      
                                        -
                                        1
                                      
                                    
                                    ·
                                    
                                      
                                        (
                                        log
                                        Δ
                                        )
                                      
                                      
                                        0.01
                                      
                                    
                                  
                                
                              
                            
                          
                        
                      
                    
                  
                
              
              rounds, where
              f
              bounds the number of variables in a constraint,
              
                
                  \$\${\textbackslash}varDelta \$\$
                  
                    Δ
                  
                
              
              bounds the number of constraints a variable appears in, and
              
                
                  \$\$M={\textbackslash}max {\textbackslash}left{\textbackslash}\{ 1, {\textbackslash}lceil 1/a\_\{{\textbackslash}min \} {\textbackslash}rceil {\textbackslash}right{\textbackslash}\} \$\$
                  
                    
                      M
                      =
                      max
                      
                        1
                        ,
                        ⌈
                        1
                        /
                        
                          a
                          min
                        
                        ⌉
                      
                    
                  
                
              
              , where
              
                
                  \$\$a\_\{{\textbackslash}min \}\$\$
                  
                    
                      a
                      min
                    
                  
                
              
              is the smallest normalized constraint coefficient.},
  doi      = {10.1007/s00446-021-00391-w},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\PZC9Q9Y7\\Ben-Basat et al. - 2021 - Optimal distributed covering algorithms.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s00446-021-00391-w},
  urldate  = {2021-10-24},
}

@Article{Sleimi2021,
  author   = {Sleimi, Amin and Sannier, Nicolas and Sabetzadeh, Mehrdad and Briand, Lionel and Ceci, Marcello and Dann, John},
  journal  = {Empirical Software Engineering},
  title    = {An automated framework for the extraction of semantic legal metadata from legal texts},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = may,
  number   = {3},
  pages    = {43},
  volume   = {26},
  doi      = {10.1007/s10664-020-09933-5},
  file     = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\GDLKFV7T\\Sleimi et al. - 2021 - An automated framework for the extraction of seman.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-020-09933-5},
  urldate  = {2021-10-24},
}

@Article{Praitheeshan2021,
  author   = {Praitheeshan, Purathani and Pan, Lei and Doss, Robin},
  journal  = {SN Computer Science},
  title    = {Private and {Trustworthy} {Distributed} {Lending} {Model} {Using} {Hyperledger} {Besu}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = apr,
  number   = {2},
  pages    = {115},
  volume   = {2},
  doi      = {10.1007/s42979-021-00500-3},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\63DS4KVG\\Praitheeshan et al. - 2021 - Private and Trustworthy Distributed Lending Model .pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s42979-021-00500-3},
  urldate  = {2021-10-24},
}

@Article{Ye2021a,
  author   = {Ye, He and Martinez, Matias and Monperrus, Martin},
  journal  = {Empirical Software Engineering},
  title    = {Automated patch assessment for program repair at scale},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = mar,
  number   = {2},
  pages    = {20},
  volume   = {26},
  abstract = {Abstract
            In this paper, we do automatic correctness assessment for patches generated by program repair systems. We consider the human-written patch as ground truth oracle and randomly generate tests based on it, a technique proposed by Shamshiri et al., called Random testing with Ground Truth (RGT) in this paper. We build a curated dataset of 638 patches for Defects4J generated by 14 state-of-the-art repair systems, we evaluate automated patch assessment on this dataset. The results of this study are novel and significant: First, we improve the state of the art performance of automatic patch assessment with RGT by 190\% by improving the oracle; Second, we show that RGT is reliable enough to help scientists to do overfitting analysis when they evaluate program repair systems; Third, we improve the external validity of the program repair knowledge with the largest study ever.},
  doi      = {10.1007/s10664-020-09920-w},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\5QBQSID4\\Ye et al. - 2021 - Automated patch assessment for program repair at s.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s10664-020-09920-w},
  urldate  = {2021-10-24},
}

@Article{Vitui2021,
  author     = {Vitui, Arthur and Chen, Tse-Hsun},
  journal    = {Empirical Software Engineering},
  title      = {{MLASP}: {Machine} learning assisted capacity planning: {An} industrial experience report},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = sep,
  number     = {5},
  pages      = {87},
  volume     = {26},
  doi        = {10.1007/s10664-021-09994-0},
  language   = {en},
  shorttitle = {{MLASP}},
  url        = {https://link.springer.com/10.1007/s10664-021-09994-0},
  urldate    = {2021-10-24},
}

@Article{Gilsing2021,
  author   = {Gilsing, Rick and Wilbik, Anna and Grefen, Paul and Turetken, Oktay and Ozkan, Baris and Adali, Onat Ege and Berkers, Frank},
  journal  = {Software and Systems Modeling},
  title    = {Defining business model key performance indicators using intentional linguistic summaries},
  year     = {2021},
  issn     = {1619-1366, 1619-1374},
  month    = aug,
  number   = {4},
  pages    = {965--996},
  volume   = {20},
  abstract = {Abstract
            To sustain competitiveness in contemporary, fast-paced markets, organizations increasingly focus on innovating their business models to enhance current value propositions or to explore novel sources of value creation. However, business model innovation is a complex task, characterized by shifting characteristics in terms of uncertainty, data availability and its impact on decision making. To cope with such challenges, business model evaluation is advocated to make sense of novel business models and to support decision making. Key performance indicators (KPIs) are frequently used in business model evaluation to structure the performance assessment of these models and to evaluate their strategic implications, in turn aiding business model decision making. However, given the shifting characteristics of the innovation process, the application and effectiveness of KPIs depend significantly on how such KPIs are defined. The techniques proposed in the existing literature typically generate or use quantitatively oriented KPIs, which are not well-suited for the early phases of the business model innovation process. Therefore, following a design science research methodology, we have developed a novel method for defining business model KPIs, taking into account the characteristics of the innovation process, offering holistic support toward decision making. Building on theory on linguistic summarization, we use a set of structured templates to define qualitative KPIs that are suitable to support early-phase decision making. In addition, we show how these KPIs can be gradually quantified to support later phases of the innovation process. We have evaluated our method by applying it in two real-life business cases, interviewing 13 industry experts to assess its utility.},
  doi      = {10.1007/s10270-021-00894-x},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\NUEUIUGE\\Gilsing et al. - 2021 - Defining business model key performance indicators.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10270-021-00894-x},
  urldate  = {2021-10-24},
}

@Article{Uddin2021,
  author   = {Uddin, Gias and Sabir, Fatima and Guéhéneuc, Yann-Gaël and Alam, Omar and Khomh, Foutse},
  journal  = {Empirical Software Engineering},
  title    = {An empirical study of {IoT} topics in {IoT} developer discussions on {Stack} {Overflow}},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = nov,
  number   = {6},
  pages    = {121},
  volume   = {26},
  doi      = {10.1007/s10664-021-10021-5},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-10021-5},
  urldate  = {2021-10-24},
}

@Article{Xing2021a,
  author   = {Xing, Biao and Wang, DanDan and Yang, Yongquan and Wei, Zhiqiang and Wu, Jiajing and He, Cuihua},
  journal  = {International Journal of Parallel Programming},
  title    = {Accelerating {DES} and {AES} {Algorithms} for a {Heterogeneous} {Many}-core {Processor}},
  year     = {2021},
  issn     = {0885-7458, 1573-7640},
  month    = jun,
  number   = {3},
  pages    = {463--486},
  volume   = {49},
  doi      = {10.1007/s10766-021-00692-4},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10766-021-00692-4},
  urldate  = {2021-10-24},
}

@Article{Ernst2021,
  author   = {Ernst, Neil A. and Carver, Jeffrey C. and Mendez, Daniel and Torchiano, Marco},
  journal  = {Empirical Software Engineering},
  title    = {Understanding peer review of software engineering papers},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = sep,
  number   = {5},
  pages    = {103},
  volume   = {26},
  doi      = {10.1007/s10664-021-10005-5},
  file     = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\7LJ9G9PA\\Ernst et al. - 2021 - Understanding peer review of software engineering .pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-10005-5},
  urldate  = {2021-10-24},
}

@Article{Haakman2021,
  author     = {Haakman, Mark and Cruz, Luís and Huijgens, Hennie and van Deursen, Arie},
  journal    = {Empirical Software Engineering},
  title      = {{AI} lifecycle models need to be revised: {An} exploratory study in {Fintech}},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = sep,
  number     = {5},
  pages      = {95},
  volume     = {26},
  abstract   = {Abstract
            
              Tech-leading organizations are embracing the forthcoming artificial intelligence revolution. Intelligent systems are replacing and cooperating with traditional software components. Thus, the same development processes and standards in software engineering ought to be complied in artificial intelligence systems. This study aims to understand the processes by which artificial intelligence-based systems are developed and how state-of-the-art lifecycle models fit the current needs of the industry. We conducted an exploratory case study at ING, a global bank with a strong European base. We interviewed 17 people with different roles and from different departments within the organization. We have found that the following stages have been overlooked by previous lifecycle models:
              data collection
              ,
              feasibility study
              ,
              documentation
              ,
              model monitoring
              , and
              model risk assessment
              . Our work shows that the real challenges of applying Machine Learning go much beyond sophisticated learning algorithms – more focus is needed on the entire lifecycle. In particular, regardless of the existing development tools for Machine Learning, we observe that they are still not meeting the particularities of this field.},
  doi        = {10.1007/s10664-021-09993-1},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\GRMB65PP\\Haakman et al. - 2021 - AI lifecycle models need to be revised An explora.pdf:application/pdf},
  language   = {en},
  shorttitle = {{AI} lifecycle models need to be revised},
  url        = {https://link.springer.com/10.1007/s10664-021-09993-1},
  urldate    = {2021-10-24},
}

@Article{Hasan2021,
  author     = {Hasan, Masum and Iqbal, Anindya and Islam, Mohammad Rafid Ul and Rahman, A.J.M. Imtiajur and Bosu, Amiangshu},
  journal    = {Empirical Software Engineering},
  title      = {Using a balanced scorecard to identify opportunities to improve code review effectiveness: an industrial experience report},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = nov,
  number     = {6},
  pages      = {129},
  volume     = {26},
  doi        = {10.1007/s10664-021-10038-w},
  file       = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\FANA6QTX\\Hasan et al. - 2021 - Using a balanced scorecard to identify opportuniti.pdf:application/pdf},
  language   = {en},
  shorttitle = {Using a balanced scorecard to identify opportunities to improve code review effectiveness},
  url        = {https://link.springer.com/10.1007/s10664-021-10038-w},
  urldate    = {2021-10-24},
}

@Article{Qaddoura2021,
  author     = {Qaddoura, Raneem and Faris, Hossam and Aljarah, Ibrahim and Castillo, Pedro A.},
  journal    = {SN Computer Science},
  title      = {{EvoCluster}: {An} {Open}-{Source} {Nature}-{Inspired} {Optimization} {Clustering} {Framework}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = may,
  number     = {3},
  pages      = {185},
  volume     = {2},
  doi        = {10.1007/s42979-021-00511-0},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\M7WXXCIE\\Qaddoura et al. - 2021 - EvoCluster An Open-Source Nature-Inspired Optimiz.pdf:application/pdf},
  language   = {en},
  shorttitle = {{EvoCluster}},
  url        = {https://link.springer.com/10.1007/s42979-021-00511-0},
  urldate    = {2021-10-24},
}

@Article{Mohamed2021,
  author   = {Mohamed, Aya and Auer, Dagmar and Hofer, Daniel and Küng, Josef},
  journal  = {SN Computer Science},
  title    = {Extended {Authorization} {Policy} for {Graph}-{Structured} {Data}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = sep,
  number   = {5},
  pages    = {351},
  volume   = {2},
  abstract = {Abstract
            The high increase in the use of graph databases also for business- and privacy-critical applications demands for a sophisticated, flexible, fine-grained authorization and access control (AC) approach. Attribute-based access control (ABAC) supports a fine-grained definition of authorization rules and policies. Attributes can be associated with the subject, the requested resource and action, but also the environment. Thus, this is a promising starting point. However, specific characteristics of graph-structured data, such as attributes on vertices and edges along a path from a given subject to the resource to be accessed, are not yet considered. The well-established eXtensible Access Control Markup Language (XACML), which defines a declarative language for fine-grained, attribute-based authorization policies, is the basis for our proposed approach—XACML for Graph-structured data (XACML4G). The additional path-specific constraints, described in graph patterns, demand for specialized processing of the rules and policies as well as adapted enforcement and decision-making in the access control process. To demonstrate XACML4G and its enforcement process, we present a scenario from the university domain. Due to the project’s environment, the prototype is built with the multi-model database ArangoDB. Finally, compliance of XACML4G with quality standards for access control systems administration and enforcement is assessed. The results are promising and further studies concerning performance and use in practice are planned.},
  doi      = {10.1007/s42979-021-00684-8},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\E2KPJSUQ\\Mohamed et al. - 2021 - Extended Authorization Policy for Graph-Structured.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00684-8},
  urldate  = {2021-10-24},
}

@Article{MosseboTcheunteu2021,
  author   = {Mossebo Tcheunteu, Stéphane Willy and Moyou Metcheka, Leonel and Ndoundam, René},
  journal  = {Journal of Cloud Computing},
  title    = {Distributed data hiding in a single cloud storage environment},
  year     = {2021},
  issn     = {2192-113X},
  month    = dec,
  number   = {1},
  pages    = {43},
  volume   = {10},
  abstract = {Abstract
            Distributed steganography is an approach to concealing the secret in several files, leaving fewer traces than the classical approach. Recent work proposed by Moyou and Ndoumdan have improved this approach by preserving the integrity of these files in a multi-cloud storage environment. However, the approach requires a large size of the stego-key and the management of several cloud storage environments. Our contribution consists is to improve this approach by using a single cloud storage environment and reducing the size of the stego-key. In this work, a single cloud storage environment is used to solve the problems of managing several credentials, monetary costs and data controls associated with multi-cloud storage environments. The comparisons showed interesting results with simpler operations to be performed by the participants during the process.},
  doi      = {10.1186/s13677-021-00258-2},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\UAA9KCVJ\\Mossebo Tcheunteu et al. - 2021 - Distributed data hiding in a single cloud storage .pdf:application/pdf},
  language = {en},
  url      = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-021-00258-2},
  urldate  = {2021-10-24},
}

@Article{Chehida2021,
  author   = {Chehida, Salim and Baouya, Abdelhakim and Bensalem, Saddek and Bozga, Marius},
  journal  = {Software Quality Journal},
  title    = {Learning and analysis of sensors behavior in {IoT} systems using statistical model checking},
  year     = {2021},
  issn     = {0963-9314, 1573-1367},
  month    = jun,
  doi      = {10.1007/s11219-021-09559-w},
  language = {en},
  url      = {https://link.springer.com/10.1007/s11219-021-09559-w},
  urldate  = {2021-10-24},
}

@Article{Asad2022,
  author   = {Asad, Hafizul and Gashi, Ilir},
  journal  = {Empirical Software Engineering},
  title    = {Dynamical analysis of diversity in rule-based open source network intrusion detection systems},
  year     = {2022},
  issn     = {1382-3256, 1573-7616},
  month    = jan,
  number   = {1},
  pages    = {4},
  volume   = {27},
  abstract = {Abstract
            Diverse layers of defence play an important role in the design of defence-in-depth architectures. The use of Intrusion Detection Systems (IDSs) are ubiquitous in this design. But the selection of the “right” IDSs in various configurations is an important decision that the security architects need to make. Additionally, the ability of these IDSs to adapt to the evolving threat-landscape also needs to be investigated. To help with these decisions, we need rigorous quantitative analysis. In this paper, we present a diversity analysis of open-source IDSs, Snort and Suricata, to help security architects tune/deploy these IDSs. We analyse two types of diversities in these IDSs; configurational diversity and functional diversity. In the configurational diversity analysis, we investigate the diversity in the sets of rules and the Blacklisted IP Addresses (BIPAs) these IDSs use in their configurations. The functional diversity analysis investigates the differences in alerting behaviours of these IDSs when they analyse real network traffic, and how these differences evolve. The configurational diversity experiment utilises snapshots of the rules and BIPAs collected over a period of 5 months, from May to October 2017. The snapshots have been collected for three different off-the-shelf default configurations of the Snort IDS and the Emerging Threats (ET) configuration of the Suricata IDS. The functional diversity investigates the alerting behaviour of these two IDSs for a sample of the real network traffic collected in the same time window. Analysing the differences in these systems allows us to get insights into where the diversity in the behaviour of these systems comes from, how does it evolve and whether this has any effect on the alerting behaviour of these IDSs. This analysis gives insight to security architects on how they can combine and layer these systems in a defence-in-depth deployment.},
  doi      = {10.1007/s10664-021-10046-w},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-10046-w},
  urldate  = {2021-10-24},
}

@Article{Chicha2021,
  author   = {Chicha, Elie and Al Bouna, Bechara and Wünsche, Kay and Chbeir, Richard},
  journal  = {Service Oriented Computing and Applications},
  title    = {Exposing safe correlations in transactional datasets},
  year     = {2021},
  issn     = {1863-2386, 1863-2394},
  month    = aug,
  doi      = {10.1007/s11761-021-00325-1},
  language = {en},
  url      = {https://link.springer.com/10.1007/s11761-021-00325-1},
  urldate  = {2021-10-24},
}

@Article{Ganesh2021,
  author   = {Ganesh, Chaya and Patra, Arpita},
  journal  = {Distributed Computing},
  title    = {Optimal extension protocols for byzantine broadcast and agreement},
  year     = {2021},
  issn     = {0178-2770, 1432-0452},
  month    = feb,
  number   = {1},
  pages    = {59--77},
  volume   = {34},
  doi      = {10.1007/s00446-020-00384-1},
  language = {en},
  url      = {https://link.springer.com/10.1007/s00446-020-00384-1},
  urldate  = {2021-10-24},
}

@Article{Balliu2021,
  author   = {Balliu, Alkida and Brandt, Sebastian and Olivetti, Dennis and Suomela, Jukka},
  journal  = {Distributed Computing},
  title    = {Almost global problems in the {LOCAL} model},
  year     = {2021},
  issn     = {0178-2770, 1432-0452},
  month    = aug,
  number   = {4},
  pages    = {259--281},
  volume   = {34},
  abstract = {Abstract
            
              The landscape of the distributed time complexity is nowadays well-understood for subpolynomial complexities. When we look at deterministic algorithms in the
              
                
                  \$\${\textbackslash}mathsf \{LOCAL\}\$\$
                  
                    LOCAL
                  
                
              
              model and locally checkable problems (
              
                
                  \$\${\textbackslash}mathsf \{LCL\}\$\$
                  
                    LCL
                  
                
              
              s) in bounded-degree graphs, the following picture emerges:
              
                
                  
                    There are lots of problems with time complexities of
                    
                      
                        \$\${\textbackslash}varTheta ({\textbackslash}log {\textasciicircum}* n)\$\$
                        
                          
                            Θ
                            (
                            
                              log
                              ∗
                            
                            n
                            )
                          
                        
                      
                    
                    or
                    
                      
                        \$\${\textbackslash}varTheta ({\textbackslash}log n)\$\$
                        
                          
                            Θ
                            (
                            log
                            n
                            )
                          
                        
                      
                    
                    .
                  
                
                
                  
                    It is not possible to have a problem with complexity between
                    
                      
                        \$\${\textbackslash}omega ({\textbackslash}log {\textasciicircum}* n)\$\$
                        
                          
                            ω
                            (
                            
                              log
                              ∗
                            
                            n
                            )
                          
                        
                      
                    
                    and
                    
                      
                        \$\$o({\textbackslash}log n)\$\$
                        
                          
                            o
                            (
                            log
                            n
                            )
                          
                        
                      
                    
                    .
                  
                
                
                  
                    In
                    general graphs
                    , we can construct
                    
                      
                        \$\${\textbackslash}mathsf \{LCL\}\$\$
                        
                          LCL
                        
                      
                    
                    problems with infinitely many complexities between
                    
                      
                        \$\${\textbackslash}omega ({\textbackslash}log n)\$\$
                        
                          
                            ω
                            (
                            log
                            n
                            )
                          
                        
                      
                    
                    and
                    
                      
                        \$\$n{\textasciicircum}\{o(1)\}\$\$
                        
                          
                            n
                            
                              o
                              (
                              1
                              )
                            
                          
                        
                      
                    
                    .
                  
                
                
                  
                    In
                    trees
                    , problems with such complexities do not exist.
                  
                
              
              However, the high end of the complexity spectrum was left open by prior work. In general graphs there are
              
                
                  \$\${\textbackslash}mathsf \{LCL\}\$\$
                  
                    LCL
                  
                
              
              problems with complexities of the form
              
                
                  \$\${\textbackslash}varTheta (n{\textasciicircum}{\textbackslash}alpha )\$\$
                  
                    
                      Θ
                      (
                      
                        n
                        α
                      
                      )
                    
                  
                
              
              for any rational
              
                
                  \$\$0 {\textless} {\textbackslash}alpha {\textbackslash}le 1/2\$\$
                  
                    
                      0
                      {\textless}
                      α
                      ≤
                      1
                      /
                      2
                    
                  
                
              
              , while for trees only complexities of the form
              
                
                  \$\${\textbackslash}varTheta (n{\textasciicircum}\{1/k\})\$\$
                  
                    
                      Θ
                      (
                      
                        n
                        
                          1
                          /
                          k
                        
                      
                      )
                    
                  
                
              
              are known. No
              
                
                  \$\${\textbackslash}mathsf \{LCL\}\$\$
                  
                    LCL
                  
                
              
              problem with complexity between
              
                
                  \$\${\textbackslash}omega ({\textbackslash}sqrt\{n\})\$\$
                  
                    
                      ω
                      (
                      
                        n
                      
                      )
                    
                  
                
              
              and
              o
              (
              n
              ) is known, and neither are there results that would show that such problems do not exist. We show that:
              
                
                  
                    In
                    general graphs
                    , we can construct
                    
                      
                        \$\${\textbackslash}mathsf \{LCL\}\$\$
                        
                          LCL
                        
                      
                    
                    problems with infinitely many complexities between
                    
                      
                        \$\${\textbackslash}omega ({\textbackslash}sqrt\{n\})\$\$
                        
                          
                            ω
                            (
                            
                              n
                            
                            )
                          
                        
                      
                    
                    and
                    o
                    (
                    n
                    ).
                  
                
                
                  
                    In
                    trees
                    , problems with such complexities do not exist.
                  
                
              
              Put otherwise, we show that any
              
                
                  \$\${\textbackslash}mathsf \{LCL\}\$\$
                  
                    LCL
                  
                
              
              with a complexity
              o
              (
              n
              ) can be solved in time
              
                
                  \$\$O({\textbackslash}sqrt\{n\})\$\$
                  
                    
                      O
                      (
                      
                        n
                      
                      )
                    
                  
                
              
              in trees, while the same is not true in general graphs.},
  doi      = {10.1007/s00446-020-00375-2},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\7WAIDCYC\\Balliu et al. - 2021 - Almost global problems in the LOCAL model.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s00446-020-00375-2},
  urldate  = {2021-10-24},
}

@Article{Sarma2021,
  author     = {Sarma, Debajit and Bhuyan, M. K.},
  journal    = {SN Computer Science},
  title      = {Methods, {Databases} and {Recent} {Advancement} of {Vision}-{Based} {Hand} {Gesture} {Recognition} for {HCI} {Systems}: {A} {Review}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = nov,
  number     = {6},
  pages      = {436},
  volume     = {2},
  doi        = {10.1007/s42979-021-00827-x},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\SPKFL88H\\Sarma and Bhuyan - 2021 - Methods, Databases and Recent Advancement of Visio.pdf:application/pdf},
  language   = {en},
  shorttitle = {Methods, {Databases} and {Recent} {Advancement} of {Vision}-{Based} {Hand} {Gesture} {Recognition} for {HCI} {Systems}},
  url        = {https://link.springer.com/10.1007/s42979-021-00827-x},
  urldate    = {2021-10-24},
}

@Article{Challita2021,
  author   = {Challita, Stéphanie and Korte, Fabian and Erbel, Johannes and Zalila, Faiez and Grabowski, Jens and Merle, Philippe},
  journal  = {Software and Systems Modeling},
  title    = {Model-based cloud resource management with {TOSCA} and {OCCI}},
  year     = {2021},
  issn     = {1619-1366, 1619-1374},
  month    = oct,
  number   = {5},
  pages    = {1609--1631},
  volume   = {20},
  doi      = {10.1007/s10270-021-00869-y},
  file     = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\75JHQSR7\\Challita et al. - 2021 - Model-based cloud resource management with TOSCA a.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10270-021-00869-y},
  urldate  = {2021-10-24},
}

@Article{Tuarob2021,
  author   = {Tuarob, Suppawong and Assavakamhaenghan, Noppadol and Tanaphantaruk, Waralee and Suwanworaboon, Ponlakit and Hassan, Saeed-Ul and Choetkiertikul, Morakot},
  journal  = {Empirical Software Engineering},
  title    = {Automatic team recommendation for collaborative software development},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = jul,
  number   = {4},
  pages    = {64},
  volume   = {26},
  doi      = {10.1007/s10664-021-09966-4},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-09966-4},
  urldate  = {2021-10-24},
}

@Article{Frolov2021,
  author     = {Frolov, V. A. and Voloboy, A. G. and Ershov, S. V. and Galaktionov, V. A.},
  journal    = {Programming and Computer Software},
  title      = {Light {Transport} in {Realistic} {Rendering}: {State}-of-the-{Art} {Simulation} {Methods}},
  year       = {2021},
  issn       = {0361-7688, 1608-3261},
  month      = jul,
  number     = {4},
  pages      = {298--326},
  volume     = {47},
  doi        = {10.1134/S0361768821040034},
  language   = {en},
  shorttitle = {Light {Transport} in {Realistic} {Rendering}},
  url        = {https://link.springer.com/10.1134/S0361768821040034},
  urldate    = {2021-10-24},
}

@Article{Garcia2021,
  author   = {García, Boni and Munoz-Organero, Mario and Alario-Hoyos, Carlos and Kloos, Carlos Delgado},
  journal  = {Empirical Software Engineering},
  title    = {Automated driver management for {Selenium} {WebDriver}},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = sep,
  number   = {5},
  pages    = {107},
  volume   = {26},
  doi      = {10.1007/s10664-021-09975-3},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-09975-3},
  urldate  = {2021-10-24},
}

@Article{Ferrara2021,
  author   = {Ferrara, Pietro and Mandal, Amit Kr and Cortesi, Agostino and Spoto, Fausto},
  journal  = {International Journal on Software Tools for Technology Transfer},
  title    = {Static analysis for discovering {IoT} vulnerabilities},
  year     = {2021},
  issn     = {1433-2779, 1433-2787},
  month    = feb,
  number   = {1},
  pages    = {71--88},
  volume   = {23},
  abstract = {Abstract
            The Open Web Application Security Project (OWASP), released the “OWASP Top 10 Internet of Things 2018” list of the high-priority security vulnerabilities for IoT systems. The diversity of these vulnerabilities poses a great challenge toward development of a robust solution for their detection and mitigation. In this paper, we discuss the relationship between these vulnerabilities and the ones listed by OWASP Top 10 (focused on Web applications rather than IoT systems), how these vulnerabilities can actually be exploited, and in which cases static analysis can help in preventing them. Then, we present an extension of an industrial analyzer (Julia) that already covers five out of the top seven vulnerabilities of OWASP Top 10, and we discuss which IoT Top 10 vulnerabilities might be detected by the existing analyses or their extension. The experimental results present the application of some existing Julia’s analyses and their extension to IoT systems, showing its effectiveness of the analysis of some representative case studies.},
  doi      = {10.1007/s10009-020-00592-x},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\53ALKXPU\\Ferrara et al. - 2021 - Static analysis for discovering IoT vulnerabilitie.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s10009-020-00592-x},
  urldate  = {2021-10-24},
}

@Article{Hamadeh2021,
  author   = {Hamadeh, Hala and Tyagi, Akhilesh},
  journal  = {SN Computer Science},
  title    = {An {FPGA} {Implementation} of {Privacy} {Preserving} {Data} {Provenance} {Model} {Based} on {PUF} for {Secure} {Internet} of {Things}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = apr,
  number   = {2},
  pages    = {65},
  volume   = {2},
  doi      = {10.1007/s42979-020-00428-0},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\FDZ9HLWE\\Hamadeh and Tyagi - 2021 - An FPGA Implementation of Privacy Preserving Data .pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s42979-020-00428-0},
  urldate  = {2021-10-24},
}

@Article{Henriksson2021,
  author   = {Henriksson, Aron and Zdravkovic, Jelena},
  journal  = {Software and Systems Modeling},
  title    = {Holistic data-driven requirements elicitation in the big data era},
  year     = {2021},
  issn     = {1619-1366, 1619-1374},
  month    = oct,
  abstract = {Abstract
            Digital transformation stimulates continuous generation of large amounts of digital data, both in organizations and in society at large. As a consequence, there have been growing efforts in the Requirements Engineering community to consider digital data as sources for requirements acquisition, in addition to human stakeholders. The volume, velocity and variety of the data make requirements discovery increasingly dynamic, but also unstructured and complex, which current elicitation methods are unable to consider and manage in a systematic and efficient manner. We propose a framework, in the form of a conceptual metamodel and a method, for continuous and automated acquisition, analysis and aggregation of heterogeneous digital sources that aims to support data-driven requirements elicitation and management. The usability of the framework is partially validated by an in-depth case study from the business sector of video game development.},
  doi      = {10.1007/s10270-021-00926-6},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\DQ7P2NDA\\Henriksson and Zdravkovic - 2021 - Holistic data-driven requirements elicitation in t.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10270-021-00926-6},
  urldate  = {2021-10-24},
}

@Article{Sadi2021,
  author   = {Sadi, Muhammad Sheikh and Ahmed, Waseem and Jürjens, Jan},
  journal  = {SN Computer Science},
  title    = {Towards {Tolerating} {Soft} {Errors} for {Embedded} {Systems}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = apr,
  number   = {2},
  pages    = {101},
  volume   = {2},
  doi      = {10.1007/s42979-021-00497-9},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\QABIYBMS\\Sadi et al. - 2021 - Towards Tolerating Soft Errors for Embedded System.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s42979-021-00497-9},
  urldate  = {2021-10-24},
}

@Article{Cho2021,
  author   = {Cho, Da-Jung and Függer, Matthias and Hopper, Corbin and Kushwaha, Manish and Nowak, Thomas and Soubeyran, Quentin},
  journal  = {Distributed Computing},
  title    = {Distributed computation with continual population growth},
  year     = {2021},
  issn     = {0178-2770, 1432-0452},
  month    = oct,
  abstract = {Abstract
            
              Computing via synthetically engineered bacteria is a vibrant and active field with numerous applications in bio-production, bio-sensing, and medicine. Motivated by the lack of robustness and by resource limitation inside single cells, distributed approaches with communication among bacteria have recently gained in interest. In this paper, we focus on the problem of population growth happening concurrently, and possibly interfering, with the desired bio-computation. Specifically, we present a fast protocol in systems with continuous population growth for the majority consensus problem and prove that it correctly identifies the initial majority among two inputs with high probability if the initial difference is
              
                
                  \$\${\textbackslash}varOmega ({\textbackslash}sqrt\{n{\textbackslash}log n\})\$\$
                  
                    
                      Ω
                      (
                      
                        
                          n
                          log
                          n
                        
                      
                      )
                    
                  
                
              
              where 
              n
              is the total initial population. We also present a fast protocol that correctly computes the
              Nand
              of two inputs with high probability. By combining
              Nand
              gates with the majority consensus protocol as an amplifier, it is possible to compute arbitrary Boolean functions. Finally, we extend the protocols to several biologically relevant settings. We simulate a plausible implementation of a noisy
              Nand
              gate with engineered bacteria. In the context of continuous cultures with a constant outflow and a constant inflow of fresh media, we demonstrate that majority consensus is achieved only if the flow is slower than the maximum growth rate. Simulations suggest that flow increases consensus time over a wide parameter range. The proposed protocols help set the stage for bio-engineered distributed computation that directly addresses continuous stochastic population growth.},
  doi      = {10.1007/s00446-021-00404-8},
  language = {en},
  url      = {https://link.springer.com/10.1007/s00446-021-00404-8},
  urldate  = {2021-10-24},
}

@Article{Berenbrink2021,
  author   = {Berenbrink, Petra and Elsässer, Robert and Friedetzky, Tom and Kaaser, Dominik and Kling, Peter and Radzik, Tomasz},
  journal  = {Distributed Computing},
  title    = {Time-space trade-offs in population protocols for the majority problem},
  year     = {2021},
  issn     = {0178-2770, 1432-0452},
  month    = apr,
  number   = {2},
  pages    = {91--111},
  volume   = {34},
  abstract = {Abstract
            
              Population protocols are a model for distributed computing that is focused on simplicity and robustness. A system of
              n
              identical agents (finite state machines) performs a global task like electing a unique leader or determining the majority opinion when each agent has one of two opinions. Agents communicate in pairwise interactions with randomly assigned communication partners. Quality is measured in two ways: the number of interactions to complete the task and the number of states per agent. We present protocols for the majority problem that allow for a trade-off between these two measures. Compared to the only other trade-off result (Alistarh et al. in Proceedings of the 2015 ACM symposium on principles of distributed computing, Donostia-San Sebastián, 2015), we improve the number of interactions by almost a linear factor. Furthermore, our protocols can be made uniform (working correctly without any information on the population size
              n
              ), yielding the first uniform majority protocols that stabilize in a subquadratic number of interactions.},
  doi      = {10.1007/s00446-020-00385-0},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\GAQX7DQL\\Berenbrink et al. - 2021 - Time-space trade-offs in population protocols for .pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s00446-020-00385-0},
  urldate  = {2021-10-24},
}

@Article{Fischer2021,
  author   = {Fischer, Orr and Oshman, Rotem},
  journal  = {Distributed Computing},
  title    = {A distributed algorithm for directed minimum-weight spanning tree},
  year     = {2021},
  issn     = {0178-2770, 1432-0452},
  month    = jun,
  doi      = {10.1007/s00446-021-00398-3},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\PS9AUMKI\\Fischer and Oshman - 2021 - A distributed algorithm for directed minimum-weigh.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s00446-021-00398-3},
  urldate  = {2021-10-24},
}

@Article{Dang2021,
  author     = {Dang, Tran Khanh and Huy, Ta Manh and Dang, Ly Hoang and Le Hoang, Nguyen},
  journal    = {SN Computer Science},
  title      = {An {Elastic} {Data} {Conversion} {Framework}: {A} {Case} {Study} for {MySQL} and {MongoDB}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = jul,
  number     = {4},
  pages      = {325},
  volume     = {2},
  doi        = {10.1007/s42979-021-00716-3},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\4BGCDHX4\\Dang et al. - 2021 - An Elastic Data Conversion Framework A Case Study.pdf:application/pdf},
  language   = {en},
  shorttitle = {An {Elastic} {Data} {Conversion} {Framework}},
  url        = {https://link.springer.com/10.1007/s42979-021-00716-3},
  urldate    = {2021-10-24},
}

@Article{Lekidis2021,
  author   = {Lekidis, Alexios and Katsaros, Panagiotis},
  journal  = {International Journal on Software Tools for Technology Transfer},
  title    = {Energy characterization of {IoT} systems through design aspect monitoring},
  year     = {2021},
  issn     = {1433-2779, 1433-2787},
  month    = jan,
  doi      = {10.1007/s10009-020-00598-5},
  language = {en},
  url      = {http://link.springer.com/10.1007/s10009-020-00598-5},
  urldate  = {2021-10-24},
}

@Article{Xiong2021,
  author   = {Xiong, Wenjun and Legrand, Emeline and Åberg, Oscar and Lagerström, Robert},
  journal  = {Software and Systems Modeling},
  title    = {Cyber security threat modeling based on the {MITRE} {Enterprise} {ATT}\&{CK} {Matrix}},
  year     = {2021},
  issn     = {1619-1366, 1619-1374},
  month    = jun,
  abstract = {Abstract
            Enterprise systems are growing in complexity, and the adoption of cloud and mobile services has greatly increased the attack surface. To proactively address these security issues in enterprise systems, this paper proposes a threat modeling language for enterprise security based on the MITRE Enterprise ATT\&CK Matrix. It is designed using the Meta Attack Language framework and focuses on describing system assets, attack steps, defenses, and asset associations. The attack steps in the language represent adversary techniques as listed and described by MITRE. This entity-relationship model describes enterprise IT systems as a whole; by using available tools, the proposed language enables attack simulations on its system model instances. These simulations can be used to investigate security settings and architectural changes that might be implemented to secure the system more effectively. Our proposed language is tested with a number of unit and integration tests. This is visualized in the paper with two real cyber attacks modeled and simulated.},
  doi      = {10.1007/s10270-021-00898-7},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\VMG59NFN\\Xiong et al. - 2021 - Cyber security threat modeling based on the MITRE .pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10270-021-00898-7},
  urldate  = {2021-10-24},
}

@Article{Caliz2021,
  author   = {Cáliz, Doris and Ravivanpong, Ployplearn and Schankin, Andrea and Jadán-Guerrero, Janio and Caraguay, Washington and Arellano, Leonardo},
  journal  = {Journal of Reliable Intelligent Environments},
  title    = {Examining the usability of touchscreen gestures for adults with {DS}},
  year     = {2021},
  issn     = {2199-4668, 2199-4676},
  month    = dec,
  number   = {4},
  pages    = {355--380},
  volume   = {7},
  doi      = {10.1007/s40860-020-00122-1},
  language = {en},
  url      = {https://link.springer.com/10.1007/s40860-020-00122-1},
  urldate  = {2021-10-24},
}

@Article{Bej2021,
  author   = {Bej, Debabrata and Chakraborty, Shubhranil and Mahammad, Sekh Arif and Mal, Ashis Kumar},
  journal  = {Journal of Reliable Intelligent Environments},
  title    = {A cost-effective alertness-rating tool to enable situational awareness among on-duty static security guards in {Covid}-19 pandemic},
  year     = {2021},
  issn     = {2199-4668, 2199-4676},
  month    = dec,
  number   = {4},
  pages    = {341--353},
  volume   = {7},
  doi      = {10.1007/s40860-020-00128-9},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\TXC5G69U\\Bej et al. - 2021 - A cost-effective alertness-rating tool to enable s.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s40860-020-00128-9},
  urldate  = {2021-10-24},
}

@Article{Frohme2021,
  author   = {Frohme, Markus and Steffen, Bernhard},
  journal  = {International Journal on Software Tools for Technology Transfer},
  title    = {Compositional learning of mutually recursive procedural systems},
  year     = {2021},
  issn     = {1433-2779, 1433-2787},
  month    = aug,
  number   = {4},
  pages    = {521--543},
  volume   = {23},
  abstract = {Abstract
            This paper presents a compositional approach to active automata learning of Systems of Procedural Automata (SPAs), an extension of Deterministic Finite Automata (DFAs) to systems of DFAs that can mutually call each other. SPAs are of high practical relevance, as they allow one to efficiently learn intuitive recursive models of recursive programs after an easy instrumentation that makes calls and returns observable. Key to our approach is the simultaneous inference of individual DFAs for each of the involved procedures via expansion and projection: membership queries for the individual DFAs are expanded to membership queries of the entire SPA, and global counterexample traces are transformed into counterexamples for the DFAs of concerned procedures. This reduces the inference of SPAs to a simultaneous inference of the DFAs for the involved procedures for which we can utilize various existing regular learning algorithms. The inferred models are easy to understand and allow for an intuitive display of the procedural system under learning that reveals its recursive structure. We implemented the algorithm within the LearnLib framework in order to provide a ready-to-use tool for practical application which is publicly available on GitHub for experimentation.},
  doi      = {10.1007/s10009-021-00634-y},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\FR74ASNI\\Frohme and Steffen - 2021 - Compositional learning of mutually recursive proce.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10009-021-00634-y},
  urldate  = {2021-10-24},
}

@Article{Alharbi2021,
  author   = {Alharbi, Ayman and Abdur Rahman, Md},
  journal  = {SN Computer Science},
  title    = {Review of {Recent} {Technologies} for {Tackling} {COVID}-19},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = nov,
  number   = {6},
  pages    = {460},
  volume   = {2},
  doi      = {10.1007/s42979-021-00841-z},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\F78G2SHV\\Alharbi and Abdur Rahman - 2021 - Review of Recent Technologies for Tackling COVID-1.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00841-z},
  urldate  = {2021-10-24},
}

@Article{Brunschwig2021,
  author     = {Brunschwig, Léa and Guerra, Esther and de Lara, Juan},
  journal    = {Software and Systems Modeling},
  title      = {Modelling on mobile devices: {A} systematic mapping study},
  year       = {2021},
  issn       = {1619-1366, 1619-1374},
  month      = jun,
  doi        = {10.1007/s10270-021-00897-8},
  language   = {en},
  shorttitle = {Modelling on mobile devices},
  url        = {https://link.springer.com/10.1007/s10270-021-00897-8},
  urldate    = {2021-10-24},
}

@Article{Ma2021b,
  author     = {Ma, Tao and Ali, Shaukat and Yue, Tao},
  journal    = {Empirical Software Engineering},
  title      = {Testing self-healing cyber-physical systems under uncertainty with reinforcement learning: an empirical study},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = may,
  number     = {3},
  pages      = {52},
  volume     = {26},
  doi        = {10.1007/s10664-021-09941-z},
  language   = {en},
  shorttitle = {Testing self-healing cyber-physical systems under uncertainty with reinforcement learning},
  url        = {https://link.springer.com/10.1007/s10664-021-09941-z},
  urldate    = {2021-10-24},
}

@Article{Solomon2021,
  author   = {Solomon, José Enrique and Charette, François},
  journal  = {SN Computer Science},
  title    = {A {Follow}-the-{Leader} {Strategy} {Using} {Hierarchical} {Deep} {Neural} {Networks} with {Grouped} {Convolutions}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = may,
  number   = {3},
  pages    = {147},
  volume   = {2},
  doi      = {10.1007/s42979-021-00572-1},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\PSVDXB6K\\Solomon and Charette - 2021 - A Follow-the-Leader Strategy Using Hierarchical De.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00572-1},
  urldate  = {2021-10-24},
}

@Article{Sarker2021b,
  author     = {Sarker, Iqbal H.},
  journal    = {SN Computer Science},
  title      = {Machine {Learning}: {Algorithms}, {Real}-{World} {Applications} and {Research} {Directions}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = may,
  number     = {3},
  pages      = {160},
  volume     = {2},
  doi        = {10.1007/s42979-021-00592-x},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\K3Z6HHXP\\Sarker - 2021 - Machine Learning Algorithms, Real-World Applicati.pdf:application/pdf},
  language   = {en},
  shorttitle = {Machine {Learning}},
  url        = {https://link.springer.com/10.1007/s42979-021-00592-x},
  urldate    = {2021-10-24},
}

@Article{Petrulio2021,
  author     = {Petrulio, Fernando and Sawant, Anand Ashok and Bacchelli, Alberto},
  journal    = {Empirical Software Engineering},
  title      = {The indolent lambdification of {Java}: {Understanding} the support for lambda expressions in the {Java} ecosystem},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = nov,
  number     = {6},
  pages      = {134},
  volume     = {26},
  abstract   = {Abstract
            As Java 8 introduced functional interfaces and lambda expressions to the Java programming language, the JDK API was changed to introduce support for lambda expressions, thus allowing consumers to define lambda functions when using Java’s collections. While the JDK API allows for a functional paradigm, for API consumers to be able to completely embrace Java’s new functional features, third-party APIs must also support lambda expressions. To understand the current state of the Java ecosystem, we investigate (i) the extent to which third-party Java APIs have changed their interfaces, (ii) why or why not they introduce functional interface support and (iii) in the case the API has changed its interface how it does so. We also investigate the consumers’ perspective, particularly their ease in using lambda expressions in Java with APIs. We perform our investigation by manually analyzing the top 50 popular Java APIs, conducting in-person and email interviews with 23 API producers, and surveying 110 developers. We find that only a minority of the top 50 APIs support functional interfaces, the rest does not support them, predominantly in the interest of backward compatibility. Java 7 support is still greatly desirable due to enterprise projects not migrating to newer versions of Java. This suggests that the Java ecosystem is stagnant and that the introduction of new language features will not be enough to save it from the advent of new languages such as Kotlin (JVM based) and Rust (non-JVM based).},
  doi        = {10.1007/s10664-021-10039-9},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\I5MYBSPR\\Petrulio et al. - 2021 - The indolent lambdification of Java Understanding.pdf:application/pdf},
  language   = {en},
  shorttitle = {The indolent lambdification of {Java}},
  url        = {https://link.springer.com/10.1007/s10664-021-10039-9},
  urldate    = {2021-10-24},
}

@Article{AzanguezetQuimatio2021,
  author   = {Azanguezet Quimatio, Benoît Martin and Tsognong, Fidèle},
  journal  = {SN Computer Science},
  title    = {{HOrBAC} {Optimization} {Based} on {Suspicious} {Behavior} {Detection} {Using} {Information} {Theory}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = apr,
  number   = {2},
  pages    = {121},
  volume   = {2},
  doi      = {10.1007/s42979-021-00515-w},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\QLM9T6F7\\Azanguezet Quimatio and Tsognong - 2021 - HOrBAC Optimization Based on Suspicious Behavior D.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s42979-021-00515-w},
  urldate  = {2021-10-24},
}

@Article{Zhou2021a,
  author     = {Zhou, Cheng and Li, Bin and Sun, Xiaobing and Bo, Lili},
  journal    = {Empirical Software Engineering},
  title      = {Why and what happened? {Aiding} bug comprehension with automated category and causal link identification},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = nov,
  number     = {6},
  pages      = {118},
  volume     = {26},
  doi        = {10.1007/s10664-021-10010-8},
  language   = {en},
  shorttitle = {Why and what happened?},
  url        = {https://link.springer.com/10.1007/s10664-021-10010-8},
  urldate    = {2021-10-24},
}

@Article{Rahman2021,
  author     = {Rahman, Mohammad Masudur and Khomh, Foutse and Yeasmin, Shamima and Roy, Chanchal K.},
  journal    = {Empirical Software Engineering},
  title      = {The forgotten role of search queries in {IR}-based bug localization: an empirical study},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = nov,
  number     = {6},
  pages      = {116},
  volume     = {26},
  doi        = {10.1007/s10664-021-10022-4},
  file       = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\X42FKB9V\\Rahman et al. - 2021 - The forgotten role of search queries in IR-based b.pdf:application/pdf},
  language   = {en},
  shorttitle = {The forgotten role of search queries in {IR}-based bug localization},
  url        = {https://link.springer.com/10.1007/s10664-021-10022-4},
  urldate    = {2021-10-24},
}

@Article{Beek2022,
  author   = {ter Beek, Maurice H. and Damiani, Ferruccio and Lienhardt, Michael and Mazzanti, Franco and Paolini, Luca},
  journal  = {Empirical Software Engineering},
  title    = {Efficient static analysis and verification of featured transition systems},
  year     = {2022},
  issn     = {1382-3256, 1573-7616},
  month    = jan,
  number   = {1},
  pages    = {10},
  volume   = {27},
  abstract = {Abstract
            
              A Featured Transition System (FTS) models the behaviour of all products of a Software Product Line (SPL) in a single compact structure, by associating action-labelled transitions with features that condition their presence in product behaviour. It may however be the case that the resulting featured transitions of an FTS cannot be executed in any product (so called
              dead transitions
              ) or, on the contrary, can be executed in all products (so called
              false optional transitions
              ). Moreover, an FTS may contain states from which a transition can be executed only in some products (so called
              hidden deadlock states
              ). It is useful to detect such ambiguities and signal them to the modeller, because dead transitions indicate an anomaly in the FTS that must be corrected, false optional transitions indicate a redundancy that may be removed, and hidden deadlocks should be made explicit in the FTS to improve the understanding of the model and to enable efficient verification—if the deadlocks in the products should not be remedied in the first place. We provide an algorithm to analyse an FTS for ambiguities and a means to transform an ambiguous FTS into an unambiguous one. The scope is twofold: an ambiguous model is typically undesired as it gives an unclear idea of the SPL and, moreover, an unambiguous FTS can efficiently be model checked. We empirically show the suitability of the algorithm by applying it to a number of benchmark SPL examples from the literature, and we show how this facilitates a kind of family-based model checking of a wide range of properties on FTSs.},
  doi      = {10.1007/s10664-020-09930-8},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-020-09930-8},
  urldate  = {2021-10-24},
}

@Article{Hasnain2021,
  author     = {Hasnain, Muhammad and Pasha, Muhammad Fermi and Ghani, Imran and Jeong, Seung Ryul},
  journal    = {SN Computer Science},
  title      = {Functional {Requirement}-{Based} {Test} {Case} {Prioritization} in {Regression} {Testing}: {A} {Systematic} {Literature} {Review}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = nov,
  number     = {6},
  pages      = {421},
  volume     = {2},
  doi        = {10.1007/s42979-021-00821-3},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\9AS7VXRB\\Hasnain et al. - 2021 - Functional Requirement-Based Test Case Prioritizat.pdf:application/pdf},
  language   = {en},
  shorttitle = {Functional {Requirement}-{Based} {Test} {Case} {Prioritization} in {Regression} {Testing}},
  url        = {https://link.springer.com/10.1007/s42979-021-00821-3},
  urldate    = {2021-10-24},
}

@Article{Tsagkaropoulos2021,
  author     = {Tsagkaropoulos, Andreas and Verginadis, Yiannis and Papageorgiou, Nikos and Paraskevopoulos, Fotis and Apostolou, Dimitris and Mentzas, Gregoris},
  journal    = {Journal of Cloud Computing},
  title      = {Severity: a {QoS}-aware approach to cloud application elasticity},
  year       = {2021},
  issn       = {2192-113X},
  month      = dec,
  number     = {1},
  pages      = {45},
  volume     = {10},
  abstract   = {Abstract
            While a multitude of cloud vendors exist today offering flexible application hosting services, the application adaptation capabilities provided in terms of autoscaling are rather limited. In most cases, a static adaptation action is used having a fixed scaling response. In the cases that a dynamic adaptation action is provided, this is based on a single scaling variable. We propose Severity, a novel algorithmic approach aiding the adaptation of cloud applications. Based on the input of the DevOps, our approach detects situations, calculates their Severity and proposes adaptations which can lead to better application performance. Severity can be calculated for any number of application QoS attributes and any type of such attributes, whether bounded or unbounded. Evaluation with four distinct workload types and a variety of monitoring attributes shows that QoS for particular application categories is improved. The feasibility of our approach is demonstrated with a prototype implementation of an application adaptation manager, for which the source code is provided.},
  doi        = {10.1186/s13677-021-00255-5},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\WIHLPBUT\\Tsagkaropoulos et al. - 2021 - Severity a QoS-aware approach to cloud applicatio.pdf:application/pdf},
  language   = {en},
  shorttitle = {Severity},
  url        = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-021-00255-5},
  urldate    = {2021-10-24},
}

@Article{Ma2021c,
  author     = {Ma, Yuxing and Dey, Tapajit and Bogart, Chris and Amreen, Sadika and Valiev, Marat and Tutko, Adam and Kennard, David and Zaretzki, Russell and Mockus, Audris},
  journal    = {Empirical Software Engineering},
  title      = {World of code: enabling a research workflow for mining and analyzing the universe of open source {VCS} data},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = mar,
  number     = {2},
  pages      = {22},
  volume     = {26},
  doi        = {10.1007/s10664-020-09905-9},
  file       = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\WF4TVGPI\\Ma et al. - 2021 - World of code enabling a research workflow for mi.pdf:application/pdf},
  language   = {en},
  shorttitle = {World of code},
  url        = {http://link.springer.com/10.1007/s10664-020-09905-9},
  urldate    = {2021-10-24},
}

@Article{Anderton2021,
  author     = {Anderton, William C. and Chakraborty, Trisha and Young, Maxwell},
  journal    = {Distributed Computing},
  title      = {Windowed backoff algorithms for {WiFi}: theory and performance under batched arrivals},
  year       = {2021},
  issn       = {0178-2770, 1432-0452},
  month      = oct,
  number     = {5},
  pages      = {367--393},
  volume     = {34},
  doi        = {10.1007/s00446-021-00403-9},
  file       = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\M6VN2A5X\\Anderton et al. - 2021 - Windowed backoff algorithms for WiFi theory and p.pdf:application/pdf},
  language   = {en},
  shorttitle = {Windowed backoff algorithms for {WiFi}},
  url        = {https://link.springer.com/10.1007/s00446-021-00403-9},
  urldate    = {2021-10-24},
}

@Article{Barquero2021,
  author   = {Barquero, Gala and Troya, Javier and Vallecillo, Antonio},
  journal  = {Software and Systems Modeling},
  title    = {Improving query performance on dynamic graphs},
  year     = {2021},
  issn     = {1619-1366, 1619-1374},
  month    = aug,
  number   = {4},
  pages    = {1011--1041},
  volume   = {20},
  doi      = {10.1007/s10270-020-00832-3},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10270-020-00832-3},
  urldate  = {2021-10-24},
}

@Article{Cirus2021,
  author     = {Cirus, Lukas and Simonova, Ivana},
  journal    = {SN Computer Science},
  title      = {Pupils’ {Digital} {Literacy} {Reflected} in {Teachers}’ {Attitudes} {Towards} {ICT}: {Case} {Study} of the {Czech} {Republic}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = may,
  number     = {3},
  pages      = {231},
  volume     = {2},
  doi        = {10.1007/s42979-021-00567-y},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\442Q5ZVV\\Cirus and Simonova - 2021 - Pupils’ Digital Literacy Reflected in Teachers’ At.pdf:application/pdf},
  language   = {en},
  shorttitle = {Pupils’ {Digital} {Literacy} {Reflected} in {Teachers}’ {Attitudes} {Towards} {ICT}},
  url        = {https://link.springer.com/10.1007/s42979-021-00567-y},
  urldate    = {2021-10-24},
}

@Article{Grzelak2021,
  author   = {Grzelak, Dominik and Aßmann, Uwe},
  journal  = {SN Computer Science},
  title    = {A {Canonical} {String} {Encoding} for {Pure} {Bigraphs}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = jul,
  number   = {4},
  pages    = {246},
  volume   = {2},
  abstract = {Abstract
            
              The bigraph theory, devised by Robin Milner, is a recent mathematical framework for concurrent processes. Its generality is able to subsume many existing process calculi, for example, CCS, CSP, and Petri nets. Further, it provides a uniform proof of bisimilarity, which is a congruence. We present the first
              canonical string encoding
              for
              pure and lean bigraphs
              by lifting the breadth-first canonical form of rooted unordered trees to a unique representation for bigraphs up to isomorphism (i.e.,
              lean-support equivalence
              ). The encoding’s applicability is limited to atomic alphabets. The time complexity is
              
                
                  \$\$O(n{\textasciicircum}\{2\}k{\textbackslash}, d {\textbackslash}log \{d\})\$\$
                  
                    
                      O
                      (
                      
                        n
                        2
                      
                      k
                      
                      d
                      log
                      d
                      )
                    
                  
                
              
              , where
              n
              is the number of places,
              d
              the degree of the place graph and
              k
              the maximum arity of a bigraph’s signature. We provide proof of the correctness of our method and also conduct experimental measurements to assess the complexity.},
  doi      = {10.1007/s42979-021-00552-5},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\9YKNILV5\\Grzelak and Aßmann - 2021 - A Canonical String Encoding for Pure Bigraphs.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00552-5},
  urldate  = {2021-10-24},
}

@Article{Arunachalam2021,
  author   = {Arunachalam, Amutha and Seetharaman, K. and Agarwal, Ashish},
  journal  = {SN Computer Science},
  title    = {Design and {Development} of a {Cyber} {Security} {Framework} for {National} {Time} {Dissemination}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = apr,
  number   = {2},
  pages    = {77},
  volume   = {2},
  doi      = {10.1007/s42979-021-00471-5},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\3S3IEWHE\\Arunachalam et al. - 2021 - Design and Development of a Cyber Security Framewo.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s42979-021-00471-5},
  urldate  = {2021-10-24},
}

@Article{Kuutila2021,
  author     = {Kuutila, Miikka and Mäntylä, Mika and Claes, Maëlick and Elovainio, Marko and Adams, Bram},
  journal    = {Empirical Software Engineering},
  title      = {Individual differences limit predicting well-being and productivity using software repositories: a longitudinal industrial study},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = sep,
  number     = {5},
  pages      = {88},
  volume     = {26},
  abstract   = {Abstract
            
              Reports of poor work well-being and fluctuating productivity in software engineering have been reported in both academic and popular sources. Understanding and predicting these issues through repository analysis might help manage software developers’ well-being. Our objective is to link data from software repositories, that is commit activity, communication, expressed sentiments, and job events, with measures of well-being obtained with a daily experience sampling questionnaire. To achieve our objective, we studied a single software project team for eight months in the software industry. Additionally, we performed semi-structured interviews to explain our results. The acquired quantitative data are analyzed with generalized linear mixed-effects models with autocorrelation structure. We find that individual variance accounts for most of the
              R
              2
              values in models predicting developers’ experienced well-being and productivity. In other words, using software repository variables to predict developers’ well-being or productivity is challenging due to individual differences. Prediction models developed for each developer individually work better, with fixed effects
              R
              2
              value of up to 0.24. The semi-structured interviews give insights into the well-being of software developers and the benefits of chat interaction. Our study suggests that individualized prediction models are needed for well-being and productivity prediction in software development.},
  doi        = {10.1007/s10664-021-09977-1},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\UK8IZJKC\\Kuutila et al. - 2021 - Individual differences limit predicting well-being.pdf:application/pdf},
  language   = {en},
  shorttitle = {Individual differences limit predicting well-being and productivity using software repositories},
  url        = {https://link.springer.com/10.1007/s10664-021-09977-1},
  urldate    = {2021-10-24},
}

@Article{ChukaMaduji2021,
  author     = {Chuka-Maduji, Nnamdi and Anu, Vaibhav},
  journal    = {SN Computer Science},
  title      = {Cloud {Computing} {Security} {Challenges} and {Related} {Defensive} {Measures}: {A} {Survey} and {Taxonomy}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = jul,
  number     = {4},
  pages      = {331},
  volume     = {2},
  doi        = {10.1007/s42979-021-00732-3},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\PR872M5I\\Chuka-Maduji and Anu - 2021 - Cloud Computing Security Challenges and Related De.pdf:application/pdf},
  language   = {en},
  shorttitle = {Cloud {Computing} {Security} {Challenges} and {Related} {Defensive} {Measures}},
  url        = {https://link.springer.com/10.1007/s42979-021-00732-3},
  urldate    = {2021-10-24},
}

@Article{Mohamad2021,
  author   = {Mohamad, Mazen and Steghöfer, Jan-Philipp and Scandariato, Riccardo},
  journal  = {Empirical Software Engineering},
  title    = {Security assurance cases—state of the art of an emerging approach},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = jul,
  number   = {4},
  pages    = {70},
  volume   = {26},
  abstract = {Abstract
            Security Assurance Cases (SAC) are a form of structured argumentation used to reason about the security properties of a system. After the successful adoption of assurance cases for safety, SAC are getting significant traction in recent years, especially in safety-critical industries (e.g., automotive), where there is an increasing pressure to be compliant with several security standards and regulations. Accordingly, research in the field of SAC has flourished in the past decade, with different approaches being investigated. In an effort to systematize this active field of research, we conducted a systematic literature review (SLR) of the existing academic studies on SAC. Our review resulted in an in-depth analysis and comparison of 51 papers. Our results indicate that, while there are numerous papers discussing the importance of SAC and their usage scenarios, the literature is still immature with respect to concrete support for practitioners on how to build and maintain a SAC. More importantly, even though some methodologies are available, their validation and tool support is still lacking.},
  doi      = {10.1007/s10664-021-09971-7},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\WW69WDN9\\Mohamad et al. - 2021 - Security assurance cases—state of the art of an em.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-09971-7},
  urldate  = {2021-10-24},
}

@Article{Giantamidis2021,
  author   = {Giantamidis, Georgios and Tripakis, Stavros and Basagiannis, Stylianos},
  journal  = {International Journal on Software Tools for Technology Transfer},
  title    = {Learning {Moore} machines from input–output traces},
  year     = {2021},
  issn     = {1433-2779, 1433-2787},
  month    = feb,
  number   = {1},
  pages    = {1--29},
  volume   = {23},
  doi      = {10.1007/s10009-019-00544-0},
  file     = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\BICN5JIS\\Giantamidis et al. - 2021 - Learning Moore machines from input–output traces.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s10009-019-00544-0},
  urldate  = {2021-10-24},
}

@Article{Feroze2021,
  author     = {Feroze, Aqeel and Daud, Ali and Amjad, Tehmina and Hayat, Malik Khizar},
  journal    = {SN Computer Science},
  title      = {Group {Anomaly} {Detection}: {Past} {Notions}, {Present} {Insights}, and {Future} {Prospects}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = may,
  number     = {3},
  pages      = {219},
  volume     = {2},
  doi        = {10.1007/s42979-021-00603-x},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\BHNE9KTP\\Feroze et al. - 2021 - Group Anomaly Detection Past Notions, Present Ins.pdf:application/pdf},
  language   = {en},
  shorttitle = {Group {Anomaly} {Detection}},
  url        = {https://link.springer.com/10.1007/s42979-021-00603-x},
  urldate    = {2021-10-24},
}

@Article{Wang2021e,
  author     = {Wang, Liu and He, Ren and Wang, Haoyu and Xia, Pengcheng and Li, Yuanchun and Wu, Lei and Zhou, Yajin and Luo, Xiapu and Sui, Yulei and Guo, Yao and Xu, Guoai},
  journal    = {Empirical Software Engineering},
  title      = {Beyond the virus: a first look at coronavirus-themed {Android} malware},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = jul,
  number     = {4},
  pages      = {82},
  volume     = {26},
  doi        = {10.1007/s10664-021-09974-4},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\843Q3GEJ\\Wang et al. - 2021 - Beyond the virus a first look at coronavirus-them.pdf:application/pdf},
  language   = {en},
  shorttitle = {Beyond the virus},
  url        = {https://link.springer.com/10.1007/s10664-021-09974-4},
  urldate    = {2021-10-24},
}

@Article{Wang2021f,
  author     = {Wang, Yingying and Kadiyala, Harshavardhan and Rubin, Julia},
  journal    = {Empirical Software Engineering},
  title      = {Promises and challenges of microservices: an exploratory study},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = jul,
  number     = {4},
  pages      = {63},
  volume     = {26},
  doi        = {10.1007/s10664-020-09910-y},
  language   = {en},
  shorttitle = {Promises and challenges of microservices},
  url        = {https://link.springer.com/10.1007/s10664-020-09910-y},
  urldate    = {2021-10-24},
}

@Article{Sen2021,
  author     = {Sen, Sudipta and Mehta, Akash and Ganguli, Runa and Sen, Soumya},
  journal    = {SN Computer Science},
  title      = {Recommendation of {Influenced} {Products} {Using} {Association} {Rule} {Mining}: {Neo4j} as a {Case} {Study}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = apr,
  number     = {2},
  pages      = {74},
  volume     = {2},
  doi        = {10.1007/s42979-021-00460-8},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\5QM28MRG\\Sen et al. - 2021 - Recommendation of Influenced Products Using Associ.pdf:application/pdf},
  language   = {en},
  shorttitle = {Recommendation of {Influenced} {Products} {Using} {Association} {Rule} {Mining}},
  url        = {http://link.springer.com/10.1007/s42979-021-00460-8},
  urldate    = {2021-10-24},
}

@Article{Brdjanin2021,
  author   = {Brdjanin, Drazen and Ilic, Stefan and Banjac, Goran and Banjac, Danijela and Maric, Slavko},
  journal  = {Software and Systems Modeling},
  title    = {Automatic derivation of conceptual database models from differently serialized business process models},
  year     = {2021},
  issn     = {1619-1366, 1619-1374},
  month    = feb,
  number   = {1},
  pages    = {89--115},
  volume   = {20},
  doi      = {10.1007/s10270-020-00808-3},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10270-020-00808-3},
  urldate  = {2021-10-24},
}

@Article{Niedermaier2021,
  author   = {Niedermaier, Sina and Zelenik, Thommy and Heisse, Stefan and Wagner, Stefan},
  journal  = {Software Quality Journal},
  title    = {Evaluate and control service and transaction dependability of complex {IoT} systems},
  year     = {2021},
  issn     = {0963-9314, 1573-1367},
  month    = may,
  abstract = {Abstract
            Observing and controlling the dependability of service provision of complex IoT systems is challenging. In practice, many organizations struggle to derive consumer needs related to quality and to observe and quantify the service provision in the context of the dynamic behavior of a complex distributed system. In this paper, we present an approach to define and evaluate the dependability of complex IoT systems. Our approach is an adaptation of the ISO/IEC 25040, an international standard for the evaluation process for system and software quality, which is part of the systems and software quality requirements and evaluation (SQuaRE) series. Our approach was designed and evaluated with action research in an industrial study at Robert Bosch GmbH. Based on the framework of the SQuaRE series, we integrated different elements of site reliability engineering (SRE) and combined them with distributed tracing as a promising measurement method. Our approach introduces the IoT transaction concept to reduce modeling and observation efforts while increasing operationalization to measure performance against dependability targets. Our adaption was effectively applied, consumer-centricity along different system stakeholders were enhanced, and negative consequences of organizational silos were reduced. This has improved the dependability evaluation of service provision to enable fast feedback cycles for service performance control and improvement.},
  doi      = {10.1007/s11219-021-09556-z},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\8B2653Z9\\Niedermaier et al. - 2021 - Evaluate and control service and transaction depen.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s11219-021-09556-z},
  urldate  = {2021-10-24},
}

@Article{Abbad Andaloussi2021,
  author     = {Abbad Andaloussi, Amine and Zerbato, Francesca and Burattin, Andrea and Slaats, Tijs and Hildebrandt, Thomas T. and Weber, Barbara},
  journal    = {Software and Systems Modeling},
  title      = {Exploring how users engage with hybrid process artifacts based on declarative process models: a behavioral analysis based on eye-tracking and think-aloud},
  year       = {2021},
  issn       = {1619-1366, 1619-1374},
  month      = oct,
  number     = {5},
  pages      = {1437--1464},
  volume     = {20},
  doi        = {10.1007/s10270-020-00811-8},
  file       = {Accepted Version:C\:\\Users\\Sina\\Zotero\\storage\\9M2EE5TZ\\Abbad Andaloussi et al. - 2021 - Exploring how users engage with hybrid process art.pdf:application/pdf},
  language   = {en},
  shorttitle = {Exploring how users engage with hybrid process artifacts based on declarative process models},
  url        = {https://link.springer.com/10.1007/s10270-020-00811-8},
  urldate    = {2021-10-24},
}

@Article{Eken2021,
  author   = {Eken, Beyza and Palma, Francis and Ayşe, Başar and Ayşe, Tosun},
  journal  = {Software Quality Journal},
  title    = {An empirical study on the effect of community smells on bug prediction},
  year     = {2021},
  issn     = {0963-9314, 1573-1367},
  month    = mar,
  number   = {1},
  pages    = {159--194},
  volume   = {29},
  doi      = {10.1007/s11219-020-09538-7},
  language = {en},
  url      = {http://link.springer.com/10.1007/s11219-020-09538-7},
  urldate  = {2021-10-24},
}

@Article{Wang2021g,
  author     = {Wang, Dong and Xiao, Tao and Thongtanunam, Patanamon and Kula, Raula Gaikovina and Matsumoto, Kenichi},
  journal    = {Empirical Software Engineering},
  title      = {Understanding shared links and their intentions to meet information needs in modern code review:: {A} case study of the {OpenStack} and {Qt} projects},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = sep,
  number     = {5},
  pages      = {96},
  volume     = {26},
  abstract   = {Abstract
            Code reviews serve as a quality assurance activity for software teams. Especially for Modern Code Review, sharing a link during a review discussion serves as an effective awareness mechanism where “Code reviews are good FYIs [for your information].”. Although prior work has explored link sharing and the information needs of a code review, the extent to which links are used to properly conduct a review is unknown. In this study, we performed a mixed-method approach to investigate the practice of link sharing and their intentions. First, through a quantitative study of the OpenStack and Qt projects, we identify 19,268 reviews that have 39,686 links to explore the extent to which the links are shared, and analyze a correlation between link sharing and review time. Then in a qualitative study, we manually analyze 1,378 links to understand the role and usefulness of link sharing. Results indicate that internal links are more widely referred to (93\% and 80\% for the two projects). Importantly, although the majority of the internal links are referencing to reviews, bug reports and source code are also shared in review discussions. The statistical models show that the number of internal links as an explanatory factor does have an increasing relationship with the review time. Finally, we present seven intentions of link sharing, with providing context being the most common intention for sharing links. Based on the findings and a developer survey, we encourage the patch author to provide clear context and explore both internal and external resources, while the review team should continue link sharing activities. Future research directions include the investigation of causality between sharing links and the review process, as well as the potential for tool support.},
  doi        = {10.1007/s10664-021-09997-x},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\8MSC5WBE\\Wang et al. - 2021 - Understanding shared links and their intentions to.pdf:application/pdf},
  language   = {en},
  shorttitle = {Understanding shared links and their intentions to meet information needs in modern code review},
  url        = {https://link.springer.com/10.1007/s10664-021-09997-x},
  urldate    = {2021-10-24},
}

@Article{Hrusto2021,
  author   = {Hrusto, Adha and Runeson, Per and Engström, Emelie},
  journal  = {SN Computer Science},
  title    = {Closing the {Feedback} {Loop} in {DevOps} {Through} {Autonomous} {Monitors} in {Operations}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = nov,
  number   = {6},
  pages    = {447},
  volume   = {2},
  abstract = {Abstract
            DevOps represent the tight connection between development and operations. To address challenges that arise on the borderline between development and operations, we conducted a study in collaboration with a Swedish company responsible for ticket management and sales in public transportation. The aim of our study was to explore and describe the existing DevOps environment, as well as to identify how the feedback from operations can be improved, specifically with respect to the alerts sent from system operations. Our study complies with the basic principles of the design science paradigm, such as understanding and improving design solutions in the specific areas of practice. Our diagnosis, based on qualitative data collected through interviews and observations, shows that alert flooding is a challenge in the feedback loop, i.e. too much signals from operations create noise in the feedback loop. Therefore, we design a solution to improve the alert management by optimizing when to raise alerts and accordingly introducing a new element in the feedback loop, a smart filter. Moreover, we implemented a prototype of the proposed solution design and showed that a tighter relation between operations and development can be achieved, using a hybrid method which combines rule-based and unsupervised machine learning for operations data analysis.},
  doi      = {10.1007/s42979-021-00826-y},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\AG6YRG6X\\Hrusto et al. - 2021 - Closing the Feedback Loop in DevOps Through Autono.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00826-y},
  urldate  = {2021-10-24},
}

@Article{Kang2021a,
  author   = {Kang, Yihuang and Huang, Sheng-Tai and Wu, Ping-Hsung},
  journal  = {SN Computer Science},
  title    = {Detection of {Drug}–{Drug} and {Drug}–{Disease} {Interactions} {Inducing} {Acute} {Kidney} {Injury} {Using} {Deep} {Rule} {Forests}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = jul,
  number   = {4},
  pages    = {299},
  volume   = {2},
  doi      = {10.1007/s42979-021-00670-0},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\W94LTJKX\\Kang et al. - 2021 - Detection of Drug–Drug and Drug–Disease Interactio.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00670-0},
  urldate  = {2021-10-24},
}

@Article{Keserwani2021,
  author   = {Keserwani, Pankaj Kumar and Govil, Mahesh Chandra and Pilli, Emmanuel S. and Govil, Prajjval},
  journal  = {Journal of Reliable Intelligent Environments},
  title    = {A smart anomaly-based intrusion detection system for the {Internet} of {Things} ({IoT}) network using {GWO}–{PSO}–{RF} model},
  year     = {2021},
  issn     = {2199-4668, 2199-4676},
  month    = mar,
  number   = {1},
  pages    = {3--21},
  volume   = {7},
  doi      = {10.1007/s40860-020-00126-x},
  language = {en},
  url      = {http://link.springer.com/10.1007/s40860-020-00126-x},
  urldate  = {2021-10-24},
}

@Article{Singh2021b,
  author   = {Singh, Sukhpreet and Jagdev, Gagandeep},
  journal  = {SN Computer Science},
  title    = {Execution of {Structured} and {Unstructured} {Mining} in {Automotive} {Industry} {Using} {Hortonworks} {Sandbox}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = jul,
  number   = {4},
  pages    = {298},
  volume   = {2},
  doi      = {10.1007/s42979-021-00692-8},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\RMXWJ3X3\\Singh and Jagdev - 2021 - Execution of Structured and Unstructured Mining in.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00692-8},
  urldate  = {2021-10-24},
}

@Article{Lalejini2021,
  author   = {Lalejini, Alexander and Moreno, Matthew Andres and Ofria, Charles},
  journal  = {Genetic Programming and Evolvable Machines},
  title    = {Tag-based regulation of modules in genetic programming improves context-dependent problem solving},
  year     = {2021},
  issn     = {1389-2576, 1573-7632},
  month    = sep,
  number   = {3},
  pages    = {325--355},
  volume   = {22},
  doi      = {10.1007/s10710-021-09406-8},
  file     = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\SBYGR66W\\Lalejini et al. - 2021 - Tag-based regulation of modules in genetic program.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10710-021-09406-8},
  urldate  = {2021-10-24},
}

@Article{Bhaskarwar2021,
  author     = {Bhaskarwar, Roshani V. and Pete, Dnyandeo J.},
  journal    = {SN Computer Science},
  title      = {Cross-{Layer} {Design} {Approaches} in {Underwater} {Wireless} {Sensor} {Networks}: {A} {Survey}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = sep,
  number     = {5},
  pages      = {362},
  volume     = {2},
  doi        = {10.1007/s42979-021-00754-x},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\ANWQ23Y4\\Bhaskarwar and Pete - 2021 - Cross-Layer Design Approaches in Underwater Wirele.pdf:application/pdf},
  language   = {en},
  shorttitle = {Cross-{Layer} {Design} {Approaches} in {Underwater} {Wireless} {Sensor} {Networks}},
  url        = {https://link.springer.com/10.1007/s42979-021-00754-x},
  urldate    = {2021-10-24},
}

@Article{Ali2021,
  author   = {Ali, Aftab and Khan, Naveed and Abu-Tair, Mamun and Noppen, Joost and McClean, Sally and McChesney, Ian},
  journal  = {Automated Software Engineering},
  title    = {Discriminating features-based cost-sensitive approach for software defect prediction},
  year     = {2021},
  issn     = {0928-8910, 1573-7535},
  month    = nov,
  number   = {2},
  pages    = {11},
  volume   = {28},
  abstract = {Abstract
            Correlated quality metrics extracted from a source code repository can be utilized to design a model to automatically predict defects in a software system. It is obvious that the extracted metrics will result in a highly unbalanced data, since the number of defects in a good quality software system should be far less than the number of normal instances. It is also a fact that the selection of the best discriminating features significantly improves the robustness and accuracy of a prediction model. Therefore, the contribution of this paper is twofold, first it selects the best discriminating features that help in accurately predicting a defect in a software component. Secondly, a cost-sensitive logistic regression and decision tree ensemble-based prediction models are applied to the best discriminating features for precisely predicting a defect in a software component. The proposed models are compared with the most recent schemes in the literature in terms of accuracy, area under the curve, and recall. The models are evaluated using 11 datasets and it is evident from the results and analysis that the performance of the proposed prediction models outperforms the schemes in the literature.},
  doi      = {10.1007/s10515-021-00289-8},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\XSHUXI5I\\Ali et al. - 2021 - Discriminating features-based cost-sensitive appro.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10515-021-00289-8},
  urldate  = {2021-10-24},
}

@Article{Panahandeh2021,
  author     = {Panahandeh, Mahsa and Hamdaqa, Mohammad and Zamani, Bahman and Hamou-Lhadj, Abdelwahab},
  journal    = {Software and Systems Modeling},
  title      = {{MUPPIT}: a method for using proper patterns in model transformations},
  year       = {2021},
  issn       = {1619-1366, 1619-1374},
  month      = oct,
  number     = {5},
  pages      = {1491--1523},
  volume     = {20},
  doi        = {10.1007/s10270-020-00853-y},
  language   = {en},
  shorttitle = {{MUPPIT}},
  url        = {https://link.springer.com/10.1007/s10270-020-00853-y},
  urldate    = {2021-10-24},
}

@Article{Farshidi2021,
  author     = {Farshidi, Siamak and Jansen, Slinger and Fortuin, Sven},
  journal    = {Software and Systems Modeling},
  title      = {Model-driven development platform selection: four industry case studies},
  year       = {2021},
  issn       = {1619-1366, 1619-1374},
  month      = oct,
  number     = {5},
  pages      = {1525--1551},
  volume     = {20},
  abstract   = {Abstract
            Model-driven development platforms shift the focus of software development activity from coding to modeling for enterprises. A significant number of such platforms are available in the market. Selecting the best fitting platform is challenging, as domain experts are not typically model-driven deployment platform experts and have limited time for acquiring the needed knowledge. We model the problem as a multi-criteria decision-making problem and capture knowledge systematically about the features and qualities of 30 alternative platforms. Through four industry case studies, we confirm that the model supports decision-makers with the selection problem by reducing the time and cost of the decision-making process and by providing a richer list of options than the enterprises considered initially. We show that having decision knowledge readily available supports decision-makers in making more rational, efficient, and effective decisions. The study’s theoretical contribution is the observation that the decision framework provides a reliable approach for creating decision models in software production.},
  doi        = {10.1007/s10270-020-00855-w},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\T3FS4KTQ\\Farshidi et al. - 2021 - Model-driven development platform selection four .pdf:application/pdf},
  language   = {en},
  shorttitle = {Model-driven development platform selection},
  url        = {https://link.springer.com/10.1007/s10270-020-00855-w},
  urldate    = {2021-10-24},
}

@Article{Buzaaba2021,
  author     = {Buzaaba, Happy and Amagasa, Toshiyuki},
  journal    = {SN Computer Science},
  title      = {Question {Answering} {Over} {Knowledge} {Base}: {A} {Scheme} for {Integrating} {Subject} and the {Identified} {Relation} to {Answer} {Simple} {Questions}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = feb,
  number     = {1},
  pages      = {25},
  volume     = {2},
  abstract   = {Abstract
            Answering natural language question over a knowledge base is an important and challenging task with a wide range of application in natural language processing and information retrieval. Several existing knowledge-based question answering systems exploit complex end-to-end neural network approaches that are computationally expensive and take long to execute when training the neural network. More importantly, such an end-to-end approach makes it difficult to examine the process of query processing. In this study, we decompose the question answering problem in a three-step pipeline of entity detection, entity linking, and relation prediction, and solve each component separately. We explore basic neural network and non-neural network methods for entity detection and relation prediction plus a few heuristics for entity linking. We also introduce a method to identify ambiguity in the data and show that ambiguity in the data bounds the performance of the question answering system. The experiment on the SimpleQuestions benchmark data set shows that a combination of basic LSTMs, GRUs, and non-neural network techniques achieve reasonable performance while providing an opportunity to understand the question answering problem structure.},
  doi        = {10.1007/s42979-020-00421-7},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\MI7ZY3E4\\Buzaaba and Amagasa - 2021 - Question Answering Over Knowledge Base A Scheme f.pdf:application/pdf},
  language   = {en},
  shorttitle = {Question {Answering} {Over} {Knowledge} {Base}},
  url        = {http://link.springer.com/10.1007/s42979-020-00421-7},
  urldate    = {2021-10-24},
}

@Article{Gorrieri2021,
  author   = {Gorrieri, Roberto},
  journal  = {Acta Informatica},
  title    = {Team bisimilarity, and its associated modal logic, for {BPP} nets},
  year     = {2021},
  issn     = {0001-5903, 1432-0525},
  month    = oct,
  number   = {5},
  pages    = {529--569},
  volume   = {58},
  doi      = {10.1007/s00236-020-00377-4},
  language = {en},
  url      = {https://link.springer.com/10.1007/s00236-020-00377-4},
  urldate  = {2021-10-24},
}

@Article{Arul2021,
  author   = {Arul, E. and Punidha, A.},
  journal  = {SN Computer Science},
  title    = {Supervised {Deep} {Learning} {Vector} {Quantization} to {Detect} {MemCached} {DDOS} {Malware} {Attack} on {Cloud}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = apr,
  number   = {2},
  pages    = {85},
  volume   = {2},
  doi      = {10.1007/s42979-021-00477-z},
  language = {en},
  url      = {http://link.springer.com/10.1007/s42979-021-00477-z},
  urldate  = {2021-10-24},
}

@Article{Goren2021,
  author     = {Goren, Guy and Moses, Yoram},
  journal    = {Distributed Computing},
  title      = {Optimistically tuning synchronous byzantine consensus: another win for null messages},
  year       = {2021},
  issn       = {0178-2770, 1432-0452},
  month      = oct,
  number     = {5},
  pages      = {395--410},
  volume     = {34},
  doi        = {10.1007/s00446-021-00393-8},
  language   = {en},
  shorttitle = {Optimistically tuning synchronous byzantine consensus},
  url        = {https://link.springer.com/10.1007/s00446-021-00393-8},
  urldate    = {2021-10-24},
}

@Article{Phan2021,
  author   = {Phan, Anh-Cang and Phan, Thuong-Cang and Trieu, Thanh-Ngoan and Tran, Thi-To-Quyen},
  journal  = {SN Computer Science},
  title    = {A {Theoretical} and {Experimental} {Comparison} of {Large}-{Scale} {Join} {Algorithms} in {Spark}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = sep,
  number   = {5},
  pages    = {352},
  volume   = {2},
  doi      = {10.1007/s42979-021-00738-x},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\YUDM2FEE\\Phan et al. - 2021 - A Theoretical and Experimental Comparison of Large.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00738-x},
  urldate  = {2021-10-24},
}

@Article{Rong2021,
  author   = {Rong, Guoping and Xu, Yangchen and Tong, Xinxin and Fan, Haojun},
  journal  = {Journal of Cloud Computing},
  title    = {An edge-cloud collaborative computing platform for building {AIoT} applications efficiently},
  year     = {2021},
  issn     = {2192-113X},
  month    = dec,
  number   = {1},
  pages    = {36},
  volume   = {10},
  abstract = {Abstract
            
              The convergence of Artificial Intelligence (AI) and the Internet of Things (IoT), or AIoT, has breathed a new life into IoT operations and human-machine interactions. Currently, resource-constrained IoT devices usually cannot provide sufficient capability for data storage and processing so as to support building modern AI models. An intuitive solution is to integrate cloud computing technology into AIoT and exploit the powerful and elastic computing as well as the storage capacity of the servers on the cloud end. Nevertheless, the network bandwidth and communication latency increasingly become serious bottlenecks. The emerging edge computing can complement the cloud-based AIoT in terms of communication latency, and hence attracts more and more attention from the AIoT area. In this paper, we present an industrial edge-cloud collaborative computing platform, namely
              Sophon Edge
              , that helps to build and deploy AIoT applications efficiently. As an enterprise-level solution for the AIoT computing paradigm,
              Sophon Edge
              adopts a pipeline-based computing model for streaming data from IoT devices. Besides, this platform supports an iterative way for model evolution and updating so as to enable the AIoT applications agile and data-driven. Through a real-world example, we demonstrate the effectiveness and efficiency of building an AIoT application based on the
              Sophon Edge
              platform.},
  doi      = {10.1186/s13677-021-00250-w},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\K2ASL7GE\\Rong et al. - 2021 - An edge-cloud collaborative computing platform for.pdf:application/pdf},
  language = {en},
  url      = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-021-00250-w},
  urldate  = {2021-10-24},
}

@Article{Goyal2021,
  author   = {Goyal, Somya},
  journal  = {Automated Software Engineering},
  title    = {Predicting the {Defects} using {Stacked} {Ensemble} {Learner} with {Filtered} {Dataset}},
  year     = {2021},
  issn     = {0928-8910, 1573-7535},
  month    = nov,
  number   = {2},
  pages    = {14},
  volume   = {28},
  doi      = {10.1007/s10515-021-00285-y},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10515-021-00285-y},
  urldate  = {2021-10-24},
}

@Article{Liu2021f,
  author   = {Liu, Haoran and Yu, Yue and Li, Shanshan and Geng, Mingyang and Mao, Xiaoguang and Liao, Xiangke},
  journal  = {Empirical Software Engineering},
  title    = {How to cherry pick the bug report for better summarization?},
  year     = {2021},
  issn     = {1382-3256, 1573-7616},
  month    = nov,
  number   = {6},
  pages    = {119},
  volume   = {26},
  doi      = {10.1007/s10664-021-10008-2},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-10008-2},
  urldate  = {2021-10-24},
}

@Article{Safdar2021,
  author   = {Safdar, Safdar Aqeel and Lu, Hong and Yue, Tao and Ali, Shaukat and Nie, Kunming},
  journal  = {Software and Systems Modeling},
  title    = {A framework for automated multi-stage and multi-step product configuration of cyber-physical systems},
  year     = {2021},
  issn     = {1619-1366, 1619-1374},
  month    = feb,
  number   = {1},
  pages    = {211--265},
  volume   = {20},
  doi      = {10.1007/s10270-020-00803-8},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10270-020-00803-8},
  urldate  = {2021-10-24},
}

@Article{Bulla2021,
  author   = {Bulla, Chetan and Birje, Mahantesh N.},
  journal  = {Journal of Reliable Intelligent Environments},
  title    = {Improved data-driven root cause analysis in fog computing environment},
  year     = {2021},
  issn     = {2199-4668, 2199-4676},
  month    = oct,
  doi      = {10.1007/s40860-021-00158-x},
  language = {en},
  url      = {https://link.springer.com/10.1007/s40860-021-00158-x},
  urldate  = {2021-10-24},
}

@Article{Bredereck2021,
  author     = {Bredereck, Robert and Kaczmarczyk, Andrzej and Niedermeier, Rolf},
  journal    = {Autonomous Agents and Multi-Agent Systems},
  title      = {On coalitional manipulation for multiwinner elections: shortlisting},
  year       = {2021},
  issn       = {1387-2532, 1573-7454},
  month      = oct,
  number     = {2},
  pages      = {38},
  volume     = {35},
  abstract   = {Abstract
            
              Shortlisting of candidates—selecting a group of “best” candidates—is a special case of multiwinner elections. We provide the first in-depth study of the computational complexity of strategic voting for shortlisting based on the perhaps most basic voting rule in this scenario,
              
                
                  \$\${\textbackslash}ell \$\$
                  
                    ℓ
                  
                
              
              -Bloc (every voter approves
              
                
                  \$\${\textbackslash}ell \$\$
                  
                    ℓ
                  
                
              
               candidates). In particular, we investigate the influence of several different group evaluation functions (e.g., egalitarian versus utilitarian) and tie-breaking mechanisms modeling pessimistic and optimistic manipulators. Among other things, we conclude that in an egalitarian setting strategic voting may indeed be computationally intractable regardless of the tie-breaking rule. Altogether, we provide a fairly comprehensive picture of the computational complexity landscape of this scenario.},
  doi        = {10.1007/s10458-021-09507-9},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\ACXCFK5N\\Bredereck et al. - 2021 - On coalitional manipulation for multiwinner electi.pdf:application/pdf},
  language   = {en},
  shorttitle = {On coalitional manipulation for multiwinner elections},
  url        = {https://link.springer.com/10.1007/s10458-021-09507-9},
  urldate    = {2021-10-24},
}

@Article{Sullivan2021,
  author     = {Sullivan, Daniel and Caminha, Carlos and Dantas, Victor and Furtado, Elizabeth and Furtado, Vasco and Almeida, Virgílio},
  journal    = {SN Computer Science},
  title      = {Understanding the {Impact} of the {Alphabetical} {Ordering} of {Names} in {User} {Interfaces}: {A} {Potential} {Approach} for {Gender} {Bias} {Identification}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = nov,
  number     = {6},
  pages      = {472},
  volume     = {2},
  doi        = {10.1007/s42979-021-00877-1},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\6AC93ZBQ\\Sullivan et al. - 2021 - Understanding the Impact of the Alphabetical Order.pdf:application/pdf},
  language   = {en},
  shorttitle = {Understanding the {Impact} of the {Alphabetical} {Ordering} of {Names} in {User} {Interfaces}},
  url        = {https://link.springer.com/10.1007/s42979-021-00877-1},
  urldate    = {2021-10-24},
}

@Article{Vinutha2021,
  author   = {Vinutha, D. C. and Raju, G. T.},
  journal  = {SN Computer Science},
  title    = {Budget {Constraint} {Scheduler} for {Big} {Data} {Using} {Hadoop} {MapReduce}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = jul,
  number   = {4},
  pages    = {250},
  volume   = {2},
  doi      = {10.1007/s42979-021-00638-0},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\Q3KVK3U5\\Vinutha and Raju - 2021 - Budget Constraint Scheduler for Big Data Using Had.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00638-0},
  urldate  = {2021-10-24},
}

@Article{Han2021,
  author   = {Han, Pujie and Zhai, Zhengjun and Nielsen, Brian and Nyman, Ulrik},
  journal  = {International Journal on Software Tools for Technology Transfer},
  title    = {Model-based optimization of {ARINC}-653 partition scheduling},
  year     = {2021},
  issn     = {1433-2779, 1433-2787},
  month    = feb,
  abstract = {Abstract
            The architecture of ARINC-653 partitioned scheduling has been widely applied to avionics systems owing to its robust temporal isolation among applications. However, this partitioning mechanism causes the problem of how to optimize the partition scheduling of a complex system while guaranteeing its schedulability. In this paper, a model-based optimization approach is proposed. We formulate the problem as a parameter sweep application, which searches for the optimal partition scheduling parameters with respect to minimum processor occupancy via an evolutionary algorithm. An ARINC-653 partitioned scheduling system is modeled as a set of timed automata in the model checker UPPAAL. The optimizer tentatively assigns parameter settings to the models and subsequently invokes UPPAAL to verify schedulability as well as evaluate promising solutions. The parameter space is explored with an evolutionary algorithm that combines refined genetic operators and the self-adaptation of evolution strategies. The experimental results show the applicability of our optimization method.},
  doi      = {10.1007/s10009-020-00597-6},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\YBQHGTA8\\Han et al. - 2021 - Model-based optimization of ARINC-653 partition sc.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s10009-020-00597-6},
  urldate  = {2021-10-24},
}

@Article{Sipper2021,
  author   = {Sipper, Moshe},
  journal  = {SN Computer Science},
  title    = {Neural {Networks} with À {La} {Carte} {Selection} of {Activation} {Functions}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = nov,
  number   = {6},
  pages    = {470},
  volume   = {2},
  doi      = {10.1007/s42979-021-00885-1},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\GW53FKE4\\Sipper - 2021 - Neural Networks with À La Carte Selection of Activ.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00885-1},
  urldate  = {2021-10-24},
}

@Article{Mahadi2022,
  author   = {Mahadi, Alvi and Ernst, Neil A. and Tongay, Karan},
  journal  = {Empirical Software Engineering},
  title    = {Conclusion stability for natural language based mining of design discussions},
  year     = {2022},
  issn     = {1382-3256, 1573-7616},
  month    = jan,
  number   = {1},
  pages    = {9},
  volume   = {27},
  doi      = {10.1007/s10664-021-10009-1},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10664-021-10009-1},
  urldate  = {2021-10-24},
}

@Article{Esparza2021,
  author   = {Esparza, Javier and Jaax, Stefan and Raskin, Mikhail and Weil-Kennedy, Chana},
  journal  = {Distributed Computing},
  title    = {The complexity of verifying population protocols},
  year     = {2021},
  issn     = {0178-2770, 1432-0452},
  month    = apr,
  number   = {2},
  pages    = {133--177},
  volume   = {34},
  abstract = {Abstract
            
              Population protocols (Angluin et al. in PODC, 2004) are a model of distributed computation in which indistinguishable, finite-state agents interact in pairs to decide if their initial configuration, i.e., the initial number of agents in each state, satisfies a given property. In a seminal paper Angluin et al. classified population protocols according to their communication mechanism, and conducted an exhaustive study of the expressive power of each class, that is, of the properties they can decide (Angluin et al. in Distrib Comput 20(4):279–304, 2007). In this paper we study the correctness problem for population protocols, i.e., whether a given protocol decides a given property. A previous paper (Esparza et al. in Acta Inform 54(2):191–215, 2017) has shown that the problem is decidable for the main population protocol model, but at least as hard as the reachability problem for Petri nets, which has recently been proved to have non-elementary complexity. Motivated by this result, we study the computational complexity of the correctness problem for all other classes introduced by Angluin et al., some of which are less powerful than the main model. Our main results show that for the class of observation models the complexity of the problem is much lower, ranging from
              
                
                  \$\${\textbackslash}varPi \_2{\textasciicircum}p\$\$
                  
                    
                      Π
                      2
                      p
                    
                  
                
              
              to .},
  doi      = {10.1007/s00446-021-00390-x},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\66GT6SSY\\Esparza et al. - 2021 - The complexity of verifying population protocols.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s00446-021-00390-x},
  urldate  = {2021-10-24},
}

@Article{Sharma2021,
  author   = {Sharma, Payal and Purushothama, B. R.},
  journal  = {SN Computer Science},
  title    = {Security {Analysis} of {Group} {Key} {Management} {Schemes} in {Wireless} {Sensor} {Networks} {Against} {IND}-{SAOA} {Game}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = jul,
  number   = {4},
  pages    = {261},
  volume   = {2},
  doi      = {10.1007/s42979-021-00645-1},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\XF4LKZGC\\Sharma and Purushothama - 2021 - Security Analysis of Group Key Management Schemes .pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00645-1},
  urldate  = {2021-10-24},
}

@Article{Jain2021a,
  author   = {Jain, Sukrutha A. and Bharadwaj, Avinash and Bisalavadi Nanjappa, Chandrashekar Murthy},
  journal  = {SN Computer Science},
  title    = {Characterizing {WDT} {Subsystem} of a {Wi}-{Fi} {Controller} in an {Automobile} {Based} on {MIPS32} {CPU} {Platform} {Across} {PVT}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = jul,
  number   = {4},
  pages    = {303},
  volume   = {2},
  doi      = {10.1007/s42979-021-00590-z},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\TRWPBEI4\\Jain et al. - 2021 - Characterizing WDT Subsystem of a Wi-Fi Controller.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00590-z},
  urldate  = {2021-10-24},
}

@Article{Olsson2021,
  author     = {Olsson, Thomas and Wnuk, Krzysztof and Jansen, Slinger},
  journal    = {Empirical Software Engineering},
  title      = {A validated model for the scoping process of quality requirements: a multi-case study},
  year       = {2021},
  issn       = {1382-3256, 1573-7616},
  month      = mar,
  number     = {2},
  pages      = {26},
  volume     = {26},
  abstract   = {Abstract
            Quality requirements are vital to developing successful software products. However, there exist evidence that quality requirements are managed mostly in an “ad hoc” manner and down-prioritized. This may result in insecure, unstable, slow products, and unhappy customers. We have developed a conceptual model for the scoping process of quality requirements – QREME – and an assessment model – Q-REPM – for companies to benchmark when evaluating and improving their quality requirements practices. Our model balances an upfront forward-loop with a data-driven feedback-loop. Furthermore, it addresses both strategic and operational decisions. We have evaluated the model in a multi-case study at two companies in Sweden and three companies in The Netherlands. We assessed the scoping process practices for quality requirements and provided improvement recommendations for which practices to improve. The study confirms the existence of the constructs underlying QREME. The companies perform, in the median, 24\% of the suggested actions in Q-REPM. None of the companies work data-driven with their quality requirements, even though four out of five companies could technically do so. Furthermore, on the strategic level, quality requirements practices are not systematically performed by any of the companies. The conceptual model and assessment model capture a relevant view of the quality requirements practices and offer relevant improvement proposals. However, we believe there is a need for coupling quality requirements practices to internal and external success factors to motive companies to change their ways of working. We also see improvement potential in the area of business intelligence for QREME in selecting data sources and relevant stakeholders.},
  doi        = {10.1007/s10664-020-09896-7},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\88Z86WC4\\Olsson et al. - 2021 - A validated model for the scoping process of quali.pdf:application/pdf},
  language   = {en},
  shorttitle = {A validated model for the scoping process of quality requirements},
  url        = {http://link.springer.com/10.1007/s10664-020-09896-7},
  urldate    = {2021-10-24},
}

@Article{Su2021,
  author   = {Su, Yanhui and Backlund, Per and Engström, Henrik},
  journal  = {Service Oriented Computing and Applications},
  title    = {Comprehensive review and classification of game analytics},
  year     = {2021},
  issn     = {1863-2386, 1863-2394},
  month    = jun,
  number   = {2},
  pages    = {141--156},
  volume   = {15},
  abstract = {Abstract
            As a business model, the essence of games is to provide a service to satisfy the player experience. From a business perspective, development in the game industry has led to the application of Business Intelligence (BI) becoming more and more extensive. However, related research lacks systematic examination and precise classification. This paper provides a comprehensive literature review of BI used in the game industry, focusing primarily on game analytics. This research mainly studies and discusses five aspects. First, we explore game analytics aspects in the available literature based on the traditional game value chain. Second, we find out the main purposes of using analytics in the game industry. Third, we present the problems or challenges in the game area, which can be addressed by using game analytics. Fourth, we also list different algorithms that have been used in game analytics for prediction. Finally, we summarize the research areas that have already been covered in literature but need further development. Based on the categories established after the mapping and the review findings, we also discuss the limitations of game analytics and propose potential research points for future research.},
  doi      = {10.1007/s11761-020-00303-z},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\EP7FITPB\\Su et al. - 2021 - Comprehensive review and classification of game an.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s11761-020-00303-z},
  urldate  = {2021-10-24},
}

@Article{Farrugia2021a,
  author   = {Farrugia, David and Zerafa, Christopher and Cini, Tony and Kuasney, Bruno and Livori, Karen},
  journal  = {SN Computer Science},
  title    = {A {Real}-{Time} {Prescriptive} {Solution} for {Explainable} {Cyber}-{Fraud} {Detection} {Within} the {iGaming} {Industry}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = may,
  number   = {3},
  pages    = {215},
  volume   = {2},
  doi      = {10.1007/s42979-021-00623-7},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\PG4LSHC7\\Farrugia et al. - 2021 - A Real-Time Prescriptive Solution for Explainable .pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00623-7},
  urldate  = {2021-10-24},
}

@Article{Dong2021,
  author     = {Dong, Xin and Li, Tong and Song, Rui and Ding, Zhiming},
  journal    = {Software and Systems Modeling},
  title      = {Profiling users via their reviews: an extended systematic mapping study},
  year       = {2021},
  issn       = {1619-1366, 1619-1374},
  month      = feb,
  number     = {1},
  pages      = {49--69},
  volume     = {20},
  doi        = {10.1007/s10270-020-00790-w},
  language   = {en},
  shorttitle = {Profiling users via their reviews},
  url        = {http://link.springer.com/10.1007/s10270-020-00790-w},
  urldate    = {2021-10-24},
}

@Article{Herzog2021,
  author   = {Herzog, Sebastian and Schiepel, Daniel and Guido, Isabella and Barta, Robin and Wagner, Claus},
  journal  = {SN Computer Science},
  title    = {A {Probabilistic} {Particle} {Tracking} {Framework} for {Guided} and {Brownian} {Motion} {Systems} with {High} {Particle} {Densities}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = nov,
  number   = {6},
  pages    = {485},
  volume   = {2},
  abstract = {Abstract
            This paper presents a new framework for particle tracking based on a Gaussian Mixture Model (GMM). It is an extension of the state-of-the-art iterative reconstruction of individual particles by a continuous modeling of the particle trajectories considering the position and velocity as coupled quantities. The proposed approach includes an initialization and a processing step. In the first step, the velocities at the initial points are determined after iterative reconstruction of individual particles of the first four images to be able to generate the tracks between these initial points. From there on, the tracks are extended in the processing step by searching for and including new points obtained from consecutive images based on continuous modeling of the particle trajectories with a Gaussian Mixture Model. The presented tracking procedure allows to extend existing trajectories interactively with low computing effort and to store them in a compact representation using little memory space. To demonstrate the performance and the functionality of this new particle tracking approach, it is successfully applied to a synthetic turbulent pipe flow, to the problem of observing particles corresponding to a Brownian motion (e.g., motion of cells), as well as to problems where the motion is guided by boundary forces, e.g., in the case of particle tracking velocimetry of turbulent Rayleigh–Bénard convection.},
  doi      = {10.1007/s42979-021-00879-z},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\JAMNC7UD\\Herzog et al. - 2021 - A Probabilistic Particle Tracking Framework for Gu.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00879-z},
  urldate  = {2021-10-24},
}

@Article{Tsou2021,
  author     = {Tsou, Yao-Tung and Alraja, Mansour Naser and Chen, Li-Sheng and Chang, Yu-Hsiang and Hu, Yung-Li and Huang, Yennun and Yu, Chia-Mu and Tsai, Pei-Yuan},
  journal    = {Service Oriented Computing and Applications},
  title      = {(\$\$k,{\textbackslash}varepsilon ,{\textbackslash}delta \$\$)-{Anonymization}: privacy-preserving data release based on k-anonymity and differential privacy},
  year       = {2021},
  issn       = {1863-2386, 1863-2394},
  month      = sep,
  number     = {3},
  pages      = {175--185},
  volume     = {15},
  doi        = {10.1007/s11761-021-00324-2},
  language   = {en},
  shorttitle = {(\$\$k,{\textbackslash}varepsilon ,{\textbackslash}delta \$\$)-{Anonymization}},
  url        = {https://link.springer.com/10.1007/s11761-021-00324-2},
  urldate    = {2021-10-24},
}

@Article{Lahami2021,
  author   = {Lahami, Mariam and Krichen, Moez},
  journal  = {Software Quality Journal},
  title    = {A survey on runtime testing of dynamically adaptable and distributed systems},
  year     = {2021},
  issn     = {0963-9314, 1573-1367},
  month    = jun,
  number   = {2},
  pages    = {555--593},
  volume   = {29},
  doi      = {10.1007/s11219-021-09558-x},
  language = {en},
  url      = {https://link.springer.com/10.1007/s11219-021-09558-x},
  urldate  = {2021-10-24},
}

@Article{Cai2021,
  author   = {Cai, Simin and Gallina, Barbara and Nyström, Dag and Seceleanu, Cristina},
  journal  = {Software and Systems Modeling},
  title    = {Specification and automated verification of atomic concurrent real-time transactions},
  year     = {2021},
  issn     = {1619-1366, 1619-1374},
  month    = apr,
  number   = {2},
  pages    = {557--589},
  volume   = {20},
  abstract = {Abstract
            Many database management systems (DBMS) need to ensure atomicity and isolation of transactions for logical data consistency, as well as to guarantee temporal correctness of the executed transactions. Since the mechanisms for atomicity and isolation may lead to breaching temporal correctness, trade-offs between these properties are often required during the DBMS design. To be able to address this concern, we have previously proposed the pattern-based UPPCART framework, which models the transactions and the DBMS mechanisms as timed automata, and verifies the trade-offs with provable guarantee. However, the manual construction of UPPCART models can require considerable effort and is prone to errors. In this paper, we advance the formal analysis of atomic concurrent real-time transactions with tool-automated construction of UPPCART models. The latter are generated automatically from our previously proposed UTRAN specifications, which are high-level UML-based specifications familiar to designers. To achieve this, we first propose formal definitions for the modeling patterns in UPPCART, as well as for the pattern-based construction of DBMS models, respectively. Based on this, we establish a translational semantics from UTRAN specifications to UPPCART models, to provide the former with a formal semantics relying on timed automata, and develop a tool that implements the automated transformation. We also extend the expressiveness of UTRAN and UPPCART, to incorporate transaction sequences and their timing properties. We demonstrate the specification in UTRAN, automated transformation to UPPCART, and verification of the traded-off properties, via an industrial use case.},
  doi      = {10.1007/s10270-020-00819-0},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\IP473WZK\\Cai et al. - 2021 - Specification and automated verification of atomic.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10270-020-00819-0},
  urldate  = {2021-10-24},
}

@Article{Zhang2021b,
  author   = {Zhang, Ruohan and Torabi, Faraz and Warnell, Garrett and Stone, Peter},
  journal  = {Autonomous Agents and Multi-Agent Systems},
  title    = {Recent advances in leveraging human guidance for sequential decision-making tasks},
  year     = {2021},
  issn     = {1387-2532, 1573-7454},
  month    = oct,
  number   = {2},
  pages    = {31},
  volume   = {35},
  doi      = {10.1007/s10458-021-09514-w},
  file     = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\NL7XKRDM\\Zhang et al. - 2021 - Recent advances in leveraging human guidance for s.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10458-021-09514-w},
  urldate  = {2021-10-24},
}

@Article{MohtashamKhani2021,
  author   = {Mohtasham Khani, Mahtab and Vahidnia, Sahand and Abbasi, Alireza},
  journal  = {SN Computer Science},
  title    = {A {Deep} {Learning}-{Based} {Method} for {Forecasting} {Gold} {Price} with {Respect} to {Pandemics}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = jul,
  number   = {4},
  pages    = {335},
  volume   = {2},
  doi      = {10.1007/s42979-021-00724-3},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\G8RBLPXR\\Mohtasham Khani et al. - 2021 - A Deep Learning-Based Method for Forecasting Gold .pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00724-3},
  urldate  = {2021-10-24},
}

@Article{Bocharnikov2021,
  author   = {Bocharnikov, V. P. and Sveshnikov, S. V.},
  journal  = {Programming and Computer Software},
  title    = {p-{Adic} {Representation} of {Subsets} of a {Bounded} {Number} {Set}},
  year     = {2021},
  issn     = {0361-7688, 1608-3261},
  month    = jul,
  number   = {4},
  pages    = {225--234},
  volume   = {47},
  doi      = {10.1134/S0361768821040022},
  language = {en},
  url      = {https://link.springer.com/10.1134/S0361768821040022},
  urldate  = {2021-10-24},
}

@Article{Kuebert2021,
  author   = {Kuebert, Thomas and Puder, Henning and Koeppl, Heinz},
  journal  = {SN Computer Science},
  title    = {Daily {Routine} {Recognition} for {Hearing} {Aid} {Personalization}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = may,
  number   = {3},
  pages    = {133},
  volume   = {2},
  abstract = {Abstract
            This work focuses on daily routine recognition to personalize the hearing aid (HA) configuration for each user. So far, there is only one public data set containing the data of two acceleration sensors taken under unconstrained real-life conditions of one person. Therefore, we create a realistic and extensive data set with seven subjects and a total length of 63449 min. For the recordings, the HA streams the acceleration and audio data to a mobile phone, where the user simultaneously annotates it. This builds the grounds for our comprehensive simulations, where we train a set of classifiers in an offline and online manner to analyze the model generalization abilities across subjects for high-level activities. To achieve this, we build a feature representation, which describes the recurring daily situations and environments well. For the offline classification, the deep neural network, multi-layer perceptron (MLP), and random forest (RF) trained in a person-dependent manner show the significantly best F-measure performance of 86.6\%, 87.1\%, and 87.3\%, respectively. We confirm that for high-level activities the person-dependent model outperforms the independent one. In our online experiments, we personalize a model that was pretrained in a person-independent manner by daily updates. Thereby, multiple incremental learners and an online RF are tested. We demonstrate that MLP and RF improve the F-measure compared to the offline baselines.},
  doi      = {10.1007/s42979-021-00538-3},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\QW4N5YJL\\Kuebert et al. - 2021 - Daily Routine Recognition for Hearing Aid Personal.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00538-3},
  urldate  = {2021-10-24},
}

@Article{Mukherjee2021,
  author     = {Mukherjee, Amartya and Mukherjee, Prateeti and De, Debashis and Dey, Nilanjan},
  journal    = {International Journal of Parallel Programming},
  title      = {{iGridEdgeDrone}: {Hybrid} {Mobility} {Aware} {Intelligent} {Load} {Forecasting} by {Edge} {Enabled} {Internet} of {Drone} {Things} for {Smart} {Grid} {Networks}},
  year       = {2021},
  issn       = {0885-7458, 1573-7640},
  month      = jun,
  number     = {3},
  pages      = {285--325},
  volume     = {49},
  doi        = {10.1007/s10766-020-00675-x},
  language   = {en},
  shorttitle = {{iGridEdgeDrone}},
  url        = {https://link.springer.com/10.1007/s10766-020-00675-x},
  urldate    = {2021-10-24},
}

@Article{Anikeev2021,
  author   = {Anikeev, F. A. and Raiko, G. O. and Limonova, E. E. and Aliev, M. A. and Nikolaev, D. P.},
  journal  = {Programming and Computer Software},
  title    = {Efficient {Implementation} of {Fast} {Hough} {Transform} {Using} {CPCA} {Coprocessor}},
  year     = {2021},
  issn     = {0361-7688, 1608-3261},
  month    = sep,
  number   = {5},
  pages    = {335--343},
  volume   = {47},
  doi      = {10.1134/S0361768821050029},
  language = {en},
  url      = {https://link.springer.com/10.1134/S0361768821050029},
  urldate  = {2021-10-24},
}

@Article{Deng2021,
  author     = {Deng, Yanchen and An, Bo},
  journal    = {Autonomous Agents and Multi-Agent Systems},
  title      = {Utility distribution matters: enabling fast belief propagation for multi-agent optimization with dense local utility function},
  year       = {2021},
  issn       = {1387-2532, 1573-7454},
  month      = oct,
  number     = {2},
  pages      = {24},
  volume     = {35},
  doi        = {10.1007/s10458-021-09511-z},
  language   = {en},
  shorttitle = {Utility distribution matters},
  url        = {https://link.springer.com/10.1007/s10458-021-09511-z},
  urldate    = {2021-10-24},
}

@Article{Cornelio2021,
  author     = {Cornelio, Cristina and Donini, Michele and Loreggia, Andrea and Pini, Maria Silvia and Rossi, Francesca},
  journal    = {Autonomous Agents and Multi-Agent Systems},
  title      = {Voting with random classifiers ({VORACE}): theoretical and experimental analysis},
  year       = {2021},
  issn       = {1387-2532, 1573-7454},
  month      = oct,
  number     = {2},
  pages      = {22},
  volume     = {35},
  abstract   = {Abstract
            In many machine learning scenarios, looking for the best classifier that fits a particular dataset can be very costly in terms of time and resources. Moreover, it can require deep knowledge of the specific domain. We propose a new technique which does not require profound expertise in the domain and avoids the commonly used strategy of hyper-parameter tuning and model selection. Our method is an innovative ensemble technique that uses voting rules over a set of randomly-generated classifiers. Given a new input sample, we interpret the output of each classifier as a ranking over the set of possible classes. We then aggregate these output rankings using a voting rule, which treats them as preferences over the classes. We show that our approach obtains good results compared to the state-of-the-art, both providing a theoretical analysis and an empirical evaluation of the approach on several datasets.},
  doi        = {10.1007/s10458-021-09504-y},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\SEK3TUYH\\Cornelio et al. - 2021 - Voting with random classifiers (VORACE) theoretic.pdf:application/pdf},
  language   = {en},
  shorttitle = {Voting with random classifiers ({VORACE})},
  url        = {https://link.springer.com/10.1007/s10458-021-09504-y},
  urldate    = {2021-10-24},
}

@Article{Bjoerklund2021,
  author   = {Björklund, Johanna and Cleophas, Loek},
  journal  = {Acta Informatica},
  title    = {Aggregation-based minimization of finite state automata},
  year     = {2021},
  issn     = {0001-5903, 1432-0525},
  month    = jun,
  number   = {3},
  pages    = {177--194},
  volume   = {58},
  abstract = {Abstract
            
              We present a minimization algorithm for non-deterministic finite state automata that finds and merges bisimulation-equivalent states. The bisimulation relation is computed through partition aggregation, in contrast to existing algorithms that use partition refinement. The algorithm simultaneously generalises and simplifies an earlier one by Watson and Daciuk for deterministic devices. We show the algorithm to be correct and run in time
              
                
                  \$\$ O {\textbackslash}left( n{\textasciicircum}2 r{\textasciicircum}2 {\textbackslash}left{\textbar} {\textbackslash}varSigma {\textbackslash}right{\textbar} {\textbackslash}right) \$\$
                  
                    
                      O
                      
                        
                          n
                          2
                        
                        
                          r
                          2
                        
                        
                          Σ
                        
                      
                    
                  
                
              
              , where
              n
              is the number of states of the input automaton
              
                
                  \$\$M\$\$
                  
                    M
                  
                
              
              ,
              r
              is the maximal out-degree in the transition graph for any combination of state and input symbol, and
              
                
                  \$\${\textbackslash}left{\textbar} {\textbackslash}varSigma {\textbackslash}right{\textbar} \$\$
                  
                    
                      Σ
                    
                  
                
              
              is the size of the input alphabet. The algorithm has a higher time complexity than derivatives of Hopcroft’s partition-refinement algorithm, but represents a promising new solution approach that preserves language equivalence throughout the computation process. Furthermore, since the algorithm essentially computes the maximal model of a logical formula derived from 
              
                
                  \$\$M\$\$
                  
                    M
                  
                
              
              , optimisation techniques from the field of model checking become applicable.},
  doi      = {10.1007/s00236-019-00363-5},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\ZRW8T43U\\Björklund and Cleophas - 2021 - Aggregation-based minimization of finite state aut.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s00236-019-00363-5},
  urldate  = {2021-10-24},
}

@Article{Nguyen2021a,
  author   = {Nguyen, Phuong T. and Di Rocco, Juri and Iovino, Ludovico and Di Ruscio, Davide and Pierantonio, Alfonso},
  journal  = {Software and Systems Modeling},
  title    = {Evaluation of a machine learning classifier for metamodels},
  year     = {2021},
  issn     = {1619-1366, 1619-1374},
  month    = sep,
  abstract = {Abstract
            Modeling is a ubiquitous activity in the process of software development. In recent years, such an activity has reached a high degree of intricacy, guided by the heterogeneity of the components, data sources, and tasks. The democratized use of models has led to the necessity for suitable machinery for mining modeling repositories. Among others, the classification of metamodels into independent categories facilitates personalized searches by boosting the visibility of metamodels. Nevertheless, the manual classification of metamodels is not only a tedious but also an error-prone task. According to our observation, misclassification is the norm which leads to a reduction in reachability as well as reusability of metamodels. Handling such complexity requires suitable tooling to leverage raw data into practical knowledge that can help modelers with their daily tasks. In our previous work, we proposed AURORA as a machine learning classifier for metamodel repositories. In this paper, we present a thorough evaluation of the system by taking into consideration different settings as well as evaluation metrics. More importantly, we improve the original AURORA tool by changing its internal design. Experimental results demonstrate that the proposed amendment is beneficial to the classification of metamodels. We also compared our approach with two baseline algorithms, namely gradient boosted decision tree and support vector machines. Eventually, we see that AURORA outperforms the baselines with respect to various quality metrics.},
  doi      = {10.1007/s10270-021-00913-x},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\CAXI6CF2\\Nguyen et al. - 2021 - Evaluation of a machine learning classifier for me.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10270-021-00913-x},
  urldate  = {2021-10-24},
}

@Article{Gupta2021,
  author   = {Gupta, Namit and Vaisla, Kunwar Singh and Kumar, Rajeev},
  journal  = {SN Computer Science},
  title    = {Design of a {Structured} {Hypercube} {Network} {Chip} {Topology} {Model} for {Energy} {Efficiency} in {Wireless} {Sensor} {Network} {Using} {Machine} {Learning}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = sep,
  number   = {5},
  pages    = {376},
  volume   = {2},
  doi      = {10.1007/s42979-021-00766-7},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\8W38QS2R\\Gupta et al. - 2021 - Design of a Structured Hypercube Network Chip Topo.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00766-7},
  urldate  = {2021-10-24},
}

@Article{Shashikiran2021,
  author   = {Shashikiran, B. S. and Shaila, K. and Venugopal, K. R.},
  journal  = {SN Computer Science},
  title    = {Minimal {Block} {Knight}’s {Tour} and {Edge} with {LSB} {Pixel} {Replacement} {Based} {Encrypted} {Image} {Steganography}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = may,
  number   = {3},
  pages    = {139},
  volume   = {2},
  doi      = {10.1007/s42979-021-00542-7},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\BM97T32P\\Shashikiran et al. - 2021 - Minimal Block Knight’s Tour and Edge with LSB Pixe.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00542-7},
  urldate  = {2021-10-24},
}

@Article{Engelfriet2021,
  author     = {Engelfriet, Joost and Inaba, Kazuhiro and Maneth, Sebastian},
  journal    = {Acta Informatica},
  title      = {Linear-bounded composition of tree-walking tree transducers: linear size increase and complexity},
  year       = {2021},
  issn       = {0001-5903, 1432-0525},
  month      = apr,
  number     = {1-2},
  pages      = {95--152},
  volume     = {58},
  doi        = {10.1007/s00236-019-00360-8},
  file       = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\CNBLMVDU\\Engelfriet et al. - 2021 - Linear-bounded composition of tree-walking tree tr.pdf:application/pdf},
  language   = {en},
  shorttitle = {Linear-bounded composition of tree-walking tree transducers},
  url        = {http://link.springer.com/10.1007/s00236-019-00360-8},
  urldate    = {2021-10-24},
}

@Article{Highnam2021,
  author   = {Highnam, Kate and Puzio, Domenic and Luo, Song and Jennings, Nicholas R.},
  journal  = {SN Computer Science},
  title    = {Real-{Time} {Detection} of {Dictionary} {DGA} {Network} {Traffic} {Using} {Deep} {Learning}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = apr,
  number   = {2},
  pages    = {110},
  volume   = {2},
  abstract = {Abstract
            
              Botnets and malware continue to avoid detection by static rule engines when using domain generation algorithms (DGAs) for callouts to unique, dynamically generated web addresses. Common DGA detection techniques fail to reliably detect DGA variants that combine random dictionary words to create domain names that closely mirror legitimate domains. To combat this, we created a novel hybrid neural network, Bilbo the “bagging” model, that analyses domains and scores the likelihood they are generated by such algorithms and therefore are potentially malicious. Bilbo is the first parallel usage of a convolutional neural network (CNN) and a long short-term memory (LSTM) network for DGA detection. Our unique architecture is found to be the most consistent in performance in terms of AUC,
              
                
                  \$\$F\_1\$\$
                  
                    
                      F
                      1
                    
                  
                
              
              score, and accuracy when generalising across different dictionary DGA classification tasks compared to current state-of-the-art deep learning architectures. We validate using reverse-engineered dictionary DGA domains and detail our real-time implementation strategy for scoring real-world network logs within a large enterprise. In 4 h of actual network traffic, the model discovered at least five potential command-and-control networks that commercial vendor tools did not flag.},
  doi      = {10.1007/s42979-021-00507-w},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\XY7I8JQZ\\Highnam et al. - 2021 - Real-Time Detection of Dictionary DGA Network Traf.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s42979-021-00507-w},
  urldate  = {2021-10-24},
}

@Article{Jha2021,
  author   = {Jha, Suresh Kumar and Gupta, Anil and Panigrahi, Niranjan},
  journal  = {SN Computer Science},
  title    = {Security {Threat} {Analysis} and {Countermeasures} on {Consensus}-{Based} {Time} {Synchronization} {Algorithms} for {Wireless} {Sensor} {Network}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = sep,
  number   = {5},
  pages    = {409},
  volume   = {2},
  doi      = {10.1007/s42979-021-00796-1},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\FLXDXQVQ\\Jha et al. - 2021 - Security Threat Analysis and Countermeasures on Co.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00796-1},
  urldate  = {2021-10-24},
}

@Article{Hintzen2021,
  author   = {Hintzen, Stefan and Liesy, Yves and Zirpins, Christian},
  journal  = {Service Oriented Computing and Applications},
  title    = {A third-party replication service for dynamic hidden databases},
  year     = {2021},
  issn     = {1863-2386, 1863-2394},
  month    = jan,
  abstract = {Abstract
            Much data on the web is available in hidden databases. Users browse their contents by sending search queries to form-based interfaces or APIs. Yet, hidden databases just return the top-k result entries and limit the number of queries per time interval. Such access restrictions constrict those tasks that require many/specific queries or need to access many/all data entries. For a temporary solution, an unrestricted local snapshot can be created by crawling the hidden database. Yet, keeping the snapshot permanently consistent is challenging due to the access restrictions of its origin. In this paper, we propose a replication approach providing permanent unrestricted access to the local copy of a hidden database with dynamic changes. To this end, we present an algorithm to effectively crawl hidden databases that outperforms the state of the art. Furthermore, we propose a new way to continuously control the consistency of the replicated database in an efficient manner. We also introduce the cloud-based architecture of a replication service for hidden databases. We show the effectiveness of the approach through a variety of reproducible experimental evaluations.},
  doi      = {10.1007/s11761-020-00313-x},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\MUIGXIEL\\Hintzen et al. - 2021 - A third-party replication service for dynamic hidd.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s11761-020-00313-x},
  urldate  = {2021-10-24},
}

@Article{AlmeidaFarzat2021,
  author   = {de Almeida Farzat, André and de Oliveira Barros, Márcio},
  journal  = {Genetic Programming and Evolvable Machines},
  title    = {Automatic generation of regular expressions for the {Regex} {Golf} challenge using a local search algorithm},
  year     = {2021},
  issn     = {1389-2576, 1573-7632},
  month    = oct,
  doi      = {10.1007/s10710-021-09411-x},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10710-021-09411-x},
  urldate  = {2021-10-24},
}

@Article{Mastriani2021,
  author   = {Mastriani, Mario and Iyengar, Sundaraja Sitharama and Kumar, Latesh},
  journal  = {SN Computer Science},
  title    = {Analysis of {Five} {Techniques} for the {Internal} {Representation} of a {Digital} {Image} {Inside} a {Quantum} {Processor}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = nov,
  number   = {6},
  pages    = {450},
  volume   = {2},
  doi      = {10.1007/s42979-021-00847-7},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\4RAGA2VC\\Mastriani et al. - 2021 - Analysis of Five Techniques for the Internal Repre.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00847-7},
  urldate  = {2021-10-24},
}

@Article{Sun2021a,
  author   = {Sun, Xianwen and Xu, Ruzhi and Wu, Longfei and Guan, Zhitao},
  journal  = {Journal of Cloud Computing},
  title    = {A differentially private distributed data mining scheme with high efficiency for edge computing},
  year     = {2021},
  issn     = {2192-113X},
  month    = dec,
  number   = {1},
  pages    = {7},
  volume   = {10},
  abstract = {Abstract
            A wide range of data mining applications benefit from the low latency offered by edge computing. However, edge computing suffers from limited computing resources, which inhibits the applications of the computationally expensive data mining methods. In the edge-cloud environment, usually, the participants turn to collaboratively train machine-learning models that yield more accurate prediction results. However, data owners may not be willing to sharing the own data for the privacy concerns. To handle such disparate goals, we focus on tree-based distributed data mining scheme with differential privacy, which is computationally friendly. The basic idea of our approach is based on a distributed ensemble strategy. Each participant builds an elegant decision model based on their own data, which has a good tradeoff between the computation and the accuracy of the data distribution, and shares it with other participants after being injected with the elaborate noise. Then the useful knowledge transferred from the decision models is acquired by other participants in an adaptive ensemble strategy. Both the theoretical analysis and the experiments show that our scheme provides an efficient data mining manner that can achieve a good prediction accuracy while providing rigorous privacy guarantee over the distributed data.},
  doi      = {10.1186/s13677-020-00225-3},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\V5C8UYND\\Sun et al. - 2021 - A differentially private distributed data mining s.pdf:application/pdf},
  language = {en},
  url      = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-020-00225-3},
  urldate  = {2021-10-24},
}

@Article{Vasavi2021,
  author   = {Vasavi, S. and Vineela, P. and Raman, S. Venkat},
  journal  = {SN Computer Science},
  title    = {Age {Detection} in a {Surveillance} {Video} {Using} {Deep} {Learning} {Technique}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = jul,
  number   = {4},
  pages    = {249},
  volume   = {2},
  doi      = {10.1007/s42979-021-00620-w},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\UXEV4HRC\\Vasavi et al. - 2021 - Age Detection in a Surveillance Video Using Deep L.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00620-w},
  urldate  = {2021-10-24},
}

@Article{Aragao2021,
  author     = {Aragão, Bruno S. and Andrade, Rossana M. C. and Santos, Ismayle S. and Castro, Rute N. S. and Lelli, Valéria and Darin, Ticianne G. R.},
  journal    = {Software Quality Journal},
  title      = {{TestDCat} 3.0: catalog of test debt subtypes and management activities},
  year       = {2021},
  issn       = {0963-9314, 1573-1367},
  month      = jan,
  doi        = {10.1007/s11219-020-09533-y},
  language   = {en},
  shorttitle = {{TestDCat} 3.0},
  url        = {http://link.springer.com/10.1007/s11219-020-09533-y},
  urldate    = {2021-10-24},
}

@Article{Ahmad2021,
  author   = {Ahmad, Waseem and Wang, Bang and Xu, Han and Xu, Minghua and Zeng, Zeng},
  journal  = {SN Computer Science},
  title    = {Topics, {Sentiments}, and {Emotions} {Triggered} by {COVID}-19-{Related} {Tweets} from {IRAN} and {Turkey} {Official} {News} {Agencies}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = sep,
  number   = {5},
  pages    = {394},
  volume   = {2},
  doi      = {10.1007/s42979-021-00789-0},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\M8UCVFYL\\Ahmad et al. - 2021 - Topics, Sentiments, and Emotions Triggered by COVI.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00789-0},
  urldate  = {2021-10-24},
}

@Article{Mitra2021,
  author   = {Mitra, Alakananda and Mohanty, Saraju P. and Corcoran, Peter and Kougianos, Elias},
  journal  = {SN Computer Science},
  title    = {A {Machine} {Learning} {Based} {Approach} for {Deepfake} {Detection} in {Social} {Media} {Through} {Key} {Video} {Frame} {Extraction}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = apr,
  number   = {2},
  pages    = {98},
  volume   = {2},
  doi      = {10.1007/s42979-021-00495-x},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\T45F3TCP\\Mitra et al. - 2021 - A Machine Learning Based Approach for Deepfake Det.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s42979-021-00495-x},
  urldate  = {2021-10-24},
}

@Article{Guo2021b,
  author   = {Guo, Yu and Gao, Chaohui and Jiang, Dong and Chen, Lijun},
  journal  = {SN Computer Science},
  title    = {100 {Mbps} {Reconciliation} for {Quantum} {Key} {Distribution} {Using} a {Single} {Graphics} {Processing} {Unit}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = apr,
  number   = {2},
  pages    = {125},
  volume   = {2},
  doi      = {10.1007/s42979-021-00543-6},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\6MVE369M\\Guo et al. - 2021 - 100 Mbps Reconciliation for Quantum Key Distributi.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s42979-021-00543-6},
  urldate  = {2021-10-24},
}

@Article{Kumar2021a,
  author   = {Kumar, Ankit and Aggarwal, Rajesh Kumar},
  journal  = {Journal of Reliable Intelligent Environments},
  title    = {An exploration of semi-supervised and language-adversarial transfer learning using hybrid acoustic model for hindi speech recognition},
  year     = {2021},
  issn     = {2199-4668, 2199-4676},
  month    = apr,
  doi      = {10.1007/s40860-021-00140-7},
  language = {en},
  url      = {http://link.springer.com/10.1007/s40860-021-00140-7},
  urldate  = {2021-10-24},
}

@Article{Bannikova2021,
  author   = {Bannikova, Marina and Dery, Lihi and Obraztsova, Svetlana and Rabinovich, Zinovi and Rosenschein, Jeffrey S.},
  journal  = {Autonomous Agents and Multi-Agent Systems},
  title    = {Reaching consensus under a deadline},
  year     = {2021},
  issn     = {1387-2532, 1573-7454},
  month    = apr,
  number   = {1},
  pages    = {9},
  volume   = {35},
  doi      = {10.1007/s10458-020-09490-7},
  file     = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\M3ZC79DU\\Bannikova et al. - 2021 - Reaching consensus under a deadline.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10458-020-09490-7},
  urldate  = {2021-10-24},
}

@Article{Kretschmer2021,
  author   = {Kretschmer, Roland and Khelladi, Djamel Eddine and Lopez-Herrejon, Roberto Erick and Egyed, Alexander},
  journal  = {Software and Systems Modeling},
  title    = {Consistent change propagation within models},
  year     = {2021},
  issn     = {1619-1366, 1619-1374},
  month    = apr,
  number   = {2},
  pages    = {539--555},
  volume   = {20},
  abstract = {Abstract
            Developers change models with clear intentions—e.g., for refactoring, defects removal, or evolution. However, in doing so, developers are often unaware of the consequences of their changes. Changes to one part of a model may affect other parts of the same model and/or even other models, possibly created and maintained by other developers. The consequences are incomplete changes and with it inconsistencies within or across models. Extensive works exist on detecting and repairing inconsistencies. However, the literature tends to focus on inconsistencies as errors in need of repairs rather than on incomplete changes in need of further propagation. Many changes are non-trivial and require a series of coordinated model changes. As developers start changing the model, intermittent inconsistencies arise with other parts of the model that developers have not yet changed. These inconsistencies are cues for incomplete change propagation. Resolving these inconsistencies should be done in a manner that is consistent with the original changes. We speak of consistent change propagation. This paper leverages classical inconsistency repair mechanisms to explore the vast search space of change propagation. Our approach not only suggests changes to repair a given inconsistency but also changes to repair inconsistencies caused by the aforementioned repair. In doing so, our approach follows the developer’s intent where subsequent changes may not contradict or backtrack earlier changes. We argue that consistent change propagation is essential for effective model-driven engineering. Our approach and its tool implementation were empirically assessed on 18 case studies from industry, academia, and GitHub to demonstrate its feasibility and scalability. A comparison with two versioned models shows that our approach identifies actual repair sequences that developers had chosen. Furthermore, an experiment involving 22 participants shows that our change propagation approach meets the workflow of how developers handle changes by always computing the sequence of repairs resulting from the change propagation.},
  doi      = {10.1007/s10270-020-00823-4},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\H9NASN64\\Kretschmer et al. - 2021 - Consistent change propagation within models.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10270-020-00823-4},
  urldate  = {2021-10-24},
}

@Article{Massing2021,
  author   = {Massing, Till},
  journal  = {SN Computer Science},
  title    = {Clustering {Using} {Student} t {Mixture} {Copulas}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = apr,
  number   = {2},
  pages    = {97},
  volume   = {2},
  abstract = {Abstract
            
              Tewari et al. (Parametric characterization of multimodal distributions with non-Gaussian modes, pp 286–292, 2011) introduced Gaussian mixture copula models (GMCM) for clustering problems which do not assume normality of the mixture components as Gaussian mixture models (GMM) do. In this paper, we propose Student
              t
              mixture copula models (SMCM) as an extension of GMCMs. GMCMs require weak assumptions, yielding a flexible fit and a powerful cluster tool. Our SMCM extension offers, in a natural way, even more flexibility than the GMCM approach. We discuss estimation issues and compare Expectation-Maximization (EM)-based with numerical simplex optimization methods. We illustrate the SMCM as a tool for image segmentation.},
  doi      = {10.1007/s42979-021-00503-0},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\LQWDIGJ8\\Massing - 2021 - Clustering Using Student t Mixture Copulas.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00503-0},
  urldate  = {2021-10-24},
}

@Article{Prasetya2021,
  author     = {Prasetya, I. S. W. B. and Klomp, Rick},
  journal    = {Software and Systems Modeling},
  title      = {Test model coverage analysis under uncertainty: extended version},
  year       = {2021},
  issn       = {1619-1366, 1619-1374},
  month      = apr,
  number     = {2},
  pages      = {383--403},
  volume     = {20},
  abstract   = {Abstract
            
              In model-based testing, we may have to deal with a non-deterministic model, e.g. because abstraction was applied, or because the software under test itself is non-deterministic. The same test case may then trigger multiple possible execution paths, depending on some internal decisions made by the software. Consequently, performing precise test analyses, e.g. to calculate the test coverage, are not possible.. This can be mitigated if developers can annotate the model with estimated probabilities for taking each transition. A probabilistic model checking algorithm can subsequently be used to do simple probabilistic coverage analysis. However, in practice developers often want to know what the achieved aggregate coverage is, which unfortunately cannot be re-expressed as a standard model checking problem. This paper presents an extension to allow efficient calculation of probabilistic aggregate coverage, and also of probabilistic aggregate coverage in combination with
              k
              -wise coverage.},
  doi        = {10.1007/s10270-020-00848-9},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\8PV2W2IS\\Prasetya and Klomp - 2021 - Test model coverage analysis under uncertainty ex.pdf:application/pdf},
  language   = {en},
  shorttitle = {Test model coverage analysis under uncertainty},
  url        = {https://link.springer.com/10.1007/s10270-020-00848-9},
  urldate    = {2021-10-24},
}

@Article{Coleman2021,
  author   = {Coleman, Evan and Jensen, Erik J. and Sosonkina, Masha},
  journal  = {International Journal of Parallel Programming},
  title    = {Fault {Recovery} {Methods} for {Asynchronous} {Linear} {Solvers}},
  year     = {2021},
  issn     = {0885-7458, 1573-7640},
  month    = feb,
  number   = {1},
  pages    = {51--80},
  volume   = {49},
  doi      = {10.1007/s10766-020-00676-w},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10766-020-00676-w},
  urldate  = {2021-10-24},
}

@Article{Puindi2021,
  author     = {Puindi, António Casimiro},
  journal    = {SN Computer Science},
  title      = {Structural {Models}: {A} {Computational} {Look} for {Signal} {Extraction} and {Forecasting} {Seasonal} {Time} {Series}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = apr,
  number     = {2},
  pages      = {96},
  volume     = {2},
  doi        = {10.1007/s42979-021-00474-2},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\9K8GDP55\\Puindi - 2021 - Structural Models A Computational Look for Signal.pdf:application/pdf},
  language   = {en},
  shorttitle = {Structural {Models}},
  url        = {http://link.springer.com/10.1007/s42979-021-00474-2},
  urldate    = {2021-10-24},
}

@Article{Sharma2021a,
  author   = {Sharma, Neha and Batra, Usha},
  journal  = {Genetic Programming and Evolvable Machines},
  title    = {An enhanced {Huffman}-{PSO} based image optimization algorithm for image steganography},
  year     = {2021},
  issn     = {1389-2576, 1573-7632},
  month    = jun,
  number   = {2},
  pages    = {189--205},
  volume   = {22},
  doi      = {10.1007/s10710-020-09396-z},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10710-020-09396-z},
  urldate  = {2021-10-24},
}

@Article{Roy2021,
  author   = {Roy, Partha Pratim and Kumar, Pradeep and Kim, Byung-Gyu},
  journal  = {SN Computer Science},
  title    = {An {Efficient} {Sign} {Language} {Recognition} ({SLR}) {System} {Using} {Camshift} {Tracker} and {Hidden} {Markov} {Model} ({HMM})},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = apr,
  number   = {2},
  pages    = {79},
  volume   = {2},
  doi      = {10.1007/s42979-021-00485-z},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\ZMPD35D8\\Roy et al. - 2021 - An Efficient Sign Language Recognition (SLR) Syste.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s42979-021-00485-z},
  urldate  = {2021-10-24},
}

@Article{Gupta2021a,
  author   = {Gupta, Kishor Datta and Dasgupta, Dipankar and Akhtar, Zahid},
  journal  = {SN Computer Science},
  title    = {Determining {Sequence} of {Image} {Processing} {Technique} ({IPT}) to {Detect} {Adversarial} {Attacks}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = sep,
  number   = {5},
  pages    = {383},
  volume   = {2},
  doi      = {10.1007/s42979-021-00773-8},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\BZHXMZDN\\Gupta et al. - 2021 - Determining Sequence of Image Processing Technique.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00773-8},
  urldate  = {2021-10-24},
}

@Article{Suess2021,
  author     = {Süß, Tim and Nagel, Lars and Vef, Marc-André and Brinkmann, André and Feld, Dustin and Soddemann, Thomas},
  journal    = {International Journal of Parallel Programming},
  title      = {Pure {Functions} in {C}: {A} {Small} {Keyword} for {Automatic} {Parallelization}},
  year       = {2021},
  issn       = {0885-7458, 1573-7640},
  month      = feb,
  number     = {1},
  pages      = {1--24},
  volume     = {49},
  abstract   = {Abstract
            
              The need for parallel task execution has been steadily growing in recent years since manufacturers mainly improve processor performance by increasing the number of installed cores instead of scaling the processor’s frequency. To make use of this potential, an essential technique to increase the parallelism of a program is to parallelize loops. Several
              automatic loop nest parallelizers
              have been developed in the past such as PluTo. The main restriction of these tools is that the loops must be statically analyzable which, among other things, disallows function calls within the loops. In this article, we present a seemingly simple extension to the C programming language which marks functions without side-effects. These functions can then basically be ignored when the automatic parallelizer checks the parallelizability of loops. We integrated the approach into the GCC compiler toolchain and evaluated it by running several real-world applications. Our experiments show that the C extension helps to identify additional parallelization opportunities and, thus, to significantly increase the performance of applications.},
  doi        = {10.1007/s10766-020-00660-4},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\RY745PD4\\Süß et al. - 2021 - Pure Functions in C A Small Keyword for Automatic.pdf:application/pdf},
  language   = {en},
  shorttitle = {Pure {Functions} in {C}},
  url        = {https://link.springer.com/10.1007/s10766-020-00660-4},
  urldate    = {2021-10-24},
}

@Article{Karkera2021,
  author   = {Karkera, Thejas and Singh, Chandra},
  journal  = {SN Computer Science},
  title    = {Autonomous {Bot} {Using} {Machine} {Learning} and {Computer} {Vision}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = jul,
  number   = {4},
  pages    = {251},
  volume   = {2},
  doi      = {10.1007/s42979-021-00640-6},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\IPGXEQH9\\Karkera and Singh - 2021 - Autonomous Bot Using Machine Learning and Computer.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00640-6},
  urldate  = {2021-10-24},
}

@Article{Beamonte2021,
  author   = {Beamonte, Raphael and Ezzati-Jivan, Naser and Dagenais, Michel R.},
  journal  = {International Journal of Parallel Programming},
  title    = {Automated {Generation} of {Model}-{Based} {Constraints} for {Common} {Multi}-core and {Real}-{Time} {Applications} {Using} {Execution} {Tracing}},
  year     = {2021},
  issn     = {0885-7458, 1573-7640},
  month    = feb,
  number   = {1},
  pages    = {104--134},
  volume   = {49},
  doi      = {10.1007/s10766-020-00689-5},
  language = {en},
  url      = {http://link.springer.com/10.1007/s10766-020-00689-5},
  urldate  = {2021-10-24},
}

@Article{Ramya2021,
  author   = {Ramya, B. N. and Shetty, Shyleshwari M. and Amaresh, A. M. and Rakshitha, R.},
  journal  = {SN Computer Science},
  title    = {Smart {Simon} {Bot} with {Public} {Sentiment} {Analysis} for {Novel} {Covid}-19 {Tweets} {Stratification}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = may,
  number   = {3},
  pages    = {227},
  volume   = {2},
  doi      = {10.1007/s42979-021-00625-5},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\BKRJ6X8I\\Ramya et al. - 2021 - Smart Simon Bot with Public Sentiment Analysis for.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00625-5},
  urldate  = {2021-10-24},
}

@Article{Mohbey2021,
  author   = {Mohbey, Krishna Kumar and Kumar, Sunil},
  journal  = {Iran Journal of Computer Science},
  title    = {A parallel approach for high utility-based frequent pattern mining in a big data environment},
  year     = {2021},
  issn     = {2520-8438, 2520-8446},
  month    = sep,
  number   = {3},
  pages    = {195--200},
  volume   = {4},
  doi      = {10.1007/s42044-021-00083-5},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42044-021-00083-5},
  urldate  = {2021-10-24},
}

@Article{Sujata2021,
  author     = {{Sujata} and Mitra, Suman K.},
  journal    = {SN Computer Science},
  title      = {Modular {FER}: {A} {Modular} {Facial} {Expression} {Recognition} from {Image} {Sequence} {Based} on {Two} {Dimensional} ({2D}) {Taylor} {Expansion}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = may,
  number     = {3},
  pages      = {181},
  volume     = {2},
  doi        = {10.1007/s42979-021-00610-y},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\BYU22IVP\\Sujata and Mitra - 2021 - Modular FER A Modular Facial Expression Recogniti.pdf:application/pdf},
  language   = {en},
  shorttitle = {Modular {FER}},
  url        = {https://link.springer.com/10.1007/s42979-021-00610-y},
  urldate    = {2021-10-24},
}

@Article{Fichtenberger2021,
  author   = {Fichtenberger, Hendrik and Rey, Anja},
  journal  = {Autonomous Agents and Multi-Agent Systems},
  title    = {Testing stability prop erties in graphical hedonic games},
  year     = {2021},
  issn     = {1387-2532, 1573-7454},
  month    = oct,
  number   = {2},
  pages    = {26},
  volume   = {35},
  abstract = {Abstract
            
              In hedonic games, players form coalitions based on individual preferences over the group of players they could belong to. Several concepts to describe the stability of coalition structures in a game have been proposed and analysed in the literature. However, prior research focuses on algorithms with time complexity that is at least linear in the input size. In the light of very large games that arise from, e.g., social networks and advertising, we initiate the study of sublinear time property testing algorithms for existence and verification problems under several notions of coalition stability in a model of hedonic games represented by graphs with bounded degree. In graph property testing, one shall decide whether a given input has a property (e.g., a game admits a stable coalition structure) or is far from it, i.e., one has to modify at least an
              
                
                  \$\${\textbackslash}epsilon\$\$
                  
                    ϵ
                  
                
              
              -fraction of the input (e.g., the game’s preferences) to make it have the property. In particular, we consider verification of perfection, individual rationality, Nash stability, (contractual) individual stability, and core stability. While there is always a Nash-stable coalition structure (which also implies individually stable coalitions), we show that the existence of a perfect coalition structure is not tautological but can be tested. All our testers have one-sided error and time complexity that is independent of the input size.},
  doi      = {10.1007/s10458-021-09505-x},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\PPCC2N5P\\Fichtenberger and Rey - 2021 - Testing stability prop erties in graphical hedonic.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10458-021-09505-x},
  urldate  = {2021-10-24},
}

@Article{Kuznetsov2021,
  author   = {Kuznetsov, Alexandr and Kryvinska, Natalia and Kiian, Anastasiia and Smirnov, Oleksii and Kuznetsova, Kateryna},
  journal  = {SN Computer Science},
  title    = {Full {Non}-{Binary} {Constant}-{Weight} {Codes}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = jul,
  number   = {4},
  pages    = {337},
  volume   = {2},
  doi      = {10.1007/s42979-021-00739-w},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\GQAHMIIT\\Kuznetsov et al. - 2021 - Full Non-Binary Constant-Weight Codes.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00739-w},
  urldate  = {2021-10-24},
}

@Article{Somogyi2021,
  author   = {Somogyi, Ferenc A. and Mezei, Gergely and Theisz, Zoltán and Bácsi, Sándor and Palatinszky, Dániel},
  journal  = {Software and Systems Modeling},
  title    = {Playground for multi-level modeling constructs},
  year     = {2021},
  issn     = {1619-1366, 1619-1374},
  month    = aug,
  abstract = {Abstract
            In recent years, multi-level modeling has become more and more popular. It is mainly due to the fact that multi-level modeling aims to reduce or even totally eliminate any accidental complexity inadvertently created as by-product in traditional model design. Moreover, besides reducing model complexity, multi-level modeling also improves on general comprehension of models. The key enablers of multi-level modeling are the concepts of clabjects and deep instantiation. The latter is often governed by the potency notion, of which many different interpretations and variations emerged over the years. However, there exist also some approaches that disregard the potency notion. Thus, multi-level modeling approaches tend to take advantage of different theoretical and practical backgrounds. In this paper, we propose a unifying framework, the Multi-Level Modeling Playground (MLMP), which is a validating modeling environment for multi-level modeling research. The MLMP environment is based on our multi-layer modeling framework (the Dynamic Multi-Layer Algebra), which provides useful mechanisms to validate different multi-level modeling constructs. Since beyond the structure also the well-formedness rules of the modeling constructs can be specified, our proposed MLMP environment delivers several practical benefits: i) well-formedness is always verified, ii) multi-level constructs can be experimented with independently of any concrete tool chains, and iii) relationships (i.e., correlations or exclusions) between different multi-level constructs can be easily investigated in practice. Also, the capability of the environment is demonstrated via complete examples inspired by state-of-the-art research literature.},
  doi      = {10.1007/s10270-021-00900-2},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\6CM3PAWT\\Somogyi et al. - 2021 - Playground for multi-level modeling constructs.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10270-021-00900-2},
  urldate  = {2021-10-24},
}

@Article{Nachazel2021,
  author   = {Nachazel, Tomas},
  journal  = {Genetic Programming and Evolvable Machines},
  title    = {Fuzzy cognitive maps for decision-making in dynamic environments},
  year     = {2021},
  issn     = {1389-2576, 1573-7632},
  month    = mar,
  number   = {1},
  pages    = {101--135},
  volume   = {22},
  doi      = {10.1007/s10710-020-09393-2},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10710-020-09393-2},
  urldate  = {2021-10-24},
}

@Article{Lartigue2021,
  author   = {Lartigue, Thomas and Durrleman, Stanley and Allassonnière, Stéphanie},
  journal  = {SN Computer Science},
  title    = {Mixture of {Conditional} {Gaussian} {Graphical} {Models} for {Unlabelled} {Heterogeneous} {Populations} in the {Presence} of {Co}-factors},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = nov,
  number   = {6},
  pages    = {466},
  volume   = {2},
  doi      = {10.1007/s42979-021-00865-5},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\KD7DEKWM\\Lartigue et al. - 2021 - Mixture of Conditional Gaussian Graphical Models f.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00865-5},
  urldate  = {2021-10-24},
}

@Article{Singh2021c,
  author   = {Singh, Kuldeep and Arora, Gayatri and Singh, Pushpa and Gupta, Ankit},
  journal  = {Journal of Reliable Intelligent Environments},
  title    = {{IoT}-based collection vendor machine ({CVM}) for {E}-waste management},
  year     = {2021},
  issn     = {2199-4668, 2199-4676},
  month    = mar,
  number   = {1},
  pages    = {35--47},
  volume   = {7},
  doi      = {10.1007/s40860-020-00124-z},
  language = {en},
  url      = {http://link.springer.com/10.1007/s40860-020-00124-z},
  urldate  = {2021-10-24},
}

@Article{Hegade2021,
  author     = {Hegade, Prakash and Joshi, Rajaram M. and Hegde, Vibha G. and Kale, Tejaswini and Basavaraddi, Srushti},
  journal    = {SN Computer Science},
  title      = {Po-{Miner}: {A} {Web} {Mining} {Poem} {Generator} and its {Security} {Model}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = sep,
  number     = {5},
  pages      = {401},
  volume     = {2},
  doi        = {10.1007/s42979-021-00802-6},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\PJIWIX4P\\Hegade et al. - 2021 - Po-Miner A Web Mining Poem Generator and its Secu.pdf:application/pdf},
  language   = {en},
  shorttitle = {Po-{Miner}},
  url        = {https://link.springer.com/10.1007/s42979-021-00802-6},
  urldate    = {2021-10-24},
}

@Article{Jakobi2021,
  author   = {Jakobi, Sebastian and Meckel, Katja and Mereghetti, Carlo and Palano, Beatrice},
  journal  = {Acta Informatica},
  title    = {The descriptional power of queue automata of constant length},
  year     = {2021},
  issn     = {0001-5903, 1432-0525},
  month    = aug,
  number   = {4},
  pages    = {335--356},
  volume   = {58},
  abstract = {Abstract
            
              We consider the notion of a
              constant length queue automaton
              —i.e., a traditional queue automaton with a built-in constant limit on the length of its queue—as a formalism for representing regular languages. We show that the descriptional power of constant length queue automata greatly outperforms that of traditional finite state automata, of constant height pushdown automata, and of straight line programs for regular expressions, by providing optimal exponential and double-exponential size gaps. Moreover, we prove that constant height pushdown automata can be simulated by constant length queue automata paying only by a linear size increase, and that removing nondeterminism in constant length queue automata requires an optimal exponential size blow-up, against the optimal double-exponential cost for determinizing constant height pushdown automata. Finally, we investigate the size cost of implementing Boolean language operations on deterministic and nondeterministic constant length queue automata.},
  doi      = {10.1007/s00236-021-00398-7},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\LXEUCP5F\\Jakobi et al. - 2021 - The descriptional power of queue automata of const.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s00236-021-00398-7},
  urldate  = {2021-10-24},
}

@Article{Kim2021c,
  author   = {Kim, Dongjun and Yun, Tae-Sub and Moon, Il-Chul and Bae, Jang Won},
  journal  = {Autonomous Agents and Multi-Agent Systems},
  title    = {Automatic calibration of dynamic and heterogeneous parameters in agent-based models},
  year     = {2021},
  issn     = {1387-2532, 1573-7454},
  month    = oct,
  number   = {2},
  pages    = {46},
  volume   = {35},
  doi      = {10.1007/s10458-021-09528-4},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10458-021-09528-4},
  urldate  = {2021-10-24},
}

@Article{Humm2021,
  author     = {Humm, Bernhard G. and Bense, Hermann and Fuchs, Michael and Gernhardt, Benjamin and Hemmje, Matthias and Hoppe, Thomas and Kaupp, Lukas and Lothary, Sebastian and Schäfer, Kai-Uwe and Thull, Bernhard and Vogel, Tobias and Wenning, Rigo},
  journal    = {Informatik Spektrum},
  title      = {Machine intelligence today: applications, methodology, and technology: {Selected} results of the 1st online {Dagstuhl} workshop on applied machine intelligence},
  year       = {2021},
  issn       = {0170-6012, 1432-122X},
  month      = apr,
  number     = {2},
  pages      = {104--114},
  volume     = {44},
  abstract   = {Abstract
            Machine intelligence, a.k.a. artificial intelligence (AI) is one of the most prominent and relevant technologies today. It is in everyday use in the form of AI applications and has a strong impact on society. This article presents selected results of the 2020 Dagstuhl workshop on applied machine intelligence. Selected AI applications in various domains, namely culture, education, and industrial manufacturing are presented. Current trends, best practices, and recommendations regarding AI methodology and technology are explained. The focus is on ontologies (knowledge-based AI) and machine learning.},
  doi        = {10.1007/s00287-021-01343-1},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\MVVACDCS\\Humm et al. - 2021 - Machine intelligence today applications, methodol.pdf:application/pdf},
  language   = {en},
  shorttitle = {Machine intelligence today},
  url        = {https://link.springer.com/10.1007/s00287-021-01343-1},
  urldate    = {2021-10-24},
}

@Article{Ravikiran2021,
  author   = {Ravikiran, H. K. and Jayanth, J.},
  journal  = {SN Computer Science},
  title    = {Pyramid based {Progressive} {Transmission} {System} with {Hybrid} {Compression} {Scheme} for {Medical} {Images}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = may,
  number   = {3},
  pages    = {155},
  volume   = {2},
  doi      = {10.1007/s42979-021-00534-7},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\V6AZJSPA\\Ravikiran and Jayanth - 2021 - Pyramid based Progressive Transmission System with.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00534-7},
  urldate  = {2021-10-24},
}

@Article{Yadav2021,
  author   = {Yadav, Sunil and Singh, Munindra Kumar},
  journal  = {SN Computer Science},
  title    = {Hybrid {Machine} {Learning} {Classifier} and {Ensemble} {Techniques} to {Detect} {Parkinson}’s {Disease} {Patients}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = may,
  number   = {3},
  pages    = {189},
  volume   = {2},
  doi      = {10.1007/s42979-021-00587-8},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\EBNS2JSN\\Yadav and Singh - 2021 - Hybrid Machine Learning Classifier and Ensemble Te.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00587-8},
  urldate  = {2021-10-24},
}

@Article{Zegklitz2021,
  author   = {Žegklitz, Jan and Pošík, Petr},
  journal  = {Genetic Programming and Evolvable Machines},
  title    = {Benchmarking state-of-the-art symbolic regression algorithms},
  year     = {2021},
  issn     = {1389-2576, 1573-7632},
  month    = mar,
  number   = {1},
  pages    = {5--33},
  volume   = {22},
  doi      = {10.1007/s10710-020-09387-0},
  language = {en},
  url      = {http://link.springer.com/10.1007/s10710-020-09387-0},
  urldate  = {2021-10-24},
}

@Article{Shiravale2021,
  author   = {Shiravale, S. S. and Sannakki, S. S. and Jayadevan, R.},
  journal  = {SN Computer Science},
  title    = {Text {Region} {Identification} in {Indian} {Street} {Scene} {Images} {Using} {Stroke} {Width} {Transform} and {Support} {Vector} {Machine}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = sep,
  number   = {5},
  pages    = {357},
  volume   = {2},
  doi      = {10.1007/s42979-021-00745-y},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\SMNYQFHM\\Shiravale et al. - 2021 - Text Region Identification in Indian Street Scene .pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00745-y},
  urldate  = {2021-10-24},
}

@Article{Schmitt2021,
  author     = {Schmitt, Jonas and Kuckuk, Sebastian and Köstler, Harald},
  journal    = {Genetic Programming and Evolvable Machines},
  title      = {{EvoStencils}: a grammar-based genetic programming approach for constructing efficient geometric multigrid methods},
  year       = {2021},
  issn       = {1389-2576, 1573-7632},
  month      = sep,
  abstract   = {Abstract
            For many systems of linear equations that arise from the discretization of partial differential equations, the construction of an efficient multigrid solver is challenging. Here we present EvoStencils, a novel approach for optimizing geometric multigrid methods with grammar-guided genetic programming, a stochastic program optimization technique inspired by the principle of natural evolution. A multigrid solver is represented as a tree of mathematical expressions that we generate based on a formal grammar. The quality of each solver is evaluated in terms of convergence and compute performance by automatically generating an optimized implementation using code generation that is then executed on the target platform to measure all relevant performance metrics. Based on this, a multi-objective optimization is performed using a non-dominated sorting-based selection. To evaluate a large number of solvers in parallel, they are distributed to multiple compute nodes. We demonstrate the effectiveness of our implementation by constructing geometric multigrid solvers that are able to outperform hand-crafted methods for Poisson’s equation and a linear elastic boundary value problem with up to 16 million unknowns on multi-core processors with Ivy Bridge and Broadwell microarchitecture.},
  doi        = {10.1007/s10710-021-09412-w},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\WQTCLQPN\\Schmitt et al. - 2021 - EvoStencils a grammar-based genetic programming a.pdf:application/pdf},
  language   = {en},
  shorttitle = {{EvoStencils}},
  url        = {https://link.springer.com/10.1007/s10710-021-09412-w},
  urldate    = {2021-10-24},
}

@Article{Tkach2021,
  author   = {Tkach, Itshak and Amador, Sofia},
  journal  = {Autonomous Agents and Multi-Agent Systems},
  title    = {Towards addressing dynamic multi-agent task allocation in law enforcement},
  year     = {2021},
  issn     = {1387-2532, 1573-7454},
  month    = apr,
  number   = {1},
  pages    = {11},
  volume   = {35},
  doi      = {10.1007/s10458-021-09494-x},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10458-021-09494-x},
  urldate  = {2021-10-24},
}

@Article{Coulibaly2021,
  author   = {Coulibaly, Lassana and Kamsu-Foguem, Bernard and Tangara, Fana},
  journal  = {SN Computer Science},
  title    = {Explainability with {Association} {Rule} {Learning} for {Weather} {Forecast}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = apr,
  number   = {2},
  pages    = {116},
  volume   = {2},
  doi      = {10.1007/s42979-021-00525-8},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\BTIW8TYN\\Coulibaly et al. - 2021 - Explainability with Association Rule Learning for .pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s42979-021-00525-8},
  urldate  = {2021-10-24},
}

@Article{Devezas2021,
  author   = {Devezas, José and Nunes, Sérgio},
  journal  = {SN Computer Science},
  title    = {A {Review} of {Graph}-{Based} {Models} for {Entity}-{Oriented} {Search}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = nov,
  number   = {6},
  pages    = {437},
  volume   = {2},
  doi      = {10.1007/s42979-021-00828-w},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\MRA94FD9\\Devezas and Nunes - 2021 - A Review of Graph-Based Models for Entity-Oriented.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00828-w},
  urldate  = {2021-10-24},
}

@Article{Hornung2022,
  author     = {Hornung, Roman},
  journal    = {SN Computer Science},
  title      = {Diversity {Forests}: {Using} {Split} {Sampling} to {Enable} {Innovative} {Complex} {Split} {Procedures} in {Random} {Forests}},
  year       = {2022},
  issn       = {2662-995X, 2661-8907},
  month      = jan,
  number     = {1},
  pages      = {1},
  volume     = {3},
  abstract   = {Abstract
            
              The diversity forest algorithm is an alternative candidate node split sampling scheme that makes innovative complex split procedures in random forests possible. While conventional univariable, binary splitting suffices for obtaining strong predictive performance, new complex split procedures can help tackling practically important issues. For example, interactions between features can be exploited effectively by bivariable splitting. With diversity forests, each split is selected from a candidate split set that is sampled in the following way: for
              
                
                  \$\$l = 1, {\textbackslash}dots , \{nsplits\}\$\$
                  
                    
                      l
                      =
                      1
                      ,
                      ⋯
                      ,
                      
                        nsplits
                      
                    
                  
                
              
              : (1) sample one split problem; (2) sample a single or few splits from the split problem sampled in (1) and add this or these splits to the candidate split set. The split problems are specifically structured collections of splits that depend on the respective split procedure considered. This sampling scheme makes innovative complex split procedures computationally tangible while avoiding overfitting. Important general properties of the diversity forest algorithm are evaluated empirically using univariable, binary splitting. Based on 220 data sets with binary outcomes, diversity forests are compared with conventional random forests and random forests using extremely randomized trees. It is seen that the split sampling scheme of diversity forests does not impair the predictive performance of random forests and that the performance is quite robust with regard to the specified
              nsplits
              value. The recently developed interaction forests are the first diversity forest method that uses a complex split procedure. Interaction forests allow modeling and detecting interactions between features effectively. Further potential complex split procedures are discussed as an outlook.},
  doi        = {10.1007/s42979-021-00920-1},
  language   = {en},
  shorttitle = {Diversity {Forests}},
  url        = {https://link.springer.com/10.1007/s42979-021-00920-1},
  urldate    = {2021-10-24},
}

@Article{Kamaruddin2021,
  author     = {Kamaruddin, Sk and Ravi, Vadlamani},
  journal    = {SN Computer Science},
  title      = {{EGRNN}++ and {PNN}++ : {Parallel} and {Distributed} {Neural} {Networks} for {Big} {Data} {Regression} and {Classification}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = apr,
  number     = {2},
  pages      = {109},
  volume     = {2},
  doi        = {10.1007/s42979-021-00504-z},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\JUZ86TVM\\Kamaruddin and Ravi - 2021 - EGRNN++ and PNN++  Parallel and Distributed Neura.pdf:application/pdf},
  language   = {en},
  shorttitle = {{EGRNN}++ and {PNN}++},
  url        = {http://link.springer.com/10.1007/s42979-021-00504-z},
  urldate    = {2021-10-24},
}

@Article{2021i,
  author     = {salami, Yashar and Ebazadeh, Yaser and Khajehvand, Vahid},
  journal    = {Iran Journal of Computer Science},
  title      = {{CE}-{SKE}: cost-effective secure key exchange scheme in {Fog} {Federation}},
  year       = {2021},
  issn       = {2520-8438, 2520-8446},
  month      = apr,
  doi        = {10.1007/s42044-021-00086-2},
  language   = {en},
  shorttitle = {{CE}-{SKE}},
  url        = {http://link.springer.com/10.1007/s42044-021-00086-2},
  urldate    = {2021-10-24},
}

@Article{Mouawad2021,
  author     = {Mouawad, Pauline and Dubnov, Tammuz and Dubnov, Shlomo},
  journal    = {SN Computer Science},
  title      = {Robust {Detection} of {COVID}-19 in {Cough} {Sounds}: {Using} {Recurrence} {Dynamics} and {Variable} {Markov} {Model}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = feb,
  number     = {1},
  pages      = {34},
  volume     = {2},
  doi        = {10.1007/s42979-020-00422-6},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\XEB558YP\\Mouawad et al. - 2021 - Robust Detection of COVID-19 in Cough Sounds Usin.pdf:application/pdf},
  language   = {en},
  shorttitle = {Robust {Detection} of {COVID}-19 in {Cough} {Sounds}},
  url        = {http://link.springer.com/10.1007/s42979-020-00422-6},
  urldate    = {2021-10-24},
}

@Article{Hallappanavar2021,
  author   = {Hallappanavar, Vijay L. and Birje, Mahantesh N.},
  journal  = {Journal of Reliable Intelligent Environments},
  title    = {Prediction of quality of service of fog nodes for service recommendation in fog computing based on trustworthiness of users},
  year     = {2021},
  issn     = {2199-4668, 2199-4676},
  month    = jul,
  doi      = {10.1007/s40860-021-00149-y},
  language = {en},
  url      = {https://link.springer.com/10.1007/s40860-021-00149-y},
  urldate  = {2021-10-24},
}

@Article{Patel2021c,
  author     = {Patel, Harsh and Shah, Manan},
  journal    = {SN Computer Science},
  title      = {Energy {Consumption} and {Price} {Forecasting} {Through} {Data}-{Driven} {Analysis} {Methods}: {A} {Review}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = jul,
  number     = {4},
  pages      = {315},
  volume     = {2},
  doi        = {10.1007/s42979-021-00698-2},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\FMILQTV9\\Patel and Shah - 2021 - Energy Consumption and Price Forecasting Through D.pdf:application/pdf},
  language   = {en},
  shorttitle = {Energy {Consumption} and {Price} {Forecasting} {Through} {Data}-{Driven} {Analysis} {Methods}},
  url        = {https://link.springer.com/10.1007/s42979-021-00698-2},
  urldate    = {2021-10-24},
}

@Article{Kim2021d,
  author   = {Kim, Moon-Hyun and Lee, Jun-Yeong and Raza Shah, Syed Asif and Kim, Tae-Hyung and Noh, Seo-Young},
  journal  = {Journal of Cloud Computing},
  title    = {Min-max exclusive virtual machine placement in cloud computing for scientific data environment},
  year     = {2021},
  issn     = {2192-113X},
  month    = dec,
  number   = {1},
  pages    = {2},
  volume   = {10},
  abstract = {Abstract
            In cloud computing, there is a trade-off between SLAV (Service Level Agreement Violation) and system operating cost. Violation rates can be decreased when using more hosts, which increases system operating costs. Therefore, to manage the resources of those hosts efficiently, finding an optimal balancing point between SLAV and system operating cost is critical. In addition, a cost-effective load balancing approach based on the proper migration of VMs (Virtual Machines) in the hosts is needed. For this purpose, some indicators are also necessary to identify the abnormal hosts that violate SLA. One of the primary indicators, CPU usage, is closely related to energy consumption and can be used to reduce SLAV and energy consumption effectively. Our approach focuses on the special environment such as the cloud environment for the scientific data. Here, most of the jobs are data-intensive and a large amount of disk operations is required. Owing to disk operations are likely to affect the performance degradation of the host, disk bandwidth usage as well as CPU usage should be also considered. In this study, we propose the Min-Max Exclusive VM Placement (MMEVMP) strategy to minimize both SLAV and energy consumption. The current working system called KIAF (KISTI Analysis Facility), the CERN ALICE experimental cloud environment for scientific data analysis, is used to analyze the characteristics of data-intensive jobs within it. In this experiment, a lightweight version of the CloudSim simulator was developed and the results were compared to the other methods of different policies. Our evaluation showed that our proposed strategy can reduce SLA violation reasonably as well as the system operating cost-effectively.},
  doi      = {10.1186/s13677-020-00221-7},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\76AT9EMJ\\Kim et al. - 2021 - Min-max exclusive virtual machine placement in clo.pdf:application/pdf},
  language = {en},
  url      = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-020-00221-7},
  urldate  = {2021-10-24},
}

@Article{Jagdhuber2021,
  author   = {Jagdhuber, Rudolf and Rahnenführer, Jörg},
  journal  = {SN Computer Science},
  title    = {Implications on {Feature} {Detection} {When} {Using} the {Benefit}–{Cost} {Ratio}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = jul,
  number   = {4},
  pages    = {316},
  volume   = {2},
  abstract = {Abstract
            In many practical machine learning applications, there are two objectives: one is to maximize predictive accuracy and the other is to minimize costs of the resulting model. These costs of individual features may be financial costs, but can also refer to other aspects, for example, evaluation time. Feature selection addresses both objectives, as it reduces the number of features and can improve the generalization ability of the model. If costs differ between features, the feature selection needs to trade-off the individual benefit and cost of each feature. A popular trade-off choice is the ratio of both, the benefit–cost ratio (BCR). In this paper, we analyze implications of using this measure with special focus to the ability to distinguish relevant features from noise. We perform simulation studies for different cost and data settings and obtain detection rates of relevant features and empirical distributions of the trade-off ratio. Our simulation studies exposed a clear impact of the cost setting on the detection rate. In situations with large cost differences and small effect sizes, the BCR missed relevant features and preferred cheap noise features. We conclude that a trade-off between predictive performance and costs without a controlling hyperparameter can easily overemphasize very cheap noise features. While the simple benefit–cost ratio offers an easy solution to incorporate costs, it is important to be aware of its risks. Avoiding costs close to 0, rescaling large cost differences, or using a hyperparameter trade-off are ways to counteract the adverse effects exposed in this paper.},
  doi      = {10.1007/s42979-021-00705-6},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\YANJ3K6M\\Jagdhuber and Rahnenführer - 2021 - Implications on Feature Detection When Using the B.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00705-6},
  urldate  = {2021-10-24},
}

@Article{Verma2021a,
  author   = {Verma, Amrit Kumar and Chakraborty, Manomita and Biswas, Saroj Kr.},
  journal  = {SN Computer Science},
  title    = {Breast {Cancer} {Management} {System} {Using} {Decision} {Tree} and {Neural} {Network}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = may,
  number   = {3},
  pages    = {234},
  volume   = {2},
  doi      = {10.1007/s42979-021-00644-2},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\ES92JFZF\\Verma et al. - 2021 - Breast Cancer Management System Using Decision Tre.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00644-2},
  urldate  = {2021-10-24},
}

@Article{Bortolussi2021,
  author   = {Bortolussi, Luca and Cairoli, Francesca and Paoletti, Nicola and Smolka, Scott A. and Stoller, Scott D.},
  journal  = {International Journal on Software Tools for Technology Transfer},
  title    = {Neural predictive monitoring and a comparison of frequentist and {Bayesian} approaches},
  year     = {2021},
  issn     = {1433-2779, 1433-2787},
  month    = aug,
  number   = {4},
  pages    = {615--640},
  volume   = {23},
  abstract = {Abstract
            
              Neural state classification (NSC) is a recently proposed method for runtime predictive monitoring of hybrid automata (HA) using deep neural networks (DNNs). NSC trains a DNN as an approximate
              reachability predictor
              that labels an HA state
              x
              as
              positive
              if an unsafe state is reachable from
              x
              within a given time bound, and labels
              x
              as
              negative
              otherwise. NSC predictors have very high accuracy, yet are prone to prediction errors that can negatively impact reliability. To overcome this limitation, we present
              neural predictive monitoring
              (NPM), a technique that complements NSC predictions with estimates of the predictive uncertainty. These measures yield principled criteria for the rejection of predictions likely to be incorrect, without knowing the true reachability values. We also present an active learning method that significantly reduces the NSC predictor’s error rate and the percentage of rejected predictions. We develop two versions of NPM based, respectively, on the use of frequentist and Bayesian techniques to learn the predictor and the rejection rule. Both versions are highly efficient, with computation times on the order of milliseconds, and effective, managing in our experimental evaluation to successfully reject almost all incorrect predictions. In our experiments on a benchmark suite of six hybrid systems, we found that the frequentist approach consistently outperforms the Bayesian one. We also observed that the Bayesian approach is less practical, requiring a careful and problem-specific choice of hyperparameters.},
  doi      = {10.1007/s10009-021-00623-1},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\7ABIB6SW\\Bortolussi et al. - 2021 - Neural predictive monitoring and a comparison of f.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10009-021-00623-1},
  urldate  = {2021-10-24},
}

@Article{Benifa2021,
  author   = {Benifa, J. V. Bibal and Mini, G. Venifa},
  journal  = {Service Oriented Computing and Applications},
  title    = {Modified {Chebyshev} polynomial-based access control mechanism for secured data access in cloud computing environment},
  year     = {2021},
  issn     = {1863-2386, 1863-2394},
  month    = sep,
  number   = {3},
  pages    = {187--203},
  volume   = {15},
  doi      = {10.1007/s11761-020-00307-9},
  language = {en},
  url      = {https://link.springer.com/10.1007/s11761-020-00307-9},
  urldate  = {2021-10-24},
}

@Article{Dizdarevic2021,
  author   = {Dizdarevic, Jasmina and Avdagic, Zikrija and Orucevic, Fahrudin and Omanovic, Samir},
  journal  = {Journal of Cloud Computing},
  title    = {Advanced consistency management of highly-distributed transactional database in a hybrid cloud environment using novel {R}-{TBC}/{RTA} approach},
  year     = {2021},
  issn     = {2192-113X},
  month    = dec,
  number   = {1},
  pages    = {27},
  volume   = {10},
  abstract = {Abstract
            This paper examines possibilities for improving the existing strategies of consistency management for highly-distributed transactional database in a hybrid cloud environment. With a detailed analysis of the existing consistency models for distributed database and standard strategies including Classic, Quorum and Tree Based Consistency (TBC), it is concluded that an improved advanced model of so-called visible adaptive consistency needs to be applied in a highly-distributed cloud environment, as necessary and sufficient degree of synchronization of all replicas. Along with the proposed model, research and development of an advanced novel strategy for consistency management Rose TBC (R-TBC) approach has been conducted, by improving standard TBC approach. Regarding implementation, a specific agglomerative Rose Tree Algorithm (RTA) has been developed, based on Bayesian hierarchical clustering and Graph Partitioning Algorithm - Multidimensional Data Clustering (GPA-MDC) intelligent partitioning of transactional Cloud Database Management System (CDBMS). The final result is constructed R-TBC model that changes in accordance with dynamic changes of entire heterogeneous CDBMS environment.},
  doi      = {10.1186/s13677-021-00230-0},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\T9MQ73XU\\Dizdarevic et al. - 2021 - Advanced consistency management of highly-distribu.pdf:application/pdf},
  language = {en},
  url      = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-021-00230-0},
  urldate  = {2021-10-24},
}

@Article{Kundu2021,
  author   = {Kundu, Krishan and Halder, Prasun and Mandal, Jyotsna Kumar},
  journal  = {SN Computer Science},
  title    = {Change {Detection} and {Patch} {Analysis} of {Sundarban} {Forest} {During} 1975–2018 {Using} {Remote} {Sensing} and {GIS} {Data}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = sep,
  number   = {5},
  pages    = {364},
  volume   = {2},
  doi      = {10.1007/s42979-021-00749-8},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\X4LYG9TC\\Kundu et al. - 2021 - Change Detection and Patch Analysis of Sundarban F.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00749-8},
  urldate  = {2021-10-24},
}

@Article{Segal2021,
  author   = {Segal, Bradley and Rubin, David M. and Rubin, Grace and Pantanowitz, Adam},
  journal  = {SN Computer Science},
  title    = {Evaluating the {Clinical} {Realism} of {Synthetic} {Chest} {X}-{Rays} {Generated} {Using} {Progressively} {Growing} {GANs}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = jul,
  number   = {4},
  pages    = {321},
  volume   = {2},
  doi      = {10.1007/s42979-021-00720-7},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\2M3TTYC3\\Segal et al. - 2021 - Evaluating the Clinical Realism of Synthetic Chest.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00720-7},
  urldate  = {2021-10-24},
}

@Article{Badr2021,
  author     = {Badr, Youakim and Zhu, Xiaoyang and Alraja, Mansour Naser},
  journal    = {Service Oriented Computing and Applications},
  title      = {Security and privacy in the {Internet} of {Things}: threats and challenges},
  year       = {2021},
  issn       = {1863-2386, 1863-2394},
  month      = oct,
  doi        = {10.1007/s11761-021-00327-z},
  language   = {en},
  shorttitle = {Security and privacy in the {Internet} of {Things}},
  url        = {https://link.springer.com/10.1007/s11761-021-00327-z},
  urldate    = {2021-10-24},
}

@Article{Benhammada2021,
  author   = {Benhammada, Sadek and Amblard, Frédéric and Chikhi, Salim},
  journal  = {New Generation Computing},
  title    = {An {Agent}-{Based} {Model} to {Study} {Informational} {Cascades} in {Financial} {Markets}},
  year     = {2021},
  issn     = {0288-3635, 1882-7055},
  month    = aug,
  number   = {2},
  pages    = {409--436},
  volume   = {39},
  doi      = {10.1007/s00354-021-00133-3},
  language = {en},
  url      = {https://link.springer.com/10.1007/s00354-021-00133-3},
  urldate  = {2021-10-24},
}

@Article{Sengupta2021,
  author     = {Sengupta, Ayan and Roy, Suman and Ranjan, Gaurav},
  journal    = {SN Computer Science},
  title      = {{LJST}: {A} {Semi}-supervised {Joint} {Sentiment}-{Topic} {Model} for {Short} {Texts}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = jul,
  number     = {4},
  pages      = {256},
  volume     = {2},
  doi        = {10.1007/s42979-021-00649-x},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\FPXUWJWB\\Sengupta et al. - 2021 - LJST A Semi-supervised Joint Sentiment-Topic Mode.pdf:application/pdf},
  language   = {en},
  shorttitle = {{LJST}},
  url        = {https://link.springer.com/10.1007/s42979-021-00649-x},
  urldate    = {2021-10-24},
}

@Article{Giani2021,
  author   = {Giani, Annarita and Eldredge, Zachary},
  journal  = {SN Computer Science},
  title    = {Quantum {Computing} {Opportunities} in {Renewable} {Energy}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = sep,
  number   = {5},
  pages    = {393},
  volume   = {2},
  doi      = {10.1007/s42979-021-00786-3},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\TFFDM4AB\\Giani and Eldredge - 2021 - Quantum Computing Opportunities in Renewable Energ.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00786-3},
  urldate  = {2021-10-24},
}

@Article{Sultana2021,
  author   = {Sultana, Nazneen N. and Mandal, Bappaditya and Puhan, N. B.},
  journal  = {SN Computer Science},
  title    = {Deep {Regularized} {Discriminative} {Network}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = jul,
  number   = {4},
  pages    = {235},
  volume   = {2},
  abstract = {Abstract
            Traditional linear discriminant analysis (LDA) approach discards the eigenvalues which are very small or equivalent to zero, but quite often eigenvectors corresponding to zero eigenvalues are the important dimensions for discriminant analysis. We propose an objective function which would utilize both the principal as well as nullspace eigenvalues and simultaneously inherit the class separability information onto its latent space representation. The idea is to build a convolutional neural network (CNN) and perform the regularized discriminant analysis on top of this and train it in an end-to-end fashion. The backpropagation is performed with a suitable optimizer to update the parameters so that the whole CNN approach minimizes the within class variance and maximizes the total class variance information suitable for both multi-class and binary class classification problems. Experimental results on four databases for multiple computer vision classification tasks show the efficacy of our proposed approach as compared to other popular methods.},
  doi      = {10.1007/s42979-021-00647-z},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\GEAZQKEN\\Sultana et al. - 2021 - Deep Regularized Discriminative Network.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00647-z},
  urldate  = {2021-10-24},
}

@Article{Wang2021h,
  author   = {Wang, Chuan and Long, Shun and Zeng, Rongdan and Lu, Yaosheng},
  journal  = {SN Computer Science},
  title    = {Imputation {Method} for {Fetal} {Heart} {Rate} {Signal} {Evaluation} {Based} on {Optimal} {Transport} {Theory}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = nov,
  number   = {6},
  pages    = {454},
  volume   = {2},
  doi      = {10.1007/s42979-021-00805-3},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\S44E2ZNI\\Wang et al. - 2021 - Imputation Method for Fetal Heart Rate Signal Eval.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00805-3},
  urldate  = {2021-10-24},
}

@Article{Verma2021b,
  author   = {Verma, Kanishk and Davis, Brian},
  journal  = {SN Computer Science},
  title    = {Implicit {Aspect}-{Based} {Opinion} {Mining} and {Analysis} of {Airline} {Industry} {Based} on {User}-{Generated} {Reviews}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = jul,
  number   = {4},
  pages    = {286},
  volume   = {2},
  abstract = {Abstract
            
              Mining opinions from reviews has been a field of ever-growing research. These include mining opinions on document level, sentence level and even aspect level. While explicitly mentioned aspects from user-generated texts have been widely researched, very little work has been done in gathering opinions on aspects that are
              implied
              and not explicitly mentioned. Previous work to identify implicit aspects and opinion was limited to syntactic-based classifiers or other machine learning methods trained on restaurant dataset. In this paper, the present is a novel study for extracting and analysing implicit aspects and opinions from airline reviews in English. Through this study, an airline domain-specific aspect-based annotated corpus, and a novel two-way technique that first augments pre-trained word embeddings for sequential with stochastic gradient descent optimized
              conditional random fields (CRF)
              and second using machine and ensemble learning algorithms to classify the implied aspects is devised and developed. This two-way technique resolves double-implicit problem, most encountered by previous work in implicit aspect and opinion text mining. Experiments with a hold-out test set on the first level i.e., entity extraction by optimized CRF yield a result of ROC-AUC score of 96\% and
              F
              1
              score of 94\% outperforming few baseline systems. Further experiments with a range of machine and ensemble learning classifier algorithms to classify implied aspects and opinions for each entity yields a result of ROC-AUC score ranging from 71 to 94.8\% for all implied entities. This two-level technique for implicit aspect extraction and classification outperforms many baseline systems in this domain.},
  doi      = {10.1007/s42979-021-00669-7},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\TIMU35XB\\Verma and Davis - 2021 - Implicit Aspect-Based Opinion Mining and Analysis .pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00669-7},
  urldate  = {2021-10-24},
}

@Article{Song2021a,
  author   = {Song, Mofei and Han, Xu and Liu, Xiao Fan and Li, Qian},
  journal  = {Journal of Cloud Computing},
  title    = {Visibility estimation via deep label distribution learning in cloud environment},
  year     = {2021},
  issn     = {2192-113X},
  month    = dec,
  number   = {1},
  pages    = {46},
  volume   = {10},
  abstract = {Abstract
            The visibility estimation of the environment has great research and application value in the fields of production. To estimate the visibility, we can utilize the camera to obtain some images as evidence. However, the camera only solves the image acquisition problem, and the analysis of image visibility requires strong computational power. To realize effective and efficient visibility estimation, we employ the cloud computing technique to realize high-through image analysis. Our method combines cloud computing and image-based visibility estimation into a powerful and efficient monitoring framework. To train an accurate model for visibility estimation, it is important to obtain the precise ground truth for every image. However, the ground-truth visibility is difficult to be labeled due to its high ambiguity. To solve this problem, we associate a label distribution to each image. The label distribution contains all the possible visibilities with their probabilities. To learn from such annotation, we employ a CNN-RNN model for visibility-aware feature extraction and a conditional probability neural network for distribution prediction. The estimation result can be improved by fusing the predicting results of multiple images from different views. Our experiment shows that labeling the image with visibility distribution can boost the learning performance, and our method can obtain the visibility from the image efficiently.},
  doi      = {10.1186/s13677-021-00261-7},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\B3BZI6CE\\Song et al. - 2021 - Visibility estimation via deep label distribution .pdf:application/pdf},
  language = {en},
  url      = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-021-00261-7},
  urldate  = {2021-10-24},
}

@Article{Kutrib2021,
  author   = {Kutrib, Martin and Malcher, Andreas and Schneider, Christian},
  journal  = {Acta Informatica},
  title    = {Finite automata with undirected state graphs},
  year     = {2021},
  issn     = {0001-5903, 1432-0525},
  month    = may,
  abstract = {Abstract
            
              We investigate finite automata whose state graphs are undirected. This means that for any transition from state
              p
              to
              q
              consuming some letter
              a
              from the input there exists a symmetric transition from state
              q
              to
              p
              consuming a letter
              a
              as well. So, the corresponding language families are subregular, and in particular in the deterministic case, subreversible. In detail, we study the operational descriptional complexity of deterministic and nondeterministic undirected finite automata. To this end, the different types of automata on alphabets with few letters are characterized. Then, the operational state complexity of the Boolean operations as well as the operations concatenation and iteration is investigated, where tight upper and lower bounds are derived for unary as well as arbitrary alphabets under the condition that the corresponding language classes are closed under the operation considered.},
  doi      = {10.1007/s00236-021-00402-0},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\CSQCTDX9\\Kutrib et al. - 2021 - Finite automata with undirected state graphs.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s00236-021-00402-0},
  urldate  = {2021-10-24},
}

@Article{Loginov2021,
  author   = {Loginov, Alexander and Heywood, Malcolm and Wilson, Garnett},
  journal  = {Genetic Programming and Evolvable Machines},
  title    = {Stock selection heuristics for performing frequent intraday trading with genetic programming},
  year     = {2021},
  issn     = {1389-2576, 1573-7632},
  month    = mar,
  number   = {1},
  pages    = {35--72},
  volume   = {22},
  doi      = {10.1007/s10710-020-09390-5},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10710-020-09390-5},
  urldate  = {2021-10-24},
}

@Article{Raveendran2021,
  author   = {Raveendran, Jayasree and Soren, John and Ramanathan, V. and Sudharshan, R. and Mahalanabis, Suman and Suresh, A. K. and Balaraman, Vivek},
  journal  = {CSI Transactions on ICT},
  title    = {Behavior science led technology for financial wellness},
  year     = {2021},
  issn     = {2277-9078, 2277-9086},
  month    = jun,
  number   = {2},
  pages    = {115--125},
  volume   = {9},
  doi      = {10.1007/s40012-021-00331-w},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\MZ8JQXVJ\\Raveendran et al. - 2021 - Behavior science led technology for financial well.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s40012-021-00331-w},
  urldate  = {2021-10-24},
}

@Article{Iooss2021,
  author   = {Iooss, Guillaume and Alias, Christophe and Rajopadhye, Sanjay},
  journal  = {International Journal of Parallel Programming},
  title    = {Monoparametric {Tiling} of {Polyhedral} {Programs}},
  year     = {2021},
  issn     = {0885-7458, 1573-7640},
  month    = jun,
  number   = {3},
  pages    = {376--409},
  volume   = {49},
  doi      = {10.1007/s10766-021-00694-2},
  file     = {Submitted Version:C\:\\Users\\Sina\\Zotero\\storage\\B3TUX8T6\\Iooss et al. - 2021 - Monoparametric Tiling of Polyhedral Programs.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10766-021-00694-2},
  urldate  = {2021-10-24},
}

@Article{Hegade2021a,
  author   = {Hegade, Prakash and Lingadhal, Nikhil and Jain, Sourabh and Khan, Usman and Vijeth, K. L.},
  journal  = {SN Computer Science},
  title    = {Crawler by {Contextual} {Inference}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = may,
  number   = {3},
  pages    = {216},
  volume   = {2},
  doi      = {10.1007/s42979-021-00574-z},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\JP9XCXAL\\Hegade et al. - 2021 - Crawler by Contextual Inference.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00574-z},
  urldate  = {2021-10-24},
}

@Article{Wu2021c,
  author   = {Wu, Ephrem},
  journal  = {SN Computer Science},
  title    = {Learning {Accurate} {Integer} {Transformer} {Machine}-{Translation} {Models}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = jul,
  number   = {4},
  pages    = {291},
  volume   = {2},
  doi      = {10.1007/s42979-021-00688-4},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\6ITL7FUJ\\Wu - 2021 - Learning Accurate Integer Transformer Machine-Tran.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00688-4},
  urldate  = {2021-10-24},
}

@Article{Iwasokun2021,
  author   = {Iwasokun, Gabriel Babatunde and Olaoye, Monday Olutayo},
  journal  = {Iran Journal of Computer Science},
  title    = {Discrete transformation technique for video compression},
  year     = {2021},
  issn     = {2520-8438, 2520-8446},
  month    = mar,
  doi      = {10.1007/s42044-021-00085-3},
  language = {en},
  url      = {http://link.springer.com/10.1007/s42044-021-00085-3},
  urldate  = {2021-10-24},
}

@Article{Guellil2021,
  author     = {Guellil, Imane and Adeel, Ahsan and Azouaou, Faical and Benali, Fodil and Hachani, Ala-Eddine and Dashtipour, Kia and Gogate, Mandar and Ieracitano, Cosimo and Kashani, Reza and Hussain, Amir},
  journal    = {SN Computer Science},
  title      = {A {Semi}-supervised {Approach} for {Sentiment} {Analysis} of {Arab}(ic+izi) {Messages}: {Application} to the {Algerian} {Dialect}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = apr,
  number     = {2},
  pages      = {118},
  volume     = {2},
  abstract   = {Abstract
            In this paper, we propose a semi-supervised approach for sentiment analysis of Arabic and its dialects. This approach is based on a sentiment corpus, constructed automatically and reviewed manually by Algerian dialect native speakers. This approach consists of constructing and applying a set of deep learning algorithms to classify the sentiment of Arabic messages as positive or negative. It was applied on Facebook messages written in Modern Standard Arabic (MSA) as well as in Algerian dialect (DALG, which is a low resourced-dialect, spoken by more than 40 million people) with both scripts Arabic and Arabizi. To handle Arabizi, we consider both options: transliteration (largely used in the research literature for handling Arabizi) and translation (never used in the research literature for handling Arabizi). For highlighting the effectiveness of a semi-supervised approach, we carried out different experiments using both corpora for the training (i.e. the corpus constructed automatically and the one that was reviewed manually). The experiments were done on many test corpora dedicated to MSA/DALG, which were proposed and evaluated in the research literature. Both classifiers are used, shallow and deep learning classifiers such as Random Forest (RF), Logistic Regression(LR) Convolutional Neural Network (CNN) and Long short-term memory (LSTM). These classifiers are combined with word embedding models such as Word2vec and fastText that were used for sentiment classification. Experimental results (F1 score up to 95\% for intrinsic experiments and up to 89\% for extrinsic experiments) showed that the proposed system outperforms the existing state-of-the-art methodologies (the best improvement is up to 25\%).},
  doi        = {10.1007/s42979-021-00510-1},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\ELT4US6K\\Guellil et al. - 2021 - A Semi-supervised Approach for Sentiment Analysis .pdf:application/pdf},
  language   = {en},
  shorttitle = {A {Semi}-supervised {Approach} for {Sentiment} {Analysis} of {Arab}(ic+izi) {Messages}},
  url        = {http://link.springer.com/10.1007/s42979-021-00510-1},
  urldate    = {2021-10-24},
}

@Article{Noack2021,
  author   = {Noack, Adam and Ahern, Isaac and Dou, Dejing and Li, Boyang},
  journal  = {SN Computer Science},
  title    = {An {Empirical} {Study} on the {Relation} {Between} {Network} {Interpretability} and {Adversarial} {Robustness}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = feb,
  number   = {1},
  pages    = {32},
  volume   = {2},
  doi      = {10.1007/s42979-020-00390-x},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\H3IGBLT7\\Noack et al. - 2021 - An Empirical Study on the Relation Between Network.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s42979-020-00390-x},
  urldate  = {2021-10-24},
}

@Article{Katsura2021,
  author     = {Katsura, Yasuhiro and Uchida, Masato},
  journal    = {SN Computer Science},
  title      = {Candidate-{Label} {Learning}: {A} {Generalization} of {Ordinary}-{Label} {Learning} and {Complementary}-{Label} {Learning}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = jul,
  number     = {4},
  pages      = {288},
  volume     = {2},
  doi        = {10.1007/s42979-021-00681-x},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\P9KKR6RW\\Katsura and Uchida - 2021 - Candidate-Label Learning A Generalization of Ordi.pdf:application/pdf},
  language   = {en},
  shorttitle = {Candidate-{Label} {Learning}},
  url        = {https://link.springer.com/10.1007/s42979-021-00681-x},
  urldate    = {2021-10-24},
}

@Article{Mehanna2021,
  author   = {Mehanna, Yassin S. and Mahmuddin, M.},
  journal  = {SN Computer Science},
  title    = {The {Effect} of {Pre}-processing {Techniques} on the {Accuracy} of {Sentiment} {Analysis} {Using} {Bag}-of-{Concepts} {Text} {Representation}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = jul,
  number   = {4},
  pages    = {237},
  volume   = {2},
  doi      = {10.1007/s42979-021-00453-7},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\XBEFCY3J\\Mehanna and Mahmuddin - 2021 - The Effect of Pre-processing Techniques on the Acc.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00453-7},
  urldate  = {2021-10-24},
}

@Article{Lones2021,
  author   = {Lones, Michael A.},
  journal  = {Genetic Programming and Evolvable Machines},
  title    = {Evolving continuous optimisers from scratch},
  year     = {2021},
  issn     = {1389-2576, 1573-7632},
  month    = oct,
  abstract = {Abstract
            This work uses genetic programming to explore the space of continuous optimisers, with the goal of discovering novel ways of doing optimisation. In order to keep the search space broad, the optimisers are evolved from scratch using Push, a Turing-complete, general-purpose, language. The resulting optimisers are found to be diverse, and explore their optimisation landscapes using a variety of interesting, and sometimes unusual, strategies. Significantly, when applied to problems that were not seen during training, many of the evolved optimisers generalise well, and often outperform existing optimisers. This supports the idea that novel and effective forms of optimisation can be discovered in an automated manner. This paper also shows that pools of evolved optimisers can be hybridised to further increase their generality, leading to optimisers that perform robustly over a broad variety of problem types and sizes.},
  doi      = {10.1007/s10710-021-09414-8},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\LSUFHY6A\\Lones - 2021 - Evolving continuous optimisers from scratch.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10710-021-09414-8},
  urldate  = {2021-10-24},
}

@Article{Movahedi2021,
  author   = {Movahedi, Zahra and Defude, Bruno and Hosseininia, Amir mohammad},
  journal  = {Journal of Cloud Computing},
  title    = {An efficient population-based multi-objective task scheduling approach in fog computing systems},
  year     = {2021},
  issn     = {2192-113X},
  month    = dec,
  number   = {1},
  pages    = {53},
  volume   = {10},
  abstract = {Abstract
            With the rapid development of Internet of Things (IoT) technologies, fog computing has emerged as an extension to the cloud computing that relies on fog nodes with distributed resources at the edge of network. Fog nodes offer computing and storage resources opportunities to resource-less IoT devices which are not capable to support IoT applications with computation-intensive requirements. Furthermore, the closeness of fog nodes to IoT devices satisfies the low-latency requirements of IoT applications. However, due to the high IoT task offloading requests and fog resource limitations, providing an optimal task scheduling solution that considers a number of quality metrics is essential. In this paper, we address the task scheduling problem with the aim of optimizing the time and energy consumption as two QoS parameters in the fog context. First, we present a fog-based architecture for handling the task scheduling requests to provide the optimal solutions. Second, we formulate the task scheduling problem as an Integer Linear Programming (ILP) optimization model considering both time and fog energy consumption. Finally, we propose an advanced approach called Opposition-based Chaotic Whale Optimization Algorithm (OppoCWOA) to enhance the performance of the original WOA for solving the modelled task scheduling problem in a timely manner. The efficiency of the proposed OppoCWOA is shown by providing extensive simulations and comparisons with the original WOA and some existing meta-heuristic algorithms such as Artificial Bee Colony (ABC), Particle Swarm Optimization (PSO), and Genetic Algorithm (GA).},
  doi      = {10.1186/s13677-021-00264-4},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\FEA33FHR\\Movahedi et al. - 2021 - An efficient population-based multi-objective task.pdf:application/pdf},
  language = {en},
  url      = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-021-00264-4},
  urldate  = {2021-10-24},
}

@Article{Cruz2021,
  author     = {Cruz, Jose and Mamani, Wilson and Romero, Christian and Pineda, Ferdinand},
  journal    = {SN Computer Science},
  title      = {Selection of {Characteristics} by {Hybrid} {Method}: {RFE}, {Ridge}, {Lasso}, and {Bayesian} for the {Power} {Forecast} for a {Photovoltaic} {System}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = may,
  number     = {3},
  pages      = {202},
  volume     = {2},
  doi        = {10.1007/s42979-021-00584-x},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\VCCYGNDP\\Cruz et al. - 2021 - Selection of Characteristics by Hybrid Method RFE.pdf:application/pdf},
  language   = {en},
  shorttitle = {Selection of {Characteristics} by {Hybrid} {Method}},
  url        = {https://link.springer.com/10.1007/s42979-021-00584-x},
  urldate    = {2021-10-24},
}

@Article{Lima2021a,
  author     = {Lima, Daniel M. and Rodrigues-Jr, Jose F. and Brandoli, Bruno and Goeuriot, Lorraine and Amer-Yahia, Sihem},
  journal    = {SN Computer Science},
  title      = {{DermaDL}: {Advanced} {Convolutional} {Neural} {Networks} for {Computer}-{Aided} {Skin}-{Lesion} {Classification}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = jul,
  number     = {4},
  pages      = {253},
  volume     = {2},
  doi        = {10.1007/s42979-021-00641-5},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\44JEBFHQ\\Lima et al. - 2021 - DermaDL Advanced Convolutional Neural Networks fo.pdf:application/pdf},
  language   = {en},
  shorttitle = {{DermaDL}},
  url        = {https://link.springer.com/10.1007/s42979-021-00641-5},
  urldate    = {2021-10-24},
}

@Article{Serramia2021,
  author   = {Serramia, Marc and López-Sánchez, Maite and Moretti, Stefano and Rodríguez-Aguilar, Juan Antonio},
  journal  = {Autonomous Agents and Multi-Agent Systems},
  title    = {On the dominant set selection problem and its application to value alignment},
  year     = {2021},
  issn     = {1387-2532, 1573-7454},
  month    = oct,
  number   = {2},
  pages    = {42},
  volume   = {35},
  abstract = {Abstract
            
              Decision makers can often be confronted with the need to select a subset of objects from a set of candidate objects by just counting on preferences regarding the objects’ features. Here we formalise this problem as the
              dominant set selection problem
              . Solving this problem amounts to finding the preferences over all possible sets of objects. We accomplish so by: (i) grounding the preferences over features to preferences over the objects themselves; and (ii) lifting these preferences to preferences over all possible sets of objects. This is achieved by combining lex-cel –a method from the literature—with our novel anti-lex-cel method, which we formally (and thoroughly) study. Furthermore, we provide a binary integer program encoding to solve the problem. Finally, we illustrate our overall approach by applying it to the selection of value-aligned norm systems.},
  doi      = {10.1007/s10458-021-09519-5},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\YF7NWW7X\\Serramia et al. - 2021 - On the dominant set selection problem and its appl.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10458-021-09519-5},
  urldate  = {2021-10-24},
}

@Article{Dai2021a,
  author   = {Dai, Siyu and Hofmann, Andreas and Williams, Brian},
  journal  = {SN Computer Science},
  title    = {Fast-{Reactive} {Probabilistic} {Motion} {Planning} for {High}-{Dimensional} {Robots}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = nov,
  number   = {6},
  pages    = {484},
  volume   = {2},
  doi      = {10.1007/s42979-021-00878-0},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\VWF8EKQZ\\Dai et al. - 2021 - Fast-Reactive Probabilistic Motion Planning for Hi.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00878-0},
  urldate  = {2021-10-24},
}

@Article{Sipper2021a,
  author   = {Sipper, Moshe and Moore, Jason H.},
  journal  = {Genetic Programming and Evolvable Machines},
  title    = {Symbolic-regression boosting},
  year     = {2021},
  issn     = {1389-2576, 1573-7632},
  month    = sep,
  number   = {3},
  pages    = {357--381},
  volume   = {22},
  doi      = {10.1007/s10710-021-09400-0},
  language = {en},
  url      = {https://link.springer.com/10.1007/s10710-021-09400-0},
  urldate  = {2021-10-24},
}

@Article{Cecillon2021,
  author   = {Cécillon, Noé and Labatut, Vincent and Dufour, Richard and Linarès, Georges},
  journal  = {SN Computer Science},
  title    = {Graph {Embeddings} for {Abusive} {Language} {Detection}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = feb,
  number   = {1},
  pages    = {37},
  volume   = {2},
  doi      = {10.1007/s42979-020-00413-7},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\V75HUU9C\\Cécillon et al. - 2021 - Graph Embeddings for Abusive Language Detection.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s42979-020-00413-7},
  urldate  = {2021-10-24},
}

@Article{Ohno2021,
  author   = {Ohno, Hiroshi},
  journal  = {SN Computer Science},
  title    = {Analysis of {Multi}-objective {Bayesian} {Optimization} {Using} {Random} {Scalarizations} for {Correlated} {Observations}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = may,
  number   = {3},
  pages    = {214},
  volume   = {2},
  doi      = {10.1007/s42979-021-00505-y},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\SX5XNXUL\\Ohno - 2021 - Analysis of Multi-objective Bayesian Optimization .pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00505-y},
  urldate  = {2021-10-24},
}

@Article{Chen2021g,
  author     = {Chen, Tianba and Li, Wei and Sun, YuKang and Li, Yunchun},
  journal    = {International Journal of Parallel Programming},
  title      = {M-{DRL}: {Deep} {Reinforcement} {Learning} {Based} {Coflow} {Traffic} {Scheduler} with {MLFQ} {Threshold} {Adaption}},
  year       = {2021},
  issn       = {0885-7458, 1573-7640},
  month      = oct,
  number     = {5},
  pages      = {646--657},
  volume     = {49},
  doi        = {10.1007/s10766-021-00711-4},
  language   = {en},
  shorttitle = {M-{DRL}},
  url        = {https://link.springer.com/10.1007/s10766-021-00711-4},
  urldate    = {2021-10-24},
}

@Article{Dong2021a,
  author   = {Dong, Wenlu and Gao, Shang and Yang, Xibei and Yu, Hualong},
  journal  = {SN Computer Science},
  title    = {An {Exploration} of {Online} {Missing} {Value} {Imputation} in {Non}-stationary {Data} {Stream}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = apr,
  number   = {2},
  pages    = {57},
  volume   = {2},
  doi      = {10.1007/s42979-021-00459-1},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\4C6WS8XR\\Dong et al. - 2021 - An Exploration of Online Missing Value Imputation .pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s42979-021-00459-1},
  urldate  = {2021-10-24},
}

@Article{Baishya2021,
  author     = {Baishya, Dibyajyoti and Deka, Joon Jyoti and Dey, Gaurav and Singh, Pranav Kumar},
  journal    = {SN Computer Science},
  title      = {{SAFER}: {Sentiment} {Analysis}-{Based} {FakE} {Review} {Detection} in {E}-{Commerce} {Using} {Deep} {Learning}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = nov,
  number     = {6},
  pages      = {479},
  volume     = {2},
  doi        = {10.1007/s42979-021-00918-9},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\F88VM7S3\\Baishya et al. - 2021 - SAFER Sentiment Analysis-Based FakE Review Detect.pdf:application/pdf},
  language   = {en},
  shorttitle = {{SAFER}},
  url        = {https://link.springer.com/10.1007/s42979-021-00918-9},
  urldate    = {2021-10-24},
}

@Article{Kumar2021b,
  author   = {Kumar, Mohinder and Jindal, Manish Kumar},
  journal  = {SN Computer Science},
  title    = {Benchmarks for {Designing} a {Secure} {Devanagari} {CAPTCHA}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = feb,
  number   = {1},
  pages    = {45},
  volume   = {2},
  doi      = {10.1007/s42979-020-00445-z},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\GLB5VKM7\\Kumar and Jindal - 2021 - Benchmarks for Designing a Secure Devanagari CAPTC.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s42979-020-00445-z},
  urldate  = {2021-10-24},
}

@Article{Goutham2021,
  author   = {Goutham, Veerapu and Harigovindan, V. P.},
  journal  = {SN Computer Science},
  title    = {Analytical {Modelling} and {Performance} {Enhancement} of {Cooperative} {HARQ} {Scheme} for {Underwater} {Acoustic} {Sensor} {Networks}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = apr,
  number   = {2},
  pages    = {108},
  volume   = {2},
  doi      = {10.1007/s42979-021-00470-6},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\VZIYPZHC\\Goutham and Harigovindan - 2021 - Analytical Modelling and Performance Enhancement o.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s42979-021-00470-6},
  urldate  = {2021-10-24},
}

@Article{Pu2021,
  author   = {Pu, Tianjiao and Wang, Xinying and Cao, Yifan and Liu, Zhicheng and Qiu, Chao and Qiao, Ji and Zhang, Shuhua},
  journal  = {Journal of Cloud Computing},
  title    = {Power flow adjustment for smart microgrid based on edge computing and multi-agent deep reinforcement learning},
  year     = {2021},
  issn     = {2192-113X},
  month    = dec,
  number   = {1},
  pages    = {48},
  volume   = {10},
  abstract = {Abstract
            In current power grids, a massive amount of power equipment raises various emerging requirements, e.g., data perception, information transmission, and real-time control. The existing cloud computing paradigm is stubborn to address issues and challenges such as rapid response and local autonomy. Microgrids contain diverse and adjustable power components, making the power system complex and difficult to optimize. The existing traditional adjusting methods are manual and centralized, which requires many human resources with expert experience. The adjustment method based on edge intelligence can effectively leverage ubiquitous computing capacities to provide distributed intelligent solutions with lots of research issues to be reckoned with. To address this challenge, we consider a power control framework combining edge computing and reinforcement learning, which makes full use of edge nodes to sense network state and control power equipment to achieve the goal of fast response and local autonomy. Additionally, we focus on the non-convergence problem of power flow calculation, and combine deep reinforcement learning and multi-agent methods to realize intelligent decisions, with designing the model such as state, action, and reward. Our method improves the efficiency and scalability compared with baseline methods. The simulation results demonstrate the effectiveness of our method with intelligent adjusting and stable operation under various conditions.},
  doi      = {10.1186/s13677-021-00259-1},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\J9ILY95Q\\Pu et al. - 2021 - Power flow adjustment for smart microgrid based on.pdf:application/pdf},
  language = {en},
  url      = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-021-00259-1},
  urldate  = {2021-10-24},
}

@Article{Philippsen2021,
  author     = {Philippsen, Anja},
  journal    = {KI - Künstliche Intelligenz},
  title      = {Goal-{Directed} {Exploration} for {Learning} {Vowels} and {Syllables}: {A} {Computational} {Model} of {Speech} {Acquisition}},
  year       = {2021},
  issn       = {0933-1875, 1610-1987},
  month      = mar,
  number     = {1},
  pages      = {53--70},
  volume     = {35},
  abstract   = {Abstract
            Infants learn to speak rapidly during their first years of life, gradually improving from simple vowel-like sounds to larger consonant-vowel complexes. Learning to control their vocal tract in order to produce meaningful speech sounds is a complex process which requires to learn the relationship between motor and sensory processes. In this paper, a computational framework is proposed that models the problem of learning articulatory control for a physiologically plausible 3-D vocal tract model using a developmentally-inspired approach. The system babbles and explores efficiently in a low-dimensional space of goals that are relevant to the learner in its synthetic environment. The learning process is goal-directed and self-organized, and yields an inverse model of the mapping between sensory space and motor commands. This study provides a unified framework that can be used for learning static as well as dynamic motor representations. The successful learning of vowel and syllable sounds as well as the benefit of active and adaptive learning strategies are demonstrated. Categorical perception is found in the acquired models, suggesting that the framework has the potential to replicate phenomena of human speech acquisition.},
  doi        = {10.1007/s13218-021-00704-y},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\QWWT53HY\\Philippsen - 2021 - Goal-Directed Exploration for Learning Vowels and .pdf:application/pdf},
  language   = {en},
  shorttitle = {Goal-{Directed} {Exploration} for {Learning} {Vowels} and {Syllables}},
  url        = {http://link.springer.com/10.1007/s13218-021-00704-y},
  urldate    = {2021-10-24},
}

@Article{Swapnarekha2021,
  author   = {Swapnarekha, H. and Behera, Himansu Sekhar and Nayak, Janmenjoy and Naik, Bighnaraj and Kumar, P. Suresh},
  journal  = {SN Computer Science},
  title    = {Multiplicative {Holts} {Winter} {Model} for {Trend} {Analysis} and {Forecasting} of {COVID}-19 {Spread} in {India}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = sep,
  number   = {5},
  pages    = {416},
  volume   = {2},
  doi      = {10.1007/s42979-021-00808-0},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\FRTSZBHW\\Swapnarekha et al. - 2021 - Multiplicative Holts Winter Model for Trend Analys.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00808-0},
  urldate  = {2021-10-24},
}

@Article{Alornyo2021,
  author   = {Alornyo, Seth and Mohammed, Mustapha Adamu and Anibrika, Bright Selorm and Asante, Michael},
  journal  = {SN Computer Science},
  title    = {{ID}-{Based} {Plaintext} {Checkable} {Signcryption} with {Equality} {Test} in {Healthcare} {Systems}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = feb,
  number   = {1},
  pages    = {52},
  volume   = {2},
  doi      = {10.1007/s42979-020-00436-0},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\3E9ZC45Q\\Alornyo et al. - 2021 - ID-Based Plaintext Checkable Signcryption with Equ.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s42979-020-00436-0},
  urldate  = {2021-10-24},
}

@Article{Kumar2021c,
  author   = {Kumar, J. Senthil and Balamurugan, S. Appavu alias and Sasikala, S.},
  journal  = {SN Computer Science},
  title    = {Analysis of {Deep} {Learning} {Techniques} for {Tuberculosis} {Disease}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = jul,
  number   = {4},
  pages    = {302},
  volume   = {2},
  doi      = {10.1007/s42979-021-00680-y},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\STXJI94K\\Kumar et al. - 2021 - Analysis of Deep Learning Techniques for Tuberculo.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00680-y},
  urldate  = {2021-10-24},
}

@Article{Kahn2021,
  author   = {Kahn, Ken and Winters, Niall},
  journal  = {KI - Künstliche Intelligenz},
  title    = {Learning by {Enhancing} {Half}-{Baked} {AI} {Projects}},
  year     = {2021},
  issn     = {0933-1875, 1610-1987},
  month    = jun,
  number   = {2},
  pages    = {201--205},
  volume   = {35},
  abstract = {Abstract
            We have developed thirty sample artificial intelligence (AI) programs in a form suitable for enhancement by non-expert programmers. The projects are implemented in the Snap! blocks language and can be run in modern web browsers. These projects have been designed to be modifiable by school students and have been iteratively developed with over 100 students. The projects involve speech synthesis, speech and image recognition, natural language processing, and deep machine learning. They illustrate a variety of AI capabilities, concepts, and techniques. The intent is to provide students with hands-on experience with AI programming so they come to understand the possibilities, problems, strengths, and weaknesses of AI today.},
  doi      = {10.1007/s13218-021-00732-8},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\XV84M9QN\\Kahn and Winters - 2021 - Learning by Enhancing Half-Baked AI Projects.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s13218-021-00732-8},
  urldate  = {2021-10-24},
}

@Article{Staahl2021,
  author   = {Ståhl, Niclas and Mathiason, Gunnar and Alcacoas, Dellainey},
  journal  = {SN Computer Science},
  title    = {Using {Reinforcement} {Learning} for {Generating} {Polynomial} {Models} to {Explain} {Complex} {Data}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = apr,
  number   = {2},
  pages    = {103},
  volume   = {2},
  abstract = {Abstract
            
              Basic oxygen steel making is a complex chemical and physical industrial process that reduces a mix of pig iron and recycled scrap into low-carbon steel. Good understanding of the process and the ability to predict how it will evolve requires long operator experience, but this can be augmented with process target prediction systems. Such systems may use machine learning to learn a model of the process based on a long process history, and have an advantage in that they can make use of vastly more process parameters than operators can comprehend. While it has become less of a challenge to build such prediction systems using machine learning algorithms, actual production implementations are rare. The hidden reasoning of complex prediction model and lack of transparency prevents operator trust, even for models that show high accuracy predictions. To express model behaviour and thereby increasing transparency we develop a reinforcement learning (RL) based agent approach, which task is to generate short polynomials that can explain the model of the process from what it has learnt from process data. The RL agent is rewarded on how well it generates polynomials that can predict the process from a smaller subset of the process parameters. Agent training is done with the REINFORCE algorithm, which enables the sampling of multiple concurrently plausible polynomials. Having multiple polynomials, process developers can evaluate several alternative and plausible explanations, as observed in the historic process data. The presented approach gives both a trained generative model and a set of polynomials that can explain the process. The performance of the polynomials is as good as or better than more complex and less interpretable models. Further, the relative simplicity of the resulting polynomials allows good generalisation to fit new instances of data. The best of the resulting polynomials in our evaluation achieves a better
              
                
                  \$\$R{\textasciicircum}2\$\$
                  
                    
                      R
                      2
                    
                  
                
              
              score on the test set in comparison to the other machine learning models evaluated.},
  doi      = {10.1007/s42979-021-00488-w},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\SQC93ZJN\\Ståhl et al. - 2021 - Using Reinforcement Learning for Generating Polyno.pdf:application/pdf},
  language = {en},
  url      = {http://link.springer.com/10.1007/s42979-021-00488-w},
  urldate  = {2021-10-24},
}

@Article{Bakshi2021,
  author   = {Bakshi, Aarti and Kopparapu, Sunil Kumar},
  journal  = {SN Computer Science},
  title    = {Improving {Indian} {Spoken}-{Language} {Identification} by {Feature} {Selection} in {Duration} {Mismatch} {Framework}},
  year     = {2021},
  issn     = {2662-995X, 2661-8907},
  month    = nov,
  number   = {6},
  pages    = {442},
  volume   = {2},
  doi      = {10.1007/s42979-021-00750-1},
  file     = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\FL3MYIPH\\Bakshi and Kopparapu - 2021 - Improving Indian Spoken-Language Identification by.pdf:application/pdf},
  language = {en},
  url      = {https://link.springer.com/10.1007/s42979-021-00750-1},
  urldate  = {2021-10-24},
}

@Article{Sahu2021,
  author     = {Sahu, Neerja and Peng, Dongming and Sharif, Hamid},
  journal    = {SN Computer Science},
  title      = {Diagnosis-{Steganography}-{Transmission}: {An} {Innovative} {Integrated} {Paradigm} for {ECG} {Healthcare}},
  year       = {2021},
  issn       = {2662-995X, 2661-8907},
  month      = jul,
  number     = {4},
  pages      = {332},
  volume     = {2},
  doi        = {10.1007/s42979-021-00721-6},
  file       = {Full Text:C\:\\Users\\Sina\\Zotero\\storage\\LLUVZ6DF\\Sahu et al. - 2021 - Diagnosis-Steganography-Transmission An Innovativ.pdf:application/pdf},
  language   = {en},
  shorttitle = {Diagnosis-{Steganography}-{Transmission}},
  url        = {https://link.springer.com/10.1007/s42979-021-00721-6},
  urldate    = {2021-10-24},
}

@Comment{jabref-meta: databaseType:bibtex;}
